{"version":3,"file":"index.esm.js","sources":["../src/utils/api.tsx","../src/utils/constants.tsx","../src/contexts/AuthContext.tsx","../src/api/productsApi.tsx","../src/contexts/ClientProductContext.tsx","../src/contexts/CartContext.tsx","../src/contexts/AppUserContext.ts","../src/api/storeApi.tsx","../src/contexts/ClientStoreContext.tsx","../src/api/collectionsApi.tsx","../src/contexts/CollectionContext.tsx","../src/api/ordersApi.tsx","../src/contexts/OrderContext.tsx","../src/contexts/ThemeContext.tsx","../src/hooks/convertToCurrency.ts","../src/hooks/formatPhoneNumber.ts","../src/hooks/ExternalLink.tsx","../src/hooks/generateUUID.tsx","../src/hooks/stripeConverter.tsx","../src/hooks/useClientOnlyValue.ts","../src/model-sample-data/sample-order.tsx","../src/model-sample-data/sample-product.tsx","../src/utils/Routes.tsx","../src/utils/storage.tsx","../src/utils/theme.tsx","../src/components/banner/BannerVOne.tsx","../src/components/divider/Divider.tsx","../src/components/banner/PromoBannerCard.tsx","../src/components/buttons/MyPressable.tsx","../src/components/buttons/MyButton.tsx","../src/components/card/ProductCardV2.tsx","../src/components/card/ProductCardView.tsx","../src/components/card/TalentCard.tsx","../src/components/card/OrderCrudCard.tsx","../src/components/delete/DeleteSectionView.tsx","../src/components/search/SearchBarVOne.tsx","../src/components/extract/ExtractSetting.tsx","../src/components/other/cards/other/ProductRow.tsx","../src/components/pages/home/TopSectionHeader.tsx","../src/components/pages/home/Carousel.tsx","../src/components/pages/home/Headings.tsx","../src/components/home/HomeDesignOne.tsx","../src/components/search/SearchBarVOneButton.tsx","../src/components/home/TopHomeSeaction.tsx","../src/components/home/HomeDesignTwo.tsx","../src/components/interfaces/MyAlert.tsx","../src/components/layouts/AuthLayout.tsx","../src/components/layouts/CoreLayout.tsx","../src/components/layouts/RootLayout.tsx","../src/components/layouts/TabLayout.tsx","../src/components/link/SettingsItemLink.tsx","../src/components/other/general/Styles.tsx","../src/components/other/cart/CartCard.tsx","../src/api/paymentApi.tsx","../src/components/pages/cart/PaymentPayScreen.tsx","../src/components/pages/cart/CartPageVOne.tsx","../src/components/pages/client-order/ClientNoOrdersView.tsx","../src/components/pages/client-order/ClientOrderCard.tsx","../src/components/pages/client-order/ClientOrderDetails.tsx","../src/components/pages/client-order/ClientOrdersView.tsx","../src/components/pages/client-order/CreateClientOrderView.tsx","../src/components/pages/client-product/ClientProductCard.tsx","../src/components/pages/client-product/ClientProductDetails.tsx","../src/components/pages/client-product/ClientProductsView.tsx","../src/components/interfaces/FormImport.tsx","../src/components/pages/client-product/CreateClientProductView.tsx","../src/components/pages/collections/CollectionPageVOne.tsx","../src/components/pages/collections/CollectionPageVTwo.tsx","../src/components/pages/login/LoginComponentOne.tsx","../src/components/views/UserLoginTextFields.tsx","../src/components/views/UserRegisterTextFields.tsx","../src/components/pages/login/LoginComponentTwo.tsx","../src/components/pages/onboarding/OnboardingPageThree.tsx","../src/components/pages/onboarding/OnboardingPageTwo.tsx","../src/components/pages/onboarding/OnboardingScreen.tsx","../src/components/pages/product-details/ProductDetailsPageVOne.tsx","../src/components/buttons/GlitterButtom.tsx","../src/components/pages/product-details/ProductDetailsPageVThree.tsx","../src/components/pages/product-details/ProductDetailsPageVTwo.tsx","../src/components/pages/register/RegisterComponentTwo.tsx","../src/components/pages/settings/SettingsPage.tsx","../src/components/SEOHeader.tsx","../src/components/CustomLink.tsx","../src/components/pages/settings/SettingsPage.web.tsx","../src/components/pages/welcome/WelcomePageOne.tsx","../src/components/pages/welcome/WelcomePageTwo.tsx"],"sourcesContent":["export const VERSION = 0.01;\n\nexport const STORE_TYPE = {\n  ecom: 'ecom',\n  blog: 'blog',\n  subscription: 'subscription',\n  appointment: 'appointment',\n};\n\n// AWS \n\nexport const API_ID = \"yiiuqhh3a3\"\nexport const BASE_URL =  `https://${API_ID}.execute-api.us-east-1.amazonaws.com/prod`\n\n\nexport const AWS_BASE_IMAGE = `https://${process.env.VITE_S3_ASSET_BUCKET_NAME}.s3.amazonaws.com`;\nexport const AWS_HOLDER_IMAGE = `https://appsformankind-assets.s3.amazonaws.com/Products/appoint/Flowers.png`\nexport const AWS_BASE_URL = `https://yiiuqhh3a3.execute-api.us-east-1.amazonaws.com/prod`;\n\nexport const AWS_BASE_URL_2 = `https://${process.env.VITE_API_ID_2}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod`;\n\n\nexport const AWS_VERIFY = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/verify`;\n\nexport const AWS_LOGIN_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/login`;\n\n\nexport const AWS_ORDERS_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/login`;\n\nexport const AWS_SUBSCRIBER_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/subscriber`;\n\n","\n\n\n\nexport const CONSTANTS = {\n    appName: \"\",\n    holderImageWelcome: 'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_1.jpg', \n    holderImageProductCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/boil-sea-moss.jpg', \n    holderImageCollectionCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/gel.jpg', \n    holderImageOrderCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/Irish_Sea_Moss.jpeg', \n    holderUserImage: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/moss.jpg', \n    \n    holderCarouselImageOne: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/rock.jpg', \n    holderCarouselImageTwo: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/seaweed.jpg', \n    holderCarouselImageThree:'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/waterfall.jpg', \n    holderImage: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/seamoss.jpg', \n    \n    mankind_store_id: \"DF6598F7\",\n    store_id: \"DF6598F7\", // \"P5V8A9ZE\",  \n    merchant_id: `merchant.com.dhuntleyinc.DevelopingAppsForMankind`,\n    publishableKeyLive: \"pk_live_51NVCh3JEHBX7gOQA7dW8kmXYPiToufrHpDzRZQ1vhxtUoNXrYXPWtMpELdWetWJhm6Wohk8PXc2ZF1UGfaBOFJl100GZWU6atY\",\n    publishableKeyTest: \"pk_test_51NVCh3JEHBX7gOQAjIjvMGNaHPmbWJov3iFEoLLOUS8oKf9wXowSES3piwS8AB57ml3ejDE1ZNf2tGyzMj7D0GlE007Ms2N4me\"\n         \n}\n\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as SecureStore from 'expo-secure-store';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport uuid from 'react-native-uuid';\nimport { BASE_URL } from \"../utils/api\";\nimport { CONSTANTS } from \"../utils/constants\";\nimport { UserProps } from \"../models/UserProps\";\n\ninterface AuthState {\n  user: UserProps | null;\n  token: string | null;\n  authenticated: boolean;\n}\n\ninterface AuthContextType {\n  authState: AuthState;\n  onRegister: (user: UserProps) => Promise<any>;\n  onLogin: (email: string, password: string) => Promise<any>;\n  onLogout: () => Promise<void>;\n  updateUserProfile: (updatedUser: Partial<UserProps>) => Promise<void>;\n  addToFavorites: (itemId: string) => Promise<void>;\n  removeFromFavorites: (itemId: string) => Promise<void>;\n  isFavorite: (itemId: string) => boolean;\n}\n\nexport const TOKEN_KEY = 'your_token_key_here';\nconst USER_KEY = 'your_user_key_here';\nconst AUTHENTICATED_KEY = 'authenticated_key_here';\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    token: null,\n    authenticated: false,\n  });\n\n  useEffect(() => {\n    const loadUserData = async () => {\n      try {\n        const token = await SecureStore.getItemAsync(TOKEN_KEY);\n        const userString = await SecureStore.getItemAsync(USER_KEY);\n        const authenticated = await SecureStore.getItemAsync(AUTHENTICATED_KEY);\n\n        if (token && userString && authenticated === 'true') {\n          const user = JSON.parse(userString);\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          setAuthState({\n            user,\n            token,\n            authenticated: true,\n          });\n        } else {\n          setAuthState({\n            user: null,\n            token: null,\n            authenticated: false,\n          });\n        }\n      } catch (error) {\n        console.error(\"Error loading user data:\", error);\n        setAuthState({\n          user: null,\n          token: null,\n          authenticated: false,\n        });\n      }\n    };\n\n    loadUserData();\n  }, []);\n\n  const onRegister = async (userData: UserProps): Promise<any> => {\n    userData.id = uuid.v4().toString();\n\n    try {\n      const result = await axios.post(\n        `${BASE_URL}/register?store_id=${CONSTANTS.store_id}&tableName=prof-website-user-table`,\n        userData\n      );\n      return result;\n    } catch (error: any) {\n      console.error(\"Registration error:\", error.data);\n      throw new Error(\n        error.response?.data?.msg || \"Registration failed. Please try again.\"\n      );\n    }\n  };\n\n  const onLogin = async (email: string, password: string): Promise<any> => {\n    try {\n      const result = await axios.post(\n        `${BASE_URL}/login?store_id=${CONSTANTS.store_id}&tableName=prof-website-user-table`,\n        { email, password }\n      );\n\n      const { user, token } = result.data;\n      await SecureStore.setItemAsync(TOKEN_KEY, token);\n      await SecureStore.setItemAsync(USER_KEY, JSON.stringify(user));\n      await SecureStore.setItemAsync(AUTHENTICATED_KEY, 'true');\n\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setAuthState({\n        user,\n        token,\n        authenticated: true,\n      });\n\n      return result;\n    } catch (error: any) {\n      console.error(\"Login error:\", error);\n      throw new Error(\n        error.response?.data?.msg || \"Login failed. Please try again.\"\n      );\n    }\n  };\n\n  const onLogout = async (): Promise<void> => {\n    try {\n      await SecureStore.deleteItemAsync(TOKEN_KEY);\n      await SecureStore.deleteItemAsync(USER_KEY);\n      await SecureStore.deleteItemAsync(AUTHENTICATED_KEY);\n      axios.defaults.headers.common['Authorization'] = '';\n      setAuthState({\n        user: null,\n        token: null,\n        authenticated: false,\n      });\n      await AsyncStorage.removeItem(\"carts\");\n      console.log(\"User logged out successfully.\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n      throw new Error(\"Logout failed. Please try again.\");\n    }\n  };\n\n  const updateUserProfile = async (updatedUser: Partial<UserProps>) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n\n      const result = await axios.put(\n        `${BASE_URL}/users/${authState.user.id}`,\n        updatedUser,\n        {\n          headers: {\n            Authorization: `Bearer ${authState.token}`,\n          },\n        }\n      );\n\n      const updatedUserData = { ...(authState.user as UserProps), ...updatedUser };\n      await SecureStore.setItemAsync(USER_KEY, JSON.stringify(updatedUserData));\n\n      setAuthState({\n        ...authState,\n        user: updatedUserData,\n      });\n\n      console.log(\"User profile updated successfully:\", updatedUserData);\n    } catch (error: any) {\n      console.error(\"Failed to update user profile:\", error);\n      throw new Error(\n        error.response?.data?.msg || \"Failed to update user profile.\"\n      );\n    }\n  };\n\n  // Favorites Management\n  const addToFavorites = async (itemId: string) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n      \n      const updatedFavorites = [...(authState.user.favoriteItems || []), itemId];\n      await updateUserProfile({ favoriteItems: updatedFavorites });\n    } catch (error) {\n      console.error(\"Failed to add to favorites:\", error);\n      throw new Error(\"Failed to add to favorites.\");\n    }\n  };\n\n  const removeFromFavorites = async (itemId: string) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n      \n      const updatedFavorites = (authState.user.favoriteItems || []).filter(fav => fav !== itemId);\n      await updateUserProfile({ favoriteItems: updatedFavorites });\n    } catch (error) {\n      console.error(\"Failed to remove from favorites:\", error);\n      throw new Error(\"Failed to remove from favorites.\");\n    }\n  };\n\n  const isFavorite = (itemId: string): boolean => {\n    return authState.user?.favoriteItems?.includes(itemId) || false;\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ \n        authState, \n        onRegister, \n        onLogin, \n        onLogout, \n        updateUserProfile, \n        addToFavorites, \n        removeFromFavorites, \n        isFavorite \n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n\n\n\n\n\n\n\n// Working...\n// import React, { createContext, useContext, useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import * as SecureStore from 'expo-secure-store';\n// import AsyncStorage from \"@react-native-async-storage/async-storage\";\n// import uuid from 'react-native-uuid';\n// import { BASE_URL } from \"../utils/api\";\n// import { CONSTANTS } from \"../utils/constants\";\n// import { UserProps } from \"../models/UserProps\";\n\n// interface AuthState {\n//   user: UserProps | null;\n//   token: string | null;\n//   authenticated: boolean;\n// }\n\n// interface AuthContextType {\n//   authState: AuthState;\n//   onRegister: (user: UserProps) => Promise<any>;\n//   onLogin: (email: string, password: string) => Promise<any>;\n//   onLogout: () => Promise<void>;\n//   updateUserProfile: (updatedUser: Partial<UserProps>) => Promise<void>;\n// }\n\n// export const TOKEN_KEY = 'your_token_key_here';\n// const USER_KEY = 'your_user_key_here';\n// const AUTHENTICATED_KEY = 'authenticated_key_here';\n\n// const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// export const useAuth = (): AuthContextType => {\n//   const context = useContext(AuthContext);\n//   if (!context) {\n//     throw new Error(\"useAuth must be used within an AuthProvider\");\n//   }\n//   return context;\n// };\n\n// export const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n//   const [authState, setAuthState] = useState<AuthState>({\n//     user: null,\n//     token: null,\n//     authenticated: false,\n//   });\n\n//   useEffect(() => {\n//     const loadUserData = async () => {\n//       try {\n//         const token = await SecureStore.getItemAsync(TOKEN_KEY);\n//         const userString = await SecureStore.getItemAsync(USER_KEY);\n//         const authenticated = await SecureStore.getItemAsync(AUTHENTICATED_KEY);\n\n//         if (token && userString && authenticated === 'true') {\n//           const user = JSON.parse(userString);\n//           axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n//           setAuthState({\n//             user,\n//             token,\n//             authenticated: true,\n//           });\n//         } else {\n//           setAuthState({\n//             user: null,\n//             token: null,\n//             authenticated: false,\n//           });\n//         }\n//       } catch (error) {\n//         console.error(\"Error loading user data:\", error);\n//         setAuthState({\n//           user: null,\n//           token: null,\n//           authenticated: false,\n//         });\n//       }\n//     };\n\n//     loadUserData();\n//   }, []);\n\n//   const onRegister = async (userData: UserProps): Promise<any> => {\n//     userData.id = uuid.v4().toString();\n\n//     try {\n//       const result = await axios.post(\n//         `${BASE_URL}/register?store_id=${CONSTANTS.store_id}&tableName=prof-website-user-table`,\n//         userData\n//       );\n//       return result;\n//     } catch (error: any) {\n//       console.error(\"Registration error:\", error.data);\n//       throw new Error(\n//         error.response?.data?.msg || \"Registration failed. Please try again.\"\n//       );\n//     }\n//   };\n\n//   const onLogin = async (email: string, password: string): Promise<any> => {\n//     try {\n//       const result = await axios.post(\n//         `${BASE_URL}/login?store_id=${CONSTANTS.store_id}&tableName=prof-website-user-table`,\n//         { email, password }\n//       );\n\n//       const { user, token } = result.data;\n//       await SecureStore.setItemAsync(TOKEN_KEY, token);\n//       await SecureStore.setItemAsync(USER_KEY, JSON.stringify(user));\n//       await SecureStore.setItemAsync(AUTHENTICATED_KEY, 'true');\n\n//       axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n//       setAuthState({\n//         user,\n//         token,\n//         authenticated: true,\n//       });\n\n//       return result;\n//     } catch (error: any) {\n//       console.error(\"Login error:\", error);\n//       throw new Error(\n//         error.response?.data?.msg || \"Login failed. Please try again.\"\n//       );\n//     }\n//   };\n\n//   const onLogout = async (): Promise<void> => {\n//     try {\n//       await SecureStore.deleteItemAsync(TOKEN_KEY);\n//       await SecureStore.deleteItemAsync(USER_KEY);\n//       await SecureStore.deleteItemAsync(AUTHENTICATED_KEY);\n//       axios.defaults.headers.common['Authorization'] = '';\n//       setAuthState({\n//         user: null,\n//         token: null,\n//         authenticated: false,\n//       });\n//       await AsyncStorage.removeItem(\"carts\");\n//       console.log(\"User logged out successfully.\");\n//     } catch (error) {\n//       console.error(\"Error logging out:\", error);\n//       throw new Error(\"Logout failed. Please try again.\");\n//     }\n//   };\n\n//   const updateUserProfile = async (updatedUser: Partial<UserProps>) => {\n//     try {\n//       if (!authState.user) throw new Error(\"No user to update\");\n\n//       const result = await axios.put(\n//         `${BASE_URL}/users/${authState.user.id}`,\n//         updatedUser,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authState.token}`,\n//           },\n//         }\n//       );\n\n//       const updatedUserData = { ...(authState.user as UserProps), ...updatedUser };\n//       await SecureStore.setItemAsync(USER_KEY, JSON.stringify(updatedUserData));\n\n//       setAuthState({\n//         ...authState,\n//         user: updatedUserData,\n//       });\n\n//       console.log(\"User profile updated successfully:\", updatedUserData);\n//     } catch (error: any) {\n//       console.error(\"Failed to update user profile:\", error);\n//       throw new Error(\n//         error.response?.data?.msg || \"Failed to update user profile.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <AuthContext.Provider\n//       value={{ authState, onRegister, onLogin, onLogout, updateUserProfile }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n","import axios from 'axios';\nimport { ProductModelProps } from '../models/ProductModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { BASE_URL } from '../utils/api';\nimport { CONSTANTS } from '../utils/constants';\n\nconst productsApi = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    store_id: CONSTANTS.store_id,\n    tableName: 'prof-website-product-table', \n    showFilteredItems: true\n  },\n});\n\n// API Methods\nexport const getProducts = async (storeID: string, email: string) => {\n  return await productsApi.get(`/products`, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: TOKEN_KEY,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\nexport const getProduct = async (id: any) => {\n  return await productsApi.get(`/product`, {\n    params: { id },\n  });\n};\n\nexport const postProduct = async (product: ProductModelProps, storeID: string, email: string, token: string) => {\n  return await productsApi.post(`/product`, product, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\nexport const updateProduct = async (product: ProductModelProps) => {\n  return await productsApi.patch(`/product?id=${product.id}`, product);\n};\n\nexport const deleteProduct = async (id: any) => {\n  return await productsApi.delete(`/product`, {\n    params: { id },\n  });\n};\n\n// If you need to export the Axios instance itself\nexport default {productsApi, getProduct ,  postProduct , updateProduct , deleteProduct};\n\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { ProductModelProps } from \"../models/ProductModelProps\";\n// import { getProducts, postProduct, deleteProduct } from \"../api/productsApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"../components/interfaces/MyAlert\";\nimport { CONSTANTS } from \"../utils/constants\";\nimport { deleteProduct, getProducts, postProduct } from \"@/api/productsApi\";\n\ninterface ProductContextProps {\n  products: ProductModelProps[];\n  addClientProduct: (product: ProductModelProps) => Promise<void>;\n  removeClientProduct: (productId: string) => Promise<void>;\n  updateClientProduct: (product: ProductModelProps) => Promise<void>;\n  getClientProducts: () => void;\n  selectedProduct: ProductModelProps | null;\n  selectProduct: (product: ProductModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const ClientProductContext = createContext<ProductContextProps | undefined>(undefined);\n\nexport const useClientProduct = () => {\n  const context = useContext(ClientProductContext);\n  if (!context) {\n    throw new Error(\"useClientProduct must be used within an ClientProductProvider\");\n  }\n  return context;\n}\n\nexport const ClientProductProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [products, setProducts] = useState<ProductModelProps[]>([]);\n  const [selectedProduct, setSelectedProduct] = useState<ProductModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // if (authState?.token) {\n    console.log(\"Getting store products...\")\n      getClientProducts(); // Initial load of products\n    // }\n  }, []);\n\n  const addClientProduct = async (product: ProductModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postProduct(product, storeID, email, token );\n      setProducts((prevProducts) => [...prevProducts, product]);\n      console.log(\"product added\", product );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add product:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Product not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeClientProduct = async (productId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteProduct({ id: productId });\n      setProducts((prevProducts) => prevProducts.filter(product => product.id !== productId));\n    } catch (error: any) {\n      console.error(\"Failed to remove product:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateClientProduct = async (product: ProductModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateClientProduct(product);\n      setProducts((prevProducts) => prevProducts.map(o => o.id === product.id ? product : o));\n    } catch (error: any) {\n      console.error(\"Failed to update product:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientProducts = async () => {\n    // if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = '';\n      const store_owner_id = CONSTANTS.store_id // authState.user.store_owner_id || '';\n\n      const response = await getProducts(store_owner_id, email);\n      const fetchedProducts = response.data;\n      setProducts(fetchedProducts);\n      console.log(\"Products Fetched !!\")\n    } catch (error: any) {\n      console.error(\"Failed to fetch products:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch products. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectProduct = (product: ProductModelProps) => {\n    setSelectedProduct(product);\n  };\n\n  return (\n    <ClientProductContext.Provider \n      value={{ \n        products, \n        addClientProduct, \n        removeClientProduct, \n        updateClientProduct, \n        getClientProducts, \n        selectedProduct, \n        selectProduct, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </ClientProductContext.Provider>\n  );\n};\n\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from \"@react-navigation/native\";\n\n// Define the interface for cart items\ninterface CartItem {\n  id: string;\n  price: number; // Add price property\n  quantity: number\n  // Add any other properties as needed\n}\n\n// Define the context type\ninterface CartContextType {\n  carts: CartItem[];\n  addToCart: (item: CartItem) => void;  \n  decreaseFromCart: (item: CartItem) => void;\n  totalSum: number;\n  totalTax:  number;\n  totalShipping :  number;\n  grandTotal:  number;\n  quantity: number;\n  \n  deleteItemFromCart: (item: CartItem) => void;\n  clearData: (item: CartItem) => void;\n}\n\n// Create the context with initial value\nexport const CartContext = createContext<CartContextType>({\n  carts: [],\n  addToCart: () => {}, // Placeholder function\n  decreaseFromCart: () => {},\n  totalSum: 0, // Initial total sum\n  totalTax: 0, \n  totalShipping : 0,\n  grandTotal: 0,\n  deleteItemFromCart:  () => {},\n  quantity: 0,\n  clearData:  () => {},\n});\n\n// Define the CartProvider component\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Initialize state for carts and totalSum\n  const [carts, setCarts] = useState<CartItem[]>([]);\n  const [totalSum, setTotalSum] = useState(0);\n  // const [totalTax, setTotalTax] = useState(0);\n  const [totalShipping, setTotalShipping] = useState(10);\n  // const [grandTotal, setGrandTotal] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n\n  const totalTax = (totalSum  + totalShipping ) / ( 8.875 )\n  const grandTotal = totalTax + totalSum\n\n  useEffect(() => {\n    loadCartItems(); // Load cart items on component mount\n\n    // if (quantity <= 0    ){ // || carts.length <= 0\n    //   setQuantity(0)\n    // }\n  }, []); // Empty dependency array ensures it only runs once on mount\n\n \n  // Function to load cart items from AsyncStorage\n  const loadCartItems = async () => {\n    try {\n      const storedCarts = await AsyncStorage.getItem(\"carts\");\n      if (storedCarts) {\n        const parsedCarts: CartItem[] = JSON.parse(storedCarts);\n        setCarts(parsedCarts);\n        calculateTotalSum(parsedCarts); // Calculate total sum\n        calculateGrandTotal(parsedCarts); // Calculate grand total\n        // calculateTax(parsedCarts);\n      \n      }\n    } catch (error) {\n      console.error(\"Error loading cart items:\", error);\n    }\n  };\n\n  // Function to add an item to the cart\n  const addToCart = async (item: CartItem) => {\n    try {\n      const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n\n      if (itemExistIndex !== -1) {\n        // Item already exists in the cart, update its quantity\n        const updatedCarts = [...carts];\n        updatedCarts[itemExistIndex] = {\n          ...updatedCarts[itemExistIndex],\n          quantity: updatedCarts[itemExistIndex].quantity + 1 // Increment quantity\n        };\n\n        await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n        setCarts(updatedCarts);\n\n        calculateTotalSum(updatedCarts); // Calculate total sum\n        calculateGrandTotal(updatedCarts); // Calculate grand total\n        // calculateTax(updatedCarts);\n\n\n      // Refetch payment intent (TEST)\n      // const paymentData = {\n      //   amount: stripeConverter(props.amount), // Example value, replace with your actual data\n      //   currency: \"USD\", // Example value, replace with your actual data\n      //   shipping_fee: stripeConverter(props.shippingAmount), // Example value, replace with your actual data\n      //   // (FIX) - USE STORE.STRIPE\n      //   stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n      //   app_name: CONSTANTS.appName // Example value, replace with your actual data\n      // };\n      \n      // const response = await createPaymentIntent(paymentData);\n      // console.log(response)\n \n\n\n\n\n  // };\n\n\n\n\n\n\n\n\n\n      } else {\n        // Item does not exist in the cart, add it as a new item\n        const newCartItem = { ...item, quantity: 1, price: item.price }; // Set quantity and price\n        const newCartItems = [...carts, newCartItem];\n        await AsyncStorage.setItem(\"carts\", JSON.stringify(newCartItems));\n        setCarts(newCartItems);\n\n        calculateTotalSum(newCartItems); // Calculate total sum\n        calculateGrandTotal(newCartItems); // Calculate grand total\n        calculateShipping(newCartItems); // Calculate shipping\n        // calculateTax(newCartItems);\n      }\n\n      // Update Quantity\n      setQuantity(quantity + 1);\n\n      // if (quantity <=0) {\n      //   setQuantity(0)\n      //   }\n\n    } catch (error) {\n      console.error(\"Error adding item to cart:\", error);\n    }\n  };\n\n\n    // // Function to add an item to the cart\n    // const decreaseFromCart = async (item: CartItem) => {\n    //   try {\n    //     const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n    //     if (itemExistIndex !== -1) {\n    //       // Item already exists in the cart, update its quantity\n    //       const updatedCarts = [...carts];\n    //       updatedCarts[itemExistIndex] = {\n    //         ...updatedCarts[itemExistIndex],\n    //         quantity: updatedCarts[itemExistIndex].quantity - 1 // Increment quantity\n    //       };\n  \n    //       await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n    //       setCarts(updatedCarts);\n  \n    //       calculateTotalSum(updatedCarts); // Calculate total sum\n    //       calculateGrandTotal(updatedCarts); // Calculate grand total\n    //       // calculateTax(updatedCarts);\n    //     }\n    //     // Update Quantity\n    //    //setQuantity(quantity - 1);\n    //   } catch (error) {\n    //     console.error(\"Error adding item to cart:\", error);\n    //   }\n    // };\n   // Function to add an item to the cart\n  //  const decreaseFromCart = async (item: CartItem) => {\n  //   try {\n  //     const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n  //     if (itemExistIndex !== -1) {\n  //       // Item already exists in the cart, update its quantity\n  //       const updatedCarts = [...carts];\n  //       if (updatedCarts[itemExistIndex].quantity > 1) {\n  //         // Decrement quantity only if it's greater than 1\n  //         updatedCarts[itemExistIndex] = {\n  //           ...updatedCarts[itemExistIndex],\n  //           quantity: updatedCarts[itemExistIndex].quantity - 1\n  //         };\n  //       }\n  \n  //       await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n  //       setCarts(updatedCarts);\n  \n  //       calculateTotalSum(updatedCarts); // Calculate total sum\n  //       calculateGrandTotal(updatedCarts); // Calculate grand total\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error decreasing item from cart:\", error);\n  //   }\n  // };\n  \n  const decreaseFromCart = async (item: CartItem) => {\n    try {\n\n     \n      const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n      if (itemExistIndex !== -1) {\n        // Item already exists in the cart, update its quantity\n        const updatedCarts = [...carts];\n        // if (updatedCarts[itemExistIndex].quantity > 1) {\n        //   // Decrement quantity only if it's greater than 1\n          updatedCarts[itemExistIndex] = {\n            ...updatedCarts[itemExistIndex],\n            quantity: updatedCarts[itemExistIndex].quantity - 1\n          };\n        // }\n        setQuantity(quantity - 1)\n  \n        await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n        setCarts(updatedCarts);\n  \n        calculateTotalSum(updatedCarts); // Calculate total sum\n        calculateGrandTotal(updatedCarts); // Calculate grand total\n      }\n      // if (quantity <=0) {\n      // setQuantity(0)\n      // }\n\n    } catch (error) {\n      console.error(\"Error decreasing item from cart:\", error);\n    }\n  };\n  \n// Function to delete an item from the cart\nconst deleteItemFromCart = async (item: CartItem) => {\n  try {\n    // Filter out the item from the carts array\n    const updatedCarts = carts.filter((cart) => cart.id !== item.id);\n\n    // Update AsyncStorage and state with the updated carts array\n    await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n    setCarts(updatedCarts);\n\n    // Recalculate total sum\n    calculateTotalSum(updatedCarts);\n    calculateGrandTotal(updatedCarts);\n    calculateShipping(updatedCarts);\n    // calculateTax(updatedCarts);\n\n    await AsyncStorage.removeItem(\"carts\");\n\n    setQuantity(quantity - item.quantity);\n    if (quantity <=0) {\n      setQuantity(0)\n      }\n    console.log(\"Item removed\");\n\n\n  } catch (error) {\n    console.error(\"Error deleting item from cart:\", error);\n  }\n};\n  // Function to clear all data from the cart\n  const clearData = async () => {\n    try {\n      setQuantity(0);\n      await AsyncStorage.removeItem(\"carts\");\n      setCarts([]);\n      setTotalSum(0);\n      // setTotalTax(0);\n      setTotalShipping(10);\n      // setGrandTotal(0);\n      setQuantity(0)\n    } catch (error) {\n      console.error(\"Error clearing data:\", error);\n    }\n  };\n\n  // Function to calculate the total sum of cart items\n  const calculateTotalSum = (carts: CartItem[]) => {\n    const total = carts.reduce((sum, item) => sum + item.price * item.quantity , 0);\n    setTotalSum(total);\n  };\n\n  // Function to calculate the total sum of cart items\n  const calculateGrandTotal = (carts: CartItem[]) => {\n    const grandTotal = carts.reduce((sum, item) => sum + totalSum + totalTax + totalShipping , 0);\n    // setGrandTotal(grandTotal);\n  };\n\n  // Function to calculate the total sum of cart items\n  // const calculateTax = (carts: CartItem[]) => {\n  //   const totalTax = carts.reduce((sum, item) => sum + item.price, 0);\n  //   setTotalSum(totalTax);\n  // };\n\n  // const calculateTax = (carts: CartItem[]) => {\n  //   // const totalTax = carts.reduce((sum, item) => sum + item.price, 0);\n  //   const totalTax = (totalSum  + totalShipping ) / ( 8.875 * 100 )\n  //   setTotalTax(totalTax);\n  // };\n\n  // Function to calculate the total sum of cart items\n  const calculateShipping = (carts: CartItem[]) => {\n    // const totalShipping = carts.reduce((sum, item) => sum + item.price , 0);\n    // setTotalSum(totalShipping);\n  };\n\n\n  // Create the value object to be passed to the context provider\n  const value: CartContextType = {\n    carts,\n    addToCart,\n    decreaseFromCart,\n    quantity,\n    totalSum,\n    totalTax,\n    totalShipping,\n    grandTotal,\n    deleteItemFromCart,\n    clearData\n  };\n\n  // Render the context provider with children\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n","import { createContext } from \"react\";\n\ninterface UserContextType {\n  // Define your context properties and their types here\n}\n\nexport const AppUserContext = createContext<UserContextType | undefined>(undefined);\n ","import axios from 'axios';\nimport { StoreModelProps } from '../models/StoreModelProps';\nimport { BASE_URL } from '../utils/api';\n\n// Configure Axios Instance\nconst storesApi = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    Authorization: 'token', // Replace with actual token logic if needed\n    'Content-Type': 'application/json',\n  },\n  params: {\n    tableName: 'prof-website-store-table',\n    showFilteredItems: true,\n  },\n});\n\n// -------------\n// GET STORE ATTRIBUTES\n// -------------\nexport const getStoreAttributes = async (): Promise<string[]> => {\n  try {\n    const response = await storesApi.get('/stores');\n    const attributeNames = Object.keys(response.data[0]);\n    return attributeNames;\n  } catch (error) {\n    console.error('Error fetching store attributes:', error);\n    throw error;\n  }\n};\n\n// -----------------\n// GET SINGLE STORE\n// -----------------\n\n\n\n\nexport const getStore = async (id: string) => {\n  try {\n    const response = await storesApi.get(`/store`, {\n      params: { id },\n    });\n    const store = response.data;\n    console.log('Store Fetched !!');\n\n    return store ? store : null;\n  } catch (error) {\n    console.error('Error fetching store:', error);\n    throw error;\n  }\n};\n\n// -------------\n// GET ALL STORES\n// -------------\nexport const getStores = async (): Promise<StoreModelProps[]> => {\n  try {\n    const response = await storesApi.get('/stores');\n    return response.data as StoreModelProps[];\n  } catch (error) {\n    console.error('Error fetching stores:', error);\n    throw error;\n  }\n};\n\n\n\n\n// -------------\n// CREATE STORE (POST)\n// -------------\nexport const postStore = async (store: StoreModelProps): Promise<StoreModelProps> => {\n  try {\n    const response = await storesApi.post('/store', store);\n    return response.data as StoreModelProps;\n  } catch (error) {\n    console.error('Error creating store:', error);\n    throw error;\n  }\n};\n\n// -------------\n// UPDATE STORE (PATCH)\n// -------------\n// Update store information (PATCH request)\nexport const updateStore = async (store: StoreModelProps, updateKey: string , updateValue: string): Promise<StoreModelProps> => {\n  try {\n    const response = await storesApi.patch(`/store`, {\n      id: store.id, // Ensure the ID is passed in the body\n      tableName: 'prof-website-store-table', // Add the required table name\n      updateKey: updateKey, // 'store_name', // This is an example; adjust based on your needs\n      updateValue: updateValue, // store.store_name, // Example; modify as needed for your updates\n    });\n    return response.data as StoreModelProps;\n  } catch (error) {\n    console.error('Error updating store:', error);\n    throw error;\n  }\n};\n\n// -------------\n// DELETE STORE\n// -------------\nexport const deleteStore = async (id: string): Promise<void> => {\n  try {\n    await storesApi.delete(`/store`, {\n      params: { id },\n    });\n  } catch (error) {\n    console.error('Error deleting store:', error);\n    throw error;\n  }\n};\n\nexport default storesApi;\n","\nimport React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport { StoreModelProps } from \"../models/StoreModelProps\";\nimport { getStore } from \"../api/storeApi\";\nimport { CONSTANTS } from \"../utils/constants\";\n\ninterface ClientStoreContextProps {\n  store: StoreModelProps | null;\n  addStore: (store: StoreModelProps) => void;\n  removeStore: (storeId: string) => void;\n  getClientStore: () => void;\n  selectedStore: StoreModelProps | null;\n  selectStore: (store: StoreModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\nexport const useClientStore = () => {\n  const context = useContext(ClientStoreContext);\n  if (!context) {\n    throw new Error(\"useClientStore must be used within a ClientStoreProvider\");\n  }\n  return context;\n};\n\nexport const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [store, setStore] = useState<StoreModelProps | null>(null);\n  const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // useEffect(() => {\n  //   if (authState?.token) {\n  //     getClientStore(); // Initial load of the store\n  //     console.log(\"Auth:::::::\")\n  //     console.log(authState?.token)\n  //   }\n  // }, [authState?.token]);\n\n\n  useEffect(() => {\n    // if (authState?.token) {\n    console.log(\"Getting store ...\")\n    getClientStore(); // Initial load of products\n    // }\n  }, []);\n\n\n  const addStore = (newStore: StoreModelProps) => {\n    setStore(newStore);\n  };\n\n  const removeStore = () => {\n    setStore(null);\n  };\n\n  const getClientStore = async () => {\n    // if (!authState) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const store_owner_id = CONSTANTS.store_id //  authState?.user?.store_owner_id || '';\n      const response = await getStore(store_owner_id);\n     // const fetchedStore = response?.data ; // Assuming the API returns a single store object\n      setStore(response);\n    } catch (error: any) {\n      console.error(\"Failed to fetch client store:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch store. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectStore = (store: StoreModelProps) => {\n    setSelectedStore(store);\n  };\n\n  return (\n    <ClientStoreContext.Provider \n      value={{ \n        store, \n        addStore, \n        removeStore, \n        getClientStore, \n        selectedStore, \n        selectStore, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </ClientStoreContext.Provider>\n  );\n};\n\n\n\n\n\n\n\n\n\n\n// import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\n// // import { StoreProps } from \"@/models/StoreModelProps\";\n// // import { getStores } from \"../api/storesApi\";\n// import { CONSTANTS } from \"@/utils/constants\";\n// import { useAuth } from \"./AuthContext\";\n// import { StoreModelProps } from \"../models/StoreModelProps\";\n// import { getStore } from \"../api/storeApi\";\n\n// interface StoreContextProps {\n//   stores: StoreModelProps[];\n//   addStore: (store: StoreModelProps) => void;\n//   removeStore: (storeId: string) => void;\n//   getClientStore: () => void;\n//   selectedStore: StoreModelProps | null;\n//   selectStore: (store: StoreModelProps) => void;\n//   isLoading: boolean;\n//   error: string | null;\n// }\n\n// const StoreContext = createContext<StoreContextProps | undefined>(undefined);\n\n// export const useClientStore = () => {\n//   const context = useContext(StoreContext);\n//   if (!context) {\n//     throw new Error(\"useClientStore must be used within an StoreProvider\");\n//   }\n//   return context;\n// };\n\n// export const StoreProvider = ({ children }: { children: ReactNode }) => {\n//   const { authState } = useAuth(); // Access authState from the AuthContext\n//   const [stores, setStores] = useState<StoreModelProps[]>([]);\n//   const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n//   const [isLoading, setIsLoading] = useState<boolean>(false);\n//   const [error, setError] = useState<string | null>(null);\n\n//   useEffect(() => {\n//     if (authState?.token) {\n//       getClientStore(); // Initial load of stores\n//     }\n//   }, [authState?.token]);\n\n//   const addStore = (store: StoreModelProps) => {\n//     setStores((prevStores) => [...prevStores, store]);\n//   };\n\n//   const removeStore = (storeId: string) => {\n//     setStores((prevStores) => prevStores.filter(store => store.id !== storeId));\n//   };\n\n//   const getClientStore = async () => {\n//     if (!authState) return;\n  \n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const store_owner_id = authState?.user?.store_owner_id || '';\n  \n//       console.log(`store_owner_id : ${store_owner_id}`);\n//       const response = await getStore(store_owner_id);\n  \n//       // Ensure the response and data are valid before setting state\n//       const fetchedStores = response?.data || []; \n//       setStores(Array.isArray(fetchedStores) ? fetchedStores : [fetchedStores]);\n//     } catch (error: any) {\n//       console.error(\"Failed to fetch stores:\", error.response?.data?.message || error.message);\n//       setError(error.response?.data?.message || \"Failed to fetch stores. Please try again later.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n  \n//   const selectStore = (store: StoreModelProps) => {\n//     setSelectedStore(store);\n//   };\n\n//   return (\n//     <StoreContext.Provider \n//       value={{ \n//         stores, \n//         addStore, \n//         removeStore, \n//         getClientStore, \n//         selectedStore, \n//         selectStore, \n//         isLoading, \n//         error \n//       }}\n//     >\n//       {children}\n//     </StoreContext.Provider>\n//   );\n// };\n","import axios, { AxiosError } from 'axios';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\nimport { CollectionModelProps } from '../models/CollectionModelProps';\nimport { BASE_URL } from '../utils/api';\n// import { CollectionModelProps } from '../models/CollectionModelProps';\n\n\n  const collectionsApi = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n        Authorization: \"token\",\n        'Content-Type': 'application/json',\n    },\n    params: {\n      tableName: 'prof-website-collection-table', \n      showFilteredItems: true\n    },\n  });\n\n\n\n  export const getCollections = async (storeID: string, email: string) => {\n    return await collectionsApi.get(`/collections`, {\n      params: {\n        store_id: storeID,\n        email: email // \"\", // user?.email ?? \"\",\n    \n      },\n    });\n  };\n\n\n  \n    \n  // export const getClientProducts = async (storeID: string, email: string) => {\n  //   return await productsApi.get(`/products`, {\n  //     params: {\n  //       store_id: storeID, // CONSTANTS.store_id,// storeID,\n  //       email: email,\n  //     },\n  \n  //   });\n  // };\n  \n\n\nexport const getCollection = async (id: any) => {\n  return await collectionsApi.get(`/collection?id=${id}`);\n};\n\n\n\n\n\n// export const postCollection = async (collection: CollectionModelProps) => {\n//   return await collectionsApi.post(`/collection`, collection);\n// };\n\n\nexport const postCollection = async (collection: CollectionModelProps, storeID: string, email: string, token: string) => {\n  console.log(`email:::::::: ${email}`)\n  \n  return await collectionsApi.post(`/collection`, collection, {\n    params: { \n      store_id: storeID, // The store ID as a query parameter\n      email: email,      // The email as a query parameter\n    },\n    headers: { \n      Authorization: token ,\n      'Content-Type': 'application/json',\n\n    \n    },\n});\n};\n\n\n\nexport const postClientCollection = async (collection: CollectionModelProps) => {\n  return await collectionsApi.post(`/collection`, collection, {\n    params: {\n      store_id: collection.store_id,\n      // email: \"\", // user?.email ?? \"\",\n    }\n  });\n\n};\n\n\n\n\nexport const updateCollection = async (collection: CollectionModelProps) => {\n  return await collectionsApi.patch(`/collection?id=${collection.id}`, collection);\n};\n\nexport const deleteCollection = async ({ id }: { id: any }) => {\n  console.log(id);\n  return await collectionsApi.delete(`/collection?id=${id}`, id);\n};\n\n\nexport default collectionsApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { CollectionModelProps } from \"../models/CollectionModelProps\";\nimport { getCollections, postCollection, updateCollection, deleteCollection } from \"../api/collectionsApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"@/components/interfaces/MyAlert\";\n\ninterface CollectionContextProps {\n  collections: CollectionModelProps[];\n  addCollection: (collection: CollectionModelProps) => Promise<void>;\n  removeCollection: (collectionId: string) => Promise<void>;\n  updateCollection: (collection: CollectionModelProps) => Promise<void>;\n  getClientCollections: () => void;\n  selectedCollection: CollectionModelProps | null;\n  selectCollection: (collection: CollectionModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const CollectionContext = createContext<CollectionContextProps | undefined>(undefined);\n\nexport const useClientCollection = () => {\n  const context = useContext(CollectionContext);\n  if (!context) {\n    throw new Error(\"useClientCollection must be used within an CollectionProvider\");\n  }\n  return context;\n};\n\n\nexport const CollectionProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [collections, setCollections] = useState<CollectionModelProps[]>([]);\n  const [selectedCollection, setSelectedCollection] = useState<CollectionModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n\n  const addCollection = async (collection: CollectionModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postCollection(collection, storeID, email, token );\n      setCollections((prevCollections) => [...prevCollections, collection]);\n      console.log(\"collection added\", collection );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add collection:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Collection not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeCollection = async (collectionId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteCollection({ id: collectionId });\n      setCollections((prevCollections) => prevCollections.filter(collection => collection.id !== collectionId));\n    } catch (error: any) {\n      console.error(\"Failed to remove collection:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateCollection = async (collection: CollectionModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateCollection(collection);\n      setCollections((prevCollections) => prevCollections.map(o => o.id === collection.id ? collection : o));\n    } catch (error: any) {\n      console.error(\"Failed to update collection:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientCollections = async () => {\n    if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = authState.user.email || '';\n      const store_owner_id = authState.user.store_owner_id || '';\n\n      const response = await getCollections(store_owner_id, email);\n      const fetchedCollections = response.data;\n      setCollections(fetchedCollections);\n    } catch (error: any) {\n      console.error(\"Failed to fetch client collections:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch collections. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectCollection = (collection: CollectionModelProps) => {\n    setSelectedCollection(collection);\n  };\n\n  return (\n    <CollectionContext.Provider \n      value={{ \n        collections, \n        addCollection, \n        removeCollection, \n        updateCollection, \n        getClientCollections, \n        selectedCollection, \n        selectCollection, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </CollectionContext.Provider>\n  );\n};\n\n\n","import axios, { AxiosError } from 'axios';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\nimport { OrderModelProps } from '../models/OrderModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { UserProps } from '../models/UserProps';\nimport { BASE_URL } from '../utils/api';\nimport { CONSTANTS } from '../utils/constants';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// import { OrderModelProps } from '../models/OrderModelProps';\n\n\n  const ordersApi = axios.create({\n    baseURL: BASE_URL,\n    // headers: {\n    //    // Authorization: TOKEN_KEY,\n    //     'Content-Type': 'application/json',\n    // },\n    params: {\n      store_id: CONSTANTS.store_id,\n      // email: \"\", // user?.email ?? \"\",\n      tableName: 'prof-website-order-table', \n      showFilteredItems: true\n    },\n  });\n\n\n\n  export const getOrders = async (storeID: string, email: string) => {\n    return await ordersApi.get(`/orders`, {\n      params: { \n        store_id: storeID, // CONSTANTS.store_id,// storeID,\n        email: email,\n      },\n      headers: { \n        Authorization: TOKEN_KEY ,\n        'Content-Type': 'application/json',\n\n      \n      },\n\n    });\n   \n  };\n  \n\nexport const getOrder = async (id: any) => {\n  return await ordersApi.get(`/order?id=${id}`);\n};\n\n\n// export const getOrders = async () => {\n//     return await ordersApi.get(`/orders`);\n//   };\n\n\n\n\n\n// export const getClientOrders = async (storeID: string, email: string) => {\n//   return await ordersApi.get(`/orders`, {\n//     params: {\n//       store_id: storeID, // CONSTANTS.store_id,// storeID,\n//       email: email,\n//     },\n\n//   });\n// };\n\n\n\n\n\n\nexport const postOrder = async (order: OrderModelProps, storeID: string, email: string, token: string) => {\n  console.log(`email:::::::: ${email}`)\n  \n  return await ordersApi.post(`/order`, order, {\n    params: { \n      store_id: storeID, // The store ID as a query parameter\n      email: email,      // The email as a query parameter\n    },\n    headers: { \n      Authorization: token ,\n      'Content-Type': 'application/json',\n\n    \n    },\n});\n};\n\n\n\nexport const updateOrder = async (order: OrderModelProps) => {\n  return await ordersApi.patch(`/order?id=${order.id}`, order);\n};\n\nexport const deleteOrder = async ({ id }: { id: any }) => {\n  console.log(id);\n  return await ordersApi.delete(`/order?id=${id}`, id);\n};\n\n\nexport default ordersApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { OrderModelProps } from \"../models/OrderModelProps\";\nimport { getOrders, postOrder, updateOrder, deleteOrder } from \"../api/ordersApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"@/components/interfaces/MyAlert\";\n\ninterface OrderContextProps {\n  orders: OrderModelProps[];\n  addOrder: (order: OrderModelProps) => Promise<void>;\n  removeOrder: (orderId: string) => Promise<void>;\n  updateOrder: (order: OrderModelProps) => Promise<void>;\n  getClientOrders: () => void;\n  selectedOrder: OrderModelProps | null;\n  selectOrder: (order: OrderModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const OrderContext = createContext<OrderContextProps | undefined>(undefined);\n\nexport const useClientOrder = () => {\n  const context = useContext(OrderContext);\n  if (!context) {\n    throw new Error(\"useClientOrder must be used within an OrderProvider\");\n  }\n  return context;\n};\n\nexport const OrderProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [orders, setOrders] = useState<OrderModelProps[]>([]);\n  const [selectedOrder, setSelectedOrder] = useState<OrderModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // useEffect(() => {\n  //   if (authState?.token) {\n  //     getClientOrders(); // Initial load of orders\n  //   }\n  // }, [authState?.token]);\n\n  const addOrder = async (order: OrderModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postOrder(order, storeID, email, token );\n      setOrders((prevOrders) => [...prevOrders, order]);\n      console.log(\"order added\", order );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add order:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Order not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeOrder = async (orderId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteOrder({ id: orderId });\n      setOrders((prevOrders) => prevOrders.filter(order => order.id !== orderId));\n    } catch (error: any) {\n      console.error(\"Failed to remove order:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateOrder = async (order: OrderModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateOrder(order);\n      setOrders((prevOrders) => prevOrders.map(o => o.id === order.id ? order : o));\n    } catch (error: any) {\n      console.error(\"Failed to update order:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientOrders = async () => {\n    if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = authState.user.email || '';\n      const store_owner_id = authState.user.store_owner_id || '';\n\n      const response = await getOrders(store_owner_id, email);\n      const fetchedOrders = response.data;\n      setOrders(fetchedOrders);\n    } catch (error: any) {\n      console.error(\"Failed to fetch client orders:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch orders. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectOrder = (order: OrderModelProps) => {\n    setSelectedOrder(order);\n  };\n\n  return (\n    <OrderContext.Provider \n      value={{ \n        orders, \n        addOrder, \n        removeOrder, \n        updateOrder, \n        getClientOrders, \n        selectedOrder, \n        selectOrder, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </OrderContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { useColorScheme } from 'react-native';\n\ntype ThemeMode = 'light' | 'dark' | 'system';\n\ninterface ThemeContextProps {\n  theme: ThemeMode;\n  setTheme: (mode: ThemeMode) => void;\n  isDarkMode: boolean;\n}\n\nexport const ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const systemColorScheme = useColorScheme();\n  const [theme, setTheme] = useState<ThemeMode>('system');\n\n  const isDarkMode = theme === 'system' ? systemColorScheme === 'dark' : theme === 'dark';\n\n  useEffect(() => {\n    setTheme(isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, isDarkMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","const CURRENCY_FORMATTER = new Intl.NumberFormat(undefined, {\n    currency: 'USD',\n    style: 'currency'\n});\n\nexport function convertToCurrency(number: number) {\n    return CURRENCY_FORMATTER.format(number);\n}\n\nexport default convertToCurrency;","export const formatPhoneNumber = (phoneNumberString: string) => {\n    // Remove all non-digit characters from the phone number string\n    const cleanedPhoneNumber = phoneNumberString.replace(/\\D/g, '');\n    \n    // Check if the phone number has 11 digits (including the country code)\n    const isElevenDigits = cleanedPhoneNumber.length === 11;\n\n    // Format the phone number based on the number of digits\n    let formattedPhoneNumber;\n    if (isElevenDigits) {\n        // For 11-digit phone numbers, include the country code\n        formattedPhoneNumber = cleanedPhoneNumber.replace(/(\\d{1})(\\d{3})(\\d{3})(\\d{4})/, '+$1 ($2) $3-$4');\n    } else {\n        // For other phone numbers, format into groups of 3 digits separated by hyphens\n        formattedPhoneNumber = cleanedPhoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3');\n    }\n    \n    return formattedPhoneNumber;\n};","import { Link } from 'expo-router';\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { Platform } from 'react-native';\n\nexport function ExternalLink(\n  props: Omit<React.ComponentProps<typeof Link>, 'href'> & { href: string }\n) {\n  return (\n    <Link\n      target=\"_blank\"\n      {...props}\n      href={props.href as never}\n      onPress={(e) => {\n        if (Platform.OS !== 'web') {\n          // Prevent the default behavior of linking to the default browser on native.\n          e.preventDefault();\n          // Open the link in an in-app browser.\n          WebBrowser.openBrowserAsync(props.href as string);\n        }\n      }}\n    />\n  );\n}\n","// import { v4 as uuidv4 } from 'uuid';\n// const uuid = uuidv4(); // Generate the UUID\n\n// generateUUID.ts\nexport const generateUUID = (idLength: number): string => {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < idLength; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};","\n export const stripeConverter = (amountInCents: number) => {\n    // Convert dollars to cents\n    const amount = amountInCents * 100;\n    \n    // Return the amount\n    return amount;\n};\n    ","// This function is web-only as native doesn't currently support server (or build-time) rendering.\nexport function useClientOnlyValue<S, C>(server: S, client: C): S | C {\n  return client;\n}\n","import { FullAddress, OrderHistory, OrderItem, OrderModelProps, Parcel } from \"@/models/OrderModelProps\";\nimport { ProductModelProps } from \"@/models/ProductModelProps\";\n\n\nexport const SAMPLE_ORDER_ITEMS: OrderItem[] = [\n  {\n    id: \"item123\",\n    quantity: 2,\n    sku: \"SKU12345\",\n    title: \"Sample Product 1\",\n    color: \"Red\",\n    productId: \"prod123\",\n    size: \"Medium\",\n    image: \"https://example.com/sample-product-1.jpg\",\n    total_price: 399.98,\n    length: \"10\",\n    width: \"5\",\n    height: \"3\",\n    weight: \"1.2\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"This is a sample product item for a larger order.\",\n    net_weight: \"1.1\",\n    value_amount: 200.00,\n    value_currency: \"USD\",\n    origin_country: \"USA\",\n    eccn_ear99: \"EAR99\",\n  },\n  {\n    id: \"item124\",\n    quantity: 1,\n    sku: \"SKU54321\",\n    title: \"Advanced Gadget\",\n    color: \"Silver\",\n    productId: \"prod124\",\n    size: \"Large\",\n    image: \"https://example.com/advanced-gadget.jpg\",\n    total_price: 299.99,\n    length: \"15\",\n    width: \"8\",\n    height: \"5\",\n    weight: \"2.0\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"An advanced gadget with cutting-edge technology.\",\n    net_weight: \"1.9\",\n    value_amount: 299.99,\n    value_currency: \"USD\",\n    origin_country: \"China\",\n    eccn_ear99: \"EAR99\",\n  },\n  {\n    id: \"item125\",\n    quantity: 3,\n    sku: \"SKU67890\",\n    title: \"Basic Accessory\",\n    color: \"Black\",\n    productId: \"prod125\",\n    size: \"One Size\",\n    image: \"https://example.com/basic-accessory.jpg\",\n    total_price: 89.97,\n    length: \"7\",\n    width: \"4\",\n    height: \"2\",\n    weight: \"0.5\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"A basic accessory to complement your gadgets.\",\n    net_weight: \"0.45\",\n    value_amount: 29.99,\n    value_currency: \"USD\",\n    origin_country: \"Germany\",\n    eccn_ear99: \"EAR99\",\n  },\n];\n\n\nexport const SAMPLE_ORDER_HISTORY: OrderHistory = {\n  id: \"history_12345\",\n  title: \"Order History for Order #12345\",\n  orderPlaced: true,\n  orderEmailSent: true,\n  orderPaymentReceived: true,\n  inventoryCheck: \"Inventory checked and verified\",\n  orderProcessed: true,\n  orderPackaged: true,\n  orderShippingLabelGenerated: true,\n  orderShipped: true,\n  shippedDate: \"2024-08-18T10:00:00Z\",\n  trackingNumber: \"TRACK123456789\",\n  deliveryConfirmed: false,\n  orderDeliveryDate: \"\",\n  orderReturned: false,\n  orderReturnLabelGenerated: false,\n  status: \"Shipped\",\n  note: \"Shipment is on its way to the customer.\",\n};\n\nexport const SAMPLE_FULL_ADDRESS: FullAddress = {\n  name: \"John Doe\",\n  streetOne: \"123 Main St\",\n  streetTwo: \"Apt 4B\",\n  city: \"New York\",\n  state: \"NY\",\n  zip: \"10001\",\n  country: \"USA\",\n  phone: \"+1 555-555-5555\",\n  email: \"johndoe@example.com\",\n  is_residential: true,\n};\n\nexport const SAMPLE_PARCEL: Parcel = {\n  length: \"10\",\n  width: \"5\",\n  height: \"8\",\n  distance_unit: \"in\", // Assuming inches for the distance unit\n  weight: \"2.5\",\n  mass_unit: \"lb\", // Assuming pounds for the mass unit\n  value_amount: 100, // Assuming a value of 100 currency units\n  metadata: \"Sample parcel metadata\",\n  test: false,\n};\n\nexport const SAMPLE_ORDER: OrderModelProps = {\n  id: \"order_12345\",\n  stripe_id: \"stripe_12345\",\n  store_id: \"store_123\",\n  index: 1,\n  order_status: \"Processing\",\n  items: SAMPLE_ORDER_ITEMS,\n  userId: \"user_123\",\n  order_history: [SAMPLE_ORDER_HISTORY],\n  total: 50.0,\n  net_total: 45.0,\n  courier: \"UPS\",\n  shipping_label: \"http://example.com/shipping-label.pdf\",\n  return_label: \"http://example.com/return-label.pdf\",\n  from_address: SAMPLE_FULL_ADDRESS,\n  to_address: SAMPLE_FULL_ADDRESS,\n  parcel: SAMPLE_PARCEL,\n  title: \"Order #12345\",\n  type: \"Standard\",\n  coupon_code: \"DISCOUNT10\",\n  referred_by: \"user_456\",\n  statement_descriptor: \"Sample Order\",\n  note: \"Please handle with care.\",\n  budget: \"50.0\",\n  order_placed_date: \"2024-08-17T08:00:00Z\",\n  order_started_date: \"2024-08-18T08:00:00Z\",\n  order_created_date: \"2024-08-17T08:00:00Z\",\n  order_completed_date: \"2024-08-19T08:00:00Z\",\n  tax: 5.0,\n  stripe_fee: 2.5,\n  afm_fee: 1.5,\n  shipping_cost: 10.0,\n  discount_amount: 5.0,\n};","import { ProductModelProps } from \"@/models/ProductModelProps\";\n\n\nexport  const SAMPLE_PRODUCT: ProductModelProps[] = [\n    {\n      id: \"prod123\",\n      name: \"Sample Product\",\n      price: 199.99,\n      store_id: \"store456\",\n      index: 1,\n      createdOn: \"2024-08-16T12:00:00.000Z\",\n      active: true,\n      image: \"https://example.com/sample-product.jpg\",\n      on_sale: true,\n      sale_price: 149.99,\n      slug: \"sample-product\",\n      quantity: 100,\n      description: \"This is a sample product description that highlights key features and benefits of the product.\",\n      icon_name: \"sample-icon\",\n      category: \"Electronics\",\n      images: [\n        \"https://example.com/sample-product-1.jpg\",\n        \"https://example.com/sample-product-2.jpg\",\n      ],\n      included: [\"Charging cable\", \"User manual\"],\n      materials: [\"Plastic\", \"Metal\"],\n      tags: [\"electronics\", \"gadget\", \"sale\"],\n      brand: \"SampleBrand\",\n      views: 1234,\n      likes: 150,\n      isLiked: true,\n      gender: \"Unisex\",\n      color: \"Black\",\n      color_code: \"#000000\",\n      condition: \"New\",\n      features: [\"Feature 1\", \"Feature 2\", \"Feature 3\"],\n      sku: \"SKU12345\",\n      variant_type: true,\n      variant_selected: {},\n      variants: [\n        {\n          id: \"variant1\",\n          title: \"Sample Variant 1\",\n          image: \"https://example.com/sample-variant1.jpg\",\n          color_code: \"#FF0000\",\n          price: 199.99,\n          sale_price: 149.99,\n          description: \"This is a description for the first variant.\",\n          features: [\"Feature A\", \"Feature B\"],\n          inventory: 50,\n          value_price: 149.99,\n          product_id: \"prod123\",\n          variantInfo: [\n            {\n              title: \"Size\",\n              description: \"Size description\",\n              price: 149.99,\n              sale_price: 129.99,\n              inventory: 20,\n            },\n          ],\n        },\n        {\n          id: \"variant2\",\n          title: \"Sample Variant 2\",\n          image: \"https://example.com/sample-variant2.jpg\",\n          color_code: \"#00FF00\",\n          price: 209.99,\n          sale_price: 169.99,\n          description: \"This is a description for the second variant.\",\n          features: [\"Feature X\", \"Feature Y\"],\n          inventory: 30,\n          value_price: 169.99,\n          product_id: \"prod123\",\n          variantInfo: [\n            {\n              title: \"Color\",\n              description: \"Color description\",\n              price: 169.99,\n              sale_price: 149.99,\n              inventory: 15,\n            },\n          ],\n        },\n      ],\n      last_updated: \"2024-08-16T15:00:00.000Z\",\n      item_type: \"physical\",\n      ingredients: [],\n      inventory: 100,\n      reviews: [\n        {\n          userName: \"John Doe\",\n          title: \"Great product!\",\n          comment: \"I really enjoyed using this product. Highly recommend it!\",\n        },\n        {\n          userName: \"Jane Smith\",\n          title: \"Good value for money\",\n          comment: \"This product offers great value for the price.\",\n        },\n      ],\n      rating: [5, 4, 4, 5],\n      size: \"Medium\",\n      sizes: [\"Small\", \"Medium\", \"Large\"],\n      weight: 1.5,\n      year_made: 2023,\n    }\n  \n  ]\n    \n ","// import register from \"@/app/(auth)/register\";\n\nexport const ROUTES = {\n    onboarding_Page: \"/onboarding\",\n    login: \"/login\",\n    register: \"/register\",\n    products: \"/products\"\n\n\n}","import * as SecureStore from \"expo-secure-store\";\n\n// Securely save a value with a specified key\nexport const saveSecurely = async (key: string, value: any): Promise<void> => {\n  try {\n    const jsonValue = JSON.stringify(value);\n    await SecureStore.setItemAsync(key, jsonValue);\n  } catch (error) {\n    console.error(`Error saving data for key \"${key}\":`, error);\n    throw error;\n  }\n};\n\n// Securely fetch a value for a specified key\nexport const fetchSecurely = async (key: string): Promise<any> => {\n  try {\n    const jsonValue = await SecureStore.getItemAsync(key);\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\n  } catch (error) {\n    console.error(`Error fetching data for key \"${key}\":`, error);\n    throw error;\n  }\n};\n","import { Dimensions } from \"react-native\";\nconst { height , width } = Dimensions.get('window')\n\nconst tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\n\nconst COLORS = {\n  light: {\n    text: '#000000',\n    background: '#FFFFFF',\n    tint: '#0504aa', // Royal blue\n    tabIconDefault: '#CCCCCC',\n    tabIconSelected: '#0504aa',\n    cardBackground: '#FFFFFF',\n    cardText: '#000000',\n    cardSecondaryText: '#83829A',  // Gray\n    cardPrice: '#000000',\n    cardBorder: '#E0E0E0',\n  },\n  dark: {\n    text: '#FFFFFF',\n    background: '#000000',\n    tint: '#FFFFFF',\n    tabIconDefault: '#CCCCCC',\n    tabIconSelected: '#FFFFFF',\n    cardBackground: '#1C1C1E',  // Darker shade for cards in dark mode\n    cardText: '#FFFFFF',\n    cardSecondaryText: '#B0B0B0',  // Lighter gray\n    cardPrice: '#FFFFFF',\n    cardBorder: '#444444',  // Darker border for dark mode\n  },\n  primary: \"#3f5a36\",\n  secondary: \"#DDF0FF\",\n  tertiary: \"#FF7754\",\n  darkGray: '#333333',\n  green: '#8BC34A',\n  forestGreen: '#3f5a36',\n  lightGray: \"#F5F5F5\",\n  gray: \"#83829A\",\n  gray2: \"#C1C0C8\",\n  gray3: \"#d3d3d3\",\n  offwhite: \"#F3F4F8\",\n  white: \"#FFFFFF\",\n  black: \"#000000\",\n  blue: \"#0504aa\",  // Royal blue\n  red: \"#E81E4D\",\n  orange: \"#FF5733\",\n  lightWhite: \"#FAFAFC\",\n  backgroundLight: \"#F0F0F3\",\n  backgroundMedium: \"#B9B9B9\",\n  backgroundDark: \"#77777\",\n};\n\n\n\n\nconst SIZES = {\n    xSmall: 10,\n    small: 12,\n    medium: 16,\n    large: 20,\n    xLarge: 24,\n    xxLarge: 44,\n    height,\n    width\n}\n\nconst SHADOWS = {\n    small: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 2\n    },\n    medium: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 5.84,\n        elevation: 5\n    }\n}\n\nexport { COLORS, SIZES, SHADOWS }","import { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\n// import { COLORS } from '@/utils/theme'\nimport { Ionicons } from '@expo/vector-icons';\nimport { router } from 'expo-router';\nimport { COLORS } from '@/utils/theme';\n\n{/* Banner Section */}\n\nconst BannerVOne = () => {\n  return (\n    <View style={styles.container}>\n        <View style={styles.bannerSection}>\n          <Text style={styles.bannerTitle}>Customize Your Experience</Text>\n          <Text style={styles.bannerSubtitle}>\n          Manage your preferences, update account settings, and explore options to tailor your experience to your needs, even things like dark mode.\n          </Text>\n          <TouchableOpacity style={{ flexDirection: 'row',}} onPress={() => router.push('/appearance')}>\n          <Text style={styles.editPreferences}>Dark Mode</Text>\n          <Ionicons name=\"arrow-forward\" size={15} color=\"white\" style={styles.arrow} />\n          </TouchableOpacity>\n        </View>\n        </View>\n  )\n}\n\nexport default BannerVOne\n\nconst styles = StyleSheet.create({\n    container: {\n        // padding:16\n    },\n    bannerSection: {\n      backgroundColor: '#1C1C1E',\n      borderRadius: 15,\n      padding: 20,\n      marginBottom: 20,\n    },\n    bannerTitle: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: '#FFFFFF',\n      marginBottom: 10,\n    },\n  \n    bannerSubtitle: {\n      fontSize: 14,\n      color: COLORS.gray3,\n      marginBottom: 20,\n    },\n  \n    editPreferences: {\n      fontSize: 14,\n      color: COLORS.white,\n      fontWeight: 'bold',\n    },\n    \n    arrow : {\n      marginLeft: 10,\n      marginTop: 3,\n    },\n  });\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst Divider = () => {\n  return (\n    <View style={styles.divider}/>\n  )\n}\n\nexport default Divider\n\nconst styles = StyleSheet.create({\n\n    divider: {\n        height: 1,\n        backgroundColor:  '#EAEAEA',\n        marginTop: 10,\n        marginBottom: 10\n    }\n})","import React from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\nimport Divider from '@/components/divider/Divider';\n\nconst PromoBannerCard = () => {\n  const isDecider = true; // Assuming the condition is met. Replace with actual condition logic.\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <View style={styles.statusIcons}>\n          {/* Add status icons here */}\n        </View>\n      </View>\n      \n      <View style={styles.content}>\n        <Text style={styles.title}>Making —</Text>\n        <Text style={styles.title}>Days ` Better *</Text>\n        <View style={styles.subtitleContainer}>\n          <Text style={styles.subtitle}>Creating Economic - For Everyone.</Text>\n          {isDecider && (\n            <Ionicons name=\"arrow-forward\" size={24} color=\"#000\" style={styles.arrowIcon} />\n          )}\n        </View>\n        \n        <TouchableOpacity style={styles.button}>\n          <Text style={styles.buttonText}>Apply Now</Text>\n        </TouchableOpacity>\n        \n        <Image \n          source={{ uri: AWS_HOLDER_IMAGE }}\n          style={styles.image}\n        />\n      </View>\n     \n      <View style={styles.footer}>\n        <Text style={styles.footerText}>Active From 2018</Text>\n        <Divider />\n        <Text style={styles.footerStats}>1.2B</Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10,\n  },\n  time: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  statusIcons: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  content: {\n    marginTop: 30,\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n  },\n  subtitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  subtitle: {\n    fontSize: 16,\n  },\n  arrowIcon: {\n    marginLeft: 5,\n  },\n  button: {\n    backgroundColor: '#000',\n    padding: 15,\n    marginTop: 20,\n    borderRadius: 30,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n  },\n  image: {\n    width: '100%',\n    height: 200,\n    borderRadius: 15,\n    marginTop: 20,\n  },\n  footer: {\n    marginTop: 20,\n    // flexDirection: 'row',\n    // justifyContent: 'space-between',\n  },\n  footerText: {\n    fontSize: 20,\n  },\n  footerStats: {\n    fontSize: 48,\n    fontWeight: 'bold',\n  },\n});\n\nexport default PromoBannerCard;\n","import React from 'react';\nimport { Pressable, StyleProp, ViewStyle, PressableProps } from 'react-native';\n// import Config from '../Config';\n\ninterface Props extends PressableProps {\n  style?: StyleProp<ViewStyle>;\n  touchOpacity?: number;\n}\n\nconst MyPressable: React.FC<Props> = ({\n  style,\n  android_ripple = { color: 'lightgrey' },\n  touchOpacity = 0.4,\n  children,\n  ...restOfProps\n}) => {\n  return (\n    <Pressable\n      style={({ pressed }) => [\n        style,\n        // { opacity: !Config.isAndroid && pressed ? touchOpacity : 1 },\n      ]}\n      android_ripple={android_ripple}\n      {...restOfProps}\n    >\n      {children}\n    </Pressable>\n  );\n};\n\nexport default MyPressable;","import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet, ViewStyle, TextStyle } from 'react-native';\nimport {  MyButtonProps } from '../interfaces/MyButtonProps';\n\n\n\nconst MyButton: React.FC<MyButtonProps> = ({ onPress, title, buttonStyle, textStyle }) => {\n  return (\n    <TouchableOpacity style={[styles.button, buttonStyle]} onPress={onPress}>\n      <Text style={[styles.text, textStyle]}>{title}</Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default MyButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#FF6F61',\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: '#FFF',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n","import React, { FC, useContext } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\n// import { COLORS, SIZES } from '@/utils/theme';\nimport { Ionicons } from '@expo/vector-icons';\n// import { useNavigation } from '@react-navigation/native';\n// import { ProductModelProps } from '../../../models/ProductModelProps';\nimport { CartContext } from '@/contexts/CartContext';\n// import convertToCurrency from '../../../hook/convertToCurrency';\nimport { COLORS, SIZES } from '@/utils/theme';\n// import { Constants } from '@stripe/stripe-react-native';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Link } from 'expo-router';\n// import { ProductModelProps } from '@/app/models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport convertToCurrency from '@/hooks/convertToCurrency';\n// import { ProductModelProps } from '../../models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';;\n// import { CartContext } from '../../contexts/CartContext';\n\n export const ProductCardV2: FC<ProductModelProps> = (item) => {\n  // const navigation = useNavigation();\n  const { addToCart} = useContext(CartContext)\n\n  // const holderImage: string =  '../assets/images/adaptive-icon.png' ;\n\n  return ( \n    <View>\n      {/* @ts-ignore */}\n      <Link href={\"settings/\"}>\n    <TouchableOpacity onPress={() => {}}>\n    {/* <TouchableOpacity onPress={() => navigation.navigate(\"ProductDetails\", { item } as never)}> */}\n\n    {/* <TouchableOpacity onPressIn={() => navigation.navigate(\"ProductDetails\" as never)} >  */}\n\n      <View style={styles.container}>\n        {/* Image */}\n        <View style={styles.imageContainer}>\n          <Image style={styles.image} source={{ uri: item.image ? item.image : CONSTANTS.holderImageProductCard }} />\n        </View>\n\n        {/* Details */}\n        <View style={styles.details}>\n          <Text style={styles.title} numberOfLines={2}>{item.name}</Text>\n          <Text style={styles.supplier} numberOfLines={1}>{item.color_code}</Text>\n          <Text style={styles.price}>{convertToCurrency(item.price)}</Text>\n        </View>\n\n        {/* Button */}\n        <TouchableOpacity style={styles.addBtn} onPress={() => {addToCart(item)}}>\n          <Ionicons name='add-circle' size={35} color={COLORS.primary} />\n        </TouchableOpacity>\n      </View>\n    </TouchableOpacity>\n    </Link>\n   \n    </View>\n  );\n};\n\nexport default ProductCardV2;\n\n\n// export default ProductCardView; \n\nconst styles = StyleSheet.create({\n    container: {\n        width: 182,\n        height: 240,\n        marginEnd: 22,\n        borderRadius: SIZES.medium,\n        backgroundColor: COLORS.secondary,\n        // remove\n    },\n    imageContainer: {\n        flex: 1,\n        width: 170,\n        marginLeft: SIZES.small/2,\n        marginTop: SIZES.small/2,\n        borderRadius: SIZES.small,\n        overflow: \"hidden\"\n    },\n    image: {\n        aspectRatio: 1,\n        resizeMode: 'cover'\n    },\n    details: {\n        padding: SIZES.small,\n        \n \n    },\n    title: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.small ,\n        marginBottom: 2,\n        height: 35\n\n    },\n    supplier: {\n        fontFamily: \"regular\",\n        fontSize: SIZES.small,\n        color: COLORS.gray\n\n    },\n    price: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.medium,\n       \n    },\n    addBtn: {\n        position:\"absolute\",\n        bottom: SIZES.xSmall,\n        right: SIZES.xSmall,\n        \n\n\n    }\n\n})\n\n","import React, { FC, useContext } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image, Dimensions } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { CartContext } from '@/contexts/CartContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Link } from 'expo-router';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n\nconst { width } = Dimensions.get('window');\n\nconst ProductCardView: FC<{ product: ProductModelProps }> = ({ product }) => {\n  const navigation = useNavigation();\n  const { addToCart } = useContext(CartContext);\n  const { selectProduct } = useClientProduct();\n\n  const handleProductPress = () => {\n    selectProduct(product);\n  };\n\n  return (\n    <View>\n     <Link \n      href={`/products/${product.id}` as never}  \n      asChild\n     >\n        <TouchableOpacity onPress={handleProductPress}>\n          <View style={styles.container}>\n            {/* Image */}\n            <View style={styles.imageContainer}>\n              <Image \n                style={styles.image} \n                source={{ uri: product.images[0]}} \n              />\n            </View>\n\n            {/* Details */}\n            <View style={styles.details}>\n              <Text style={styles.title} numberOfLines={2}>{product.name}</Text>\n              <Text style={styles.supplier} numberOfLines={1}>{product.color_code}</Text>\n              <Text style={styles.price}>{convertToCurrency(product.price)}</Text>\n              {product.item_type === \"subscription\" && (\n                <Text style={{ fontSize: 10 }}>/per month</Text>\n              )}\n            </View>\n\n            {/* Button */}\n            <TouchableOpacity style={styles.addBtn} onPress={() => addToCart(product)}>\n              <Ionicons \n                name={product.item_type === \"subscription\" ? \"arrow-forward-circle-outline\" : 'add-circle'} \n                size={35} \n                color={COLORS.primary} \n              />\n            </TouchableOpacity>\n          </View>\n        </TouchableOpacity>\n      </Link>\n    </View>\n  );\n};\n\nexport default ProductCardView;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 162,\n    height: 240,\n    marginEnd: 22,\n    borderRadius: SIZES.medium,\n    backgroundColor: COLORS.secondary,\n    borderWidth: 2,\n    borderColor: 'black',\n  },\n  imageContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: SIZES.medium,\n    overflow: \"hidden\",\n    marginTop: SIZES.small / 2,\n  },\n  image: {\n    width: 142,\n    height: 142,\n    borderRadius: SIZES.small,\n    resizeMode: 'cover',\n    shadowOpacity: 400,\n    shadowColor: 'black',\n  },\n  details: {\n    padding: SIZES.small,\n  },\n  title: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.small,\n    marginBottom: 2,\n    height: 35,\n  },\n  supplier: {\n    fontFamily: \"regular\",\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  price: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.medium,\n  },\n  addBtn: {\n    position: \"absolute\",\n    bottom: SIZES.xSmall,\n    right: SIZES.xSmall,\n  }\n});\n","import { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\nimport { COLORS } from '@/utils/theme'\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\n\nconst TalentCard = () => {\n  const {authState} = useAuth()\n\n  return (\n    <View style={styles.talentCard}>\n          <Image \n            source={{ uri: AWS_HOLDER_IMAGE }} \n            style={styles.profileImage} \n          />\n          <View style={styles.talentInfo}>\n            <Text style={styles.talentName}>{authState?.user?.name}</Text>\n            <Text style={styles.talentTitle}>UX Researcher, Applause</Text>\n            <View style={styles.socialIcons}>\n              <Ionicons name=\"logo-linkedin\" size={20} color=\"#0077B5\" style={styles.socialIcon} />\n              <Ionicons name=\"globe-outline\" size={20} color=\"black\" style={styles.socialIcon} />\n            </View>\n            <Text style={styles.recommendation}>Highly recommended by 3 mentors</Text>\n            <View style={styles.experienceSection}>\n              <Text style={styles.experienceLabel}>Experience</Text>\n              <Text style={styles.experienceValue}>5 years 1 month</Text>\n            </View>\n            <View style={styles.openToSection}>\n              <Text style={styles.openToLabel}>Open to</Text>\n              <Text style={styles.openToValue}>Full Time Roles</Text>\n            </View>\n            <View style={styles.skillsSection}>\n              <Text style={styles.skill}>Product Management</Text>\n              <Text style={styles.skill}>+2</Text>\n            </View>\n          </View>\n          <TouchableOpacity style={styles.chatButton}>\n            <Text style={styles.chatButtonText}>Request to chat</Text>\n          </TouchableOpacity>\n        </View>\n  )\n}\n\nexport default TalentCard\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#F5F5F5',\n    },\n  \n    scrollViewContent: {\n      paddingHorizontal: 16,\n      paddingTop: 20,\n    },\n  \n    header: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 20,\n    },\n  \n    headerTitle: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      marginLeft: 10,\n    },\n    bannerSection: {\n      backgroundColor: '#1C1C1E',\n      borderRadius: 15,\n      padding: 20,\n      marginBottom: 20,\n    },\n    bannerTitle: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: '#FFFFFF',\n      marginBottom: 10,\n    },\n  \n    bannerSubtitle: {\n      fontSize: 14,\n      color: COLORS.gray3,\n      marginBottom: 20,\n    },\n  \n    editPreferences: {\n      fontSize: 14,\n      color: COLORS.white,\n      fontWeight: 'bold',\n    },\n    searchSection: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 20,\n      backgroundColor: '#FFFFFF',\n      borderRadius: 10,\n      paddingHorizontal: 10,\n      paddingVertical: 12,\n    },\n    searchInput: {\n      flex: 1,\n      fontSize: 16,\n      color: '#000',\n    },\n    filterIcon: {\n      marginLeft: 10,\n    },\n  \n    arrow : {\n      marginLeft: 10,\n      marginTop: 3,\n  \n    },\n    talentCount: {\n      fontSize: 14,\n      color: '#A0A0A0',\n      marginBottom: 20,\n    },\n    talentCard: {\n      backgroundColor: '#FFFFFF',\n      borderRadius: 15,\n      padding: 20,\n      marginBottom: 20,\n    },\n    profileImage: {\n      width: 60,\n      height: 60,\n      borderRadius: 30,\n      marginBottom: 10,\n    },\n    talentInfo: {\n      marginBottom: 20,\n    },\n    talentName: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: '#000',\n      marginBottom: 5,\n    },\n    talentTitle: {\n      fontSize: 14,\n      color: '#A0A0A0',\n      marginBottom: 10,\n    },\n    socialIcons: {\n      flexDirection: 'row',\n      marginBottom: 10,\n    },\n    socialIcon: {\n      marginRight: 10,\n    },\n    recommendation: {\n      fontSize: 14,\n      color: '#A0A0A0',\n      marginBottom: 20,\n    },\n    experienceSection: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 10,\n    },\n    experienceLabel: {\n      fontSize: 14,\n      color: '#A0A0A0',\n    },\n    experienceValue: {\n      fontSize: 14,\n      color: '#000',\n    },\n    openToSection: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 10,\n    },\n    openToLabel: {\n      fontSize: 14,\n      color: '#A0A0A0',\n    },\n    openToValue: {\n      fontSize: 14,\n      color: '#000',\n    },\n    skillsSection: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 20,\n    },\n    skill: {\n      fontSize: 14,\n      color: '#4A90E2',\n      backgroundColor: '#EAF4FE',\n      paddingHorizontal: 8,\n      paddingVertical: 4,\n      borderRadius: 5,\n    },\n    chatButton: {\n      backgroundColor: '#1C1C1E',\n      borderRadius: 10,\n      paddingVertical: 15,\n      alignItems: 'center',\n    },\n    chatButtonText: {\n      fontSize: 16,\n      color: '#FFFFFF',\n      fontWeight: 'bold',\n    },\n  });\n  ","import { StyleSheet, Text, View , Image, TouchableOpacity} from 'react-native'\nimport React, { FC } from 'react'\n// import { OrderModelProps } from '../../models/OrderModelProps';\nimport { useNavigation } from '@react-navigation/native';\nimport { COLORS, SHADOWS, SIZES } from '@/utils/theme';\nimport convertToCurrency from '@/hooks/convertToCurrency';;\nimport { CONSTANTS } from '@/utils/constants';\nimport { OrderModelProps } from '@/models/OrderModelProps';\n// import { OrderModelProps } from '@/app/models/OrderModelProps';\n\nexport const OrderCrudCard: FC<OrderModelProps> = (item) => {\n    const navigation = useNavigation();\n    \n    return (\n    <View>\n        \n        {/* @ts-ignore */}\n        <TouchableOpacity style={styles.container} onPress={() => navigation.navigate(\"EditOrder\" , { item })}>\n\n            <View style={styles.image}>\n                <Image source={{uri: CONSTANTS.holderImageOrderCard }} style={styles.orderImg} />\n            </View>\n            <View style={styles.textContainer}>\n                <Text style={styles.orderTitle}>{item.title}</Text>\n                <Text style={styles.supplier}>{convertToCurrency(item.total)}</Text>\n            </View>\n        </TouchableOpacity>\n    </View>\n  )\n}\n\nexport default OrderCrudCard\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: SIZES.small,\n        flexDirection: \"row\",\n        padding: SIZES.medium,\n        borderRadius: SIZES.small,\n        backgroundColor: \"#fff\",\n        ...SHADOWS.medium,\n        shadowColor: COLORS.lightWhite,\n        // height: 120\n    },\n    image: {\n        width: 70,\n        backgroundColor: COLORS.secondary,\n        borderRadius: SIZES.medium,\n        justifyContent: \"center\",\n        alignContent: \"center\"\n    },\n    orderImg: {\n        width: '100%',\n        height: 65,\n        borderRadius: SIZES.small,\n        resizeMode: \"cover\"\n    },\n    textContainer: {\n        flex: 1,\n        marginHorizontal: SIZES.medium\n    },\n    orderTitle: {\n        fontSize: SIZES.medium,\n        fontFamily: \"bold\",\n        color: COLORS.primary\n\n    },\n    supplier: {\n        fontSize: SIZES.small + 2,\n        fontFamily: \"bold\",\n        color: COLORS.gray,\n        marginTop: 3\n\n    }\n})","import { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\n\nconst DeleteSectionView = () => {\n  return (\n    <View style={styles.deleteContainer}>\n    <Text style={styles.deleteLabel}>Delete account</Text>\n    <Text style={styles.deleteDescription}>\n      Your account will be permanently removed from the application. All your data will be lost.\n    </Text>\n    <TouchableOpacity style={styles.deleteButton}>\n      <Text style={styles.deleteButtonText}>Delete account</Text>\n    </TouchableOpacity>\n  </View>\n  )\n}\n\nexport default DeleteSectionView\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n    },\n    header: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      marginBottom: 20,\n      textAlign: 'center',\n    },\n    \n    deleteContainer: {\n      marginTop: 20,\n    },\n    deleteLabel: {\n      fontSize: 18,\n      color: 'red',\n      fontWeight: 'bold',\n      marginBottom: 10,\n    },\n    deleteDescription: {\n      fontSize: 14,\n      color: '#555',\n      marginBottom: 10,\n    },\n    deleteButton: {\n      backgroundColor: 'red',\n      padding: 10,\n      borderRadius: 5,\n    },\n    deleteButtonText: {\n      color: '#fff',\n      textAlign: 'center',\n      fontWeight: 'bold',\n    },\n  });\n  \n  ","import React from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  StyleSheet,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { AWS_HOLDER_IMAGE } from \"@/utils/api\";\n// import Colors from \"@/constants/Colors\";\n// import { COLORS } from \"@/utils/theme\";\n// import { useAuth } from \"@/contexts/AuthContext\";\n\nconst SearchBarVOne = () => {\n  return (\n    <View>\n    <View style={styles.container}>\n      <View style={styles.searchSection}>\n        <TextInput\n          style={styles.searchInput}\n          placeholder=\"Search keywords\"\n          placeholderTextColor=\"#A0A0A0\"\n        />\n      </View>\n\n      <View style={styles.filterSection}>\n        <TouchableOpacity>\n          <Ionicons\n            name=\"options-outline\"\n            size={24}\n            color=\"black\"\n            style={styles.filterIcon}\n          />\n        </TouchableOpacity>\n      </View>\n\n      </View>\n    </View>\n  );\n};\n\nexport default SearchBarVOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n  },\n\n  talentCount: {\n    fontSize: 14,\n    color: \"#A0A0A0\",\n    marginBottom: 20,\n  },\n  searchSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    // backgroundColor: \"#transparent\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n    width: \"80%\",\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 16,\n    color: \"#000\",\n  },\n  filterSection: {\n    // marginLeft: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    marginLeft: 15,\n    // backgroundColor: \"#FFFFFF\",\n    // backgroundColor: \"#transparent\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  filterIcon: {\n    paddingLeft: 3,\n    paddingRight: 3,\n    // marginLeft: 10,\n    // flexDirection: \"row\",\n    // alignItems: \"center\",\n    // marginBottom: 20,\n    // backgroundColor: \"#FFFFFF\",\n    // borderRadius: 10,\n    // paddingHorizontal: 10,\n    // paddingVertical: 12,\n  },\n\n  arrow: {\n    marginLeft: 10,\n    marginTop: 3,\n  },\n});\n","import React from 'react';\nimport { View, Text, Image, TextInput, TouchableOpacity, ScrollView, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\n// import Colors from '@/constants/Colors';\nimport { COLORS } from '@/utils/theme';\nimport { useAuth } from '@/contexts/AuthContext';\nimport SearchBarVOne from '@/components/search/SearchBarVOne';\nimport BannerVOne from '../banner/BannerVOne';\nimport TalentCard from '../card/TalentCard';\n\nconst ExtractSettings = () => {\n\n  const {authState} = useAuth()\n  return (\n    <View style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollViewContent}>        \n        {/* Banner Section */}\n        <BannerVOne />\n\n        {/* Search Section */}\n        <SearchBarVOne />\n    \n        {/* Talent Card */}\n        <TalentCard />\n\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default ExtractSettings;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n  },\n\n  scrollViewContent: {\n    paddingHorizontal: 16,\n    paddingTop: 20,\n  },\n\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 10,\n  },\n  bannerSection: {\n    backgroundColor: '#1C1C1E',\n    borderRadius: 15,\n    padding: 20,\n    marginBottom: 20,\n  },\n  bannerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 10,\n  },\n\n  bannerSubtitle: {\n    fontSize: 14,\n    color: COLORS.gray3,\n    marginBottom: 20,\n  },\n\n  editPreferences: {\n    fontSize: 14,\n    color: COLORS.white,\n    fontWeight: 'bold',\n  },\n  searchSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 16,\n    color: '#000',\n  },\n  filterIcon: {\n    marginLeft: 10,\n  },\n\n  arrow : {\n    marginLeft: 10,\n    marginTop: 3,\n\n  },\n  talentCount: {\n    fontSize: 14,\n    color: '#A0A0A0',\n    marginBottom: 20,\n  },\n  talentCard: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 15,\n    padding: 20,\n    marginBottom: 20,\n  },\n  profileImage: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginBottom: 10,\n  },\n  talentInfo: {\n    marginBottom: 20,\n  },\n  talentName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5,\n  },\n  talentTitle: {\n    fontSize: 14,\n    color: '#A0A0A0',\n    marginBottom: 10,\n  },\n  socialIcons: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  socialIcon: {\n    marginRight: 10,\n  },\n  recommendation: {\n    fontSize: 14,\n    color: '#A0A0A0',\n    marginBottom: 20,\n  },\n  experienceSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  experienceLabel: {\n    fontSize: 14,\n    color: '#A0A0A0',\n  },\n  experienceValue: {\n    fontSize: 14,\n    color: '#000',\n  },\n  openToSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  openToLabel: {\n    fontSize: 14,\n    color: '#A0A0A0',\n  },\n  openToValue: {\n    fontSize: 14,\n    color: '#000',\n  },\n  skillsSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  skill: {\n    fontSize: 14,\n    color: '#4A90E2',\n    backgroundColor: '#EAF4FE',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 5,\n  },\n  chatButton: {\n    backgroundColor: '#1C1C1E',\n    borderRadius: 10,\n    paddingVertical: 15,\n    alignItems: 'center',\n  },\n  chatButtonText: {\n    fontSize: 16,\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n  },\n});\n","import {\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from \"react-native\";\nimport React from \"react\";\nimport { useAuth } from \"../../../../contexts/AuthContext\";\nimport { COLORS, SIZES } from \"@/utils/theme\";\nimport ProductCardView from \"@/components/card/ProductCardView\";\nimport { ProductModelProps } from \"@/models/ProductModelProps\";\n// import { useClientProduct } from \"@/contexts/ClientProductContext\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport { useClientProduct } from \"@/contexts/ClientProductContext\";\n\nexport interface ClientStateProps {\n  client: boolean;\n}\n\nconst ProductRow: React.FC<ClientStateProps> = ({ client }) => {\n  const { authState } = useAuth();\n  const storeID = client ? authState?.user?.store_owner_id || '' : CONSTANTS.store_id;\n  const email = authState?.user?.email || '';\n  const { products, selectedProduct, selectProduct, isLoading, error } = useClientProduct();\n\n  const handleProductSelect = (product: ProductModelProps) => {\n    selectProduct(product);\n  };\n\n  return (\n    <View style={styles.container}>\n      {isLoading ? (\n        <ActivityIndicator size=\"large\" color={COLORS.primary} />\n      ) : error ? (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>Error Loading Data: {error}</Text>\n        </View>\n      ) : (\n        <>\n          <FlatList\n            keyExtractor={(item: ProductModelProps) => item.id.toString()}\n            data={products}\n            renderItem={({ item }) => (\n              <TouchableOpacity onPress={() => handleProductSelect(item)}>\n                <ProductCardView product={item} />\n              </TouchableOpacity>\n            )}\n            horizontal\n            contentContainerStyle={{ columnGap: SIZES.medium }}\n          />\n          {/* {selectedProduct && (\n            <View style={styles.selectedProductContainer}>\n              <Text style={styles.selectedProductText}>\n                Selected Product: {selectedProduct.name}\n              </Text>\n            </View>\n          )} */}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default ProductRow;\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: SIZES.medium,\n    marginLeft: 12,\n  },\n  errorContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorText: {\n    color: COLORS.red,\n    fontSize: SIZES.medium,\n  },\n  selectedProductContainer: {\n    marginTop: SIZES.medium,\n    padding: SIZES.medium,\n    backgroundColor: COLORS.gray2,\n    borderRadius: SIZES.small,\n  },\n  selectedProductText: {\n    fontSize: SIZES.large,\n    fontWeight: 'bold',\n  },\n});\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { SafeAreaView } from 'react-native-safe-area-context'\n// import useFetchObject from '@/hooks/useFetchObject'\n// import { StoreProps } from '@/app/models/StoreProps'\n// import { getStore } from '../../api/storeApi'\n// import { Constants } from '@stripe/stripe-react-native'\nimport { CONSTANTS } from '@/utils/constants'\nimport useFetchObject from '@/hooks/useFetchObject'\n// import { StoreProps } from '@/models/StoreProps'\nimport { getStore } from '@/api/storeApi'\nimport { StoreModelProps } from '@/models/StoreModelProps'\nimport { useClientStore } from '@/contexts/ClientStoreContext'\n// import { StoreProps } from '@/app/models/StoreProps'\n\nconst TopSectionHeaderV1 = () => {\n  const { store } = useClientStore()\n  // const { data: store } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id));\n  // const { data: store } = useFetchObject<StoreProps>(() => getStore(authState?.user?.id));\n\n  return (\n    <View style={styles.container}>\n        <Text style={styles.line1}>{store?.store_name}</Text>\n        <Text style={[styles.line2, { marginTop: 0, color: COLORS.black }]}>We Build Apps</Text>\n    </View>\n  )\n}\n\n\nconst TopSectionHeaderV2 = () => {\n    return (\n      <View style={styles.container}>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.black }]}>Apps For</Text>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.primary }]}>Mankind</Text>\n      </View>\n    )\n  }\n\n  \n  const TopSectionHeaderV3 = () => {\n    return (\n      <View style={styles.container}>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.black }]}>Apps For</Text>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.primary }]}>Mankind</Text>\n      </View>\n    )\n  }\n\n  \n\n  export { TopSectionHeaderV1, TopSectionHeaderV2, TopSectionHeaderV3 };\n\nconst styles = StyleSheet.create({\n    container: {\n        width: \"100%\",\n        marginLeft: 15\n      },\n      line1: {\n        marginTop: 0, \n        color: COLORS.gray , \n        fontSize: 14\n      }, \n      line2: {\n        marginTop: 0, \n        color: COLORS.black , \n        fontSize: 33,\n        fontWeight: 700\n      },\n      line3: {\n        marginTop: 0, \n        color: COLORS.black , \n        fontSize: 14\n      },\n      welcomeTxtStyle: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.xxLarge -7, // Example value, replace with your own\n        marginTop: 0, // Example value, replace with your own\n        color:  '#000', // Use provided color or fallback to black if not provided\n          marginHorizontal: 12\n      },\n})","import React, { FC, FunctionComponent, useRef } from 'react';\nimport { Animated, Dimensions, FlatList, Image, StyleSheet, View } from 'react-native';\n// import useFetchObject from '@/hooks/useFetchObject';\n// import { StoreProps } from '@/app/models/StoreProps';\n// import { getStore } from '../../api/storeApi';\nimport { CONSTANTS } from '@/utils/constants';\nimport useFetchObject from '@/hooks/useFetchObject';\n// import { StoreProps } from '@/models/StoreProps';\nimport { getStore } from '@/api/storeApi';\nimport { StoreModelProps } from '@/models/StoreModelProps';\nimport { useClientStore } from '@/contexts/ClientStoreContext';\n// import { StoreProps } from '@/app/models/StoreProps';\n\n// const images: string[] = [\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_1.jpg',\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_3.jpg',\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_4.jpg',\n// ];\n\nconst { width } = Dimensions.get('screen');\n\nconst Carousel: FunctionComponent = () => {\n  const animatedValue = useRef(new Animated.Value(0)).current;\n  // const { data: mankindStore } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id));\n  // const { data: store } = useFetchObject<StoreProps>(() => getStore(authState?.user?.id));\n\n  const { store : mankindStore } = useClientStore()\n  const storeImages: string[] = [\n    mankindStore?.images.about_object_image ?? CONSTANTS.holderCarouselImageOne,\n    mankindStore?.images.doubleImageHero_left_image ?? CONSTANTS.holderCarouselImageTwo,\n    mankindStore?.images.profile_image ?? CONSTANTS.holderCarouselImageThree\n  ]\n\n  return (\n    <View style={style.container}>\n      <View style={style.topContainer}>  \n        <Animated.FlatList\n          data={storeImages}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          onScroll={Animated.event(\n            [{ nativeEvent: { contentOffset: { x: animatedValue } } }],\n            { useNativeDriver: false },\n          )}\n          pagingEnabled={true}\n          keyExtractor={(_, index) => index.toString()}\n          renderItem={({ item }) => {\n            return (\n              <View style={style.imageContainer}>\n                <Image style={style.image} source={{ uri: item ? item : CONSTANTS.holderImage }} />\n              </View>\n            );\n          }}\n        />\n      </View>\n      <View style={style.bottomContainer}>\n        <FlatList\n          horizontal\n          data={storeImages}\n          keyExtractor={(_, index) => index.toString()}\n          renderItem={({ index }) => {\n            const inputRange = [\n              (index - 1) * width,\n              index * width,\n              (index + 1) * width,\n            ];\n            //  [ middle none selected color , selected color, none selected color  ]\n            const colorOutputRange = ['#000', '#fff', '#000'];\n            const scaleOutputRange = [1, 2, 1];\n            const dotScale = animatedValue.interpolate({\n              inputRange,\n              outputRange: scaleOutputRange,\n              extrapolate: 'clamp',\n            });\n            const color = animatedValue.interpolate({\n              inputRange,\n              outputRange: colorOutputRange,\n              extrapolate: 'clamp',\n            });\n            return (\n              <View  style={[style.dotContainer, { borderStartColor:  'clear'}]}>\n\n                <PagingDot color={color} scale={dotScale} />\n               \n\n              </View>\n            );\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst PagingDot: FC<{ scale: any, color: any }> = ({ scale, color }) => {\n  return (\n    <Animated.View\n      style={[style.pagingDot, { backgroundColor: color, transform: [{ scale }] }]}\n    />\n  );\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 3,\n  },\n  topContainer: {\n    flex: 2,\n  },\n  bottomContainer: {\n    flex: 1,\n    width,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'absolute', \n   bottom: 10\n  },\n  imageContainer: {\n    justifyContent: 'flex-end',\n    // paddingBottom: 40,\n    alignItems: 'center',\n    width,\n  },\n  image: {\n    width: '92%',\n    height: 220,\n    borderRadius: 15,\n  },\n  pagingDot: {\n    width: 7,\n    height: 7,\n    borderRadius: 7,\n    borderWidth: 2,\n    // borderColor: \"#000\",\n  },\n  dotContainer: {\n   width: 30,\n   padding: 10,\n  \n  },\n});\n\nexport default Carousel;\n\n\n","import { Pressable, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { Ionicons } from \"@expo/vector-icons\"\nimport { Link } from 'expo-router'\nimport { useClientStore } from '@/contexts/ClientStoreContext'\nimport { ROUTES } from '@/utils/Routes'\n// import EditScreenInfo from '../EditScreenInfo'\n\nconst SectionHeader = () => {\n    const { store } = useClientStore()\n\n  return (\n    <View style={styles.container}>\n        <View style={styles.header}>\n            <Text style={styles.headerTitle}>{store?.store_type ?? \"\"}</Text>\n            <Link href={ROUTES.products as never} asChild>\n            <TouchableOpacity>\n            {/* <TouchableOpacity onPress={() => navigation.navigate(\"ProductDetails\", { item })}> */}\n                    <Ionicons name='grid' size={SIZES.xLarge} color={COLORS.primary}/>\n            </TouchableOpacity>\n            </Link>\n        </View>\n   \n    </View>\n  )\n}\n\nexport default SectionHeader\n\nconst styles = StyleSheet.create({\n    container: {\n        marginTop: SIZES.medium,\n        // marginBottom: SIZES.xSmall,\n        marginHorizontal: 12,\n    },\n    header: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n\n    },\n    headerTitle: {\n       fontWeight: 'bold',\n        fontSize: SIZES.xLarge -2\n    }\n})\n\n\n","import React, { FC } from 'react'\nimport { TouchableOpacity, Text, View , ScrollView } from 'react-native'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { StyleSheet } from \"react-native\";\n// import { COLORS, SIZES } from \"../utils/theme\";\n\nimport { Ionicons , Fontisto} from '@expo/vector-icons'\n// import { TopSectionHeaderV1 } from '@/components/home/TopSectionHeader';\n// import SearchBar from '@/components/other/general/SearchBar';\n// import Carousel from '@/components/home/Carousel';\n// import SectionHeader from '@/components/home/Headings';\nimport ProductRow from '@/components/other/cards/other/ProductRow';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { TopSectionHeaderV1 } from '@/components/pages/home/TopSectionHeader';\nimport Carousel from '@/components/pages/home/Carousel';\nimport SectionHeader from '@/components/pages/home/Headings';\nimport { useClientStore } from '@/contexts/ClientStoreContext';\nimport SearchBar from '../search/SearchBar';\nimport SearchBarVOne from '../search/SearchBarVOne';\n\n\nconst HomeDesignOne: FC = () => {\n    const { store } = useClientStore()\n\n    return (\n \n        <ScrollView \n          showsVerticalScrollIndicator={false} \n          style={{\n            backgroundColor: 'white',\n            paddingTop: 10\n\n            \n          }}>\n            <TopSectionHeaderV1 />\n            <SearchBarVOne />\n            <Carousel />\n            <SectionHeader /> \n           <ProductRow client={false} />\n           <View style={{paddingBottom: 200}}></View>\n\n        </ScrollView>\n  \n\n  )\n}\n\n\nexport default HomeDesignOne \n\n\n\nconst styles = StyleSheet.create({\n  textStyle: {\n      fontFamily: \"bold\",\n      fontSize: 40\n  },\n  appBarWrapper: {\n      marginHorizontal: 22,\n      marginTop: SIZES.small\n  },\n  appBar: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n  },\n  location: {\n      fontFamily: \"semibold\",\n      fontSize: SIZES.medium,\n      color: COLORS.gray\n  },\n  cartCount: {\n      position: \"absolute\",\n      bottom: 16,\n      width: 16,\n      height: 16,\n      borderRadius: 8,\n      alignItems: \"center\",\n      backgroundColor: \"green\",\n      justifyContent: \"center\",\n      zIndex: 999\n  },\n  cartNumber: {\n      fontFamily: \"regular\",\n      fontWeight: \"600\",\n      fontSize: 10,\n      color: COLORS.lightWhite\n  }\n\n})\n// function useClientStore(): { store: any; } {\n//     throw new Error('Function not implemented.');\n// }\n\n","import React, { FC } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { COLORS } from \"@/utils/theme\";\nimport { useRouter, Href } from \"expo-router\";\n\ninterface SearchBarVOneButtonProps {\n  path: Href;  // Update the type to Href\n}\n\nconst SearchBarVOneButton: FC<SearchBarVOneButtonProps> = ({ path }) => {\n  const router = useRouter();\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={() => { router.push(path); }}  // Use the correctly typed path\n        style={styles.searchSection}\n      >\n        <View style={styles.searchInput}>\n          <Text style={{ color: COLORS.gray }}>Search keywords</Text>\n        </View>\n      </TouchableOpacity>\n\n      <View style={styles.filterSection}>\n        <TouchableOpacity onPress={() => { router.push(\"/search\"); }}>\n          <Feather name=\"search\" size={24} style={styles.searchIcon} />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default SearchBarVOneButton;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n  },\n  searchIcon: {\n    marginHorizontal: 10,\n    color: COLORS.gray,\n  },\n  searchSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n    width: \"80%\",\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 16,\n    color: \"#000\",\n  },\n  filterSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginLeft: 15,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\nimport { View as MotiView } from \"moti\";\n// import RoundedButton from \"@/app/(tabs)/(home)/(drawer)/(component-library)/lib-buttons/[roundedButton]\";\nimport { COLORS } from \"@/utils/theme\";\nimport { Link, router } from \"expo-router\";\nimport SearchBarVOne from \"../search/SearchBarVOne\";\nimport SearchBar from \"../search/SearchBar\";\nimport SearchBarVOneButton from \"../search/SearchBarVOneButton\";\nimport { ROUTES } from \"@/utils/Routes\";\n// import SearchBar from \"@/components/other/general/SearchBar\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst TopHomeSeaction: React.FC = () => {\n  const { store } = useClientStore();\n\n  const [isMenuVisible, setIsMenuVisible] = useState(true);\n\n  const handleMenuPress = () => {\n    // Toggle the visibility of the menu icon\n    setIsMenuVisible((prev) => !prev);\n  };\n\n\n  return (\n    <View style={styles.container}>\n      {/* Header */}\n      <View style={styles.header}>\n        <MotiView\n          key={`menu`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: 1, translateY: 0, scale: 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay: 1200,\n          }}\n        >\n          <Text style={styles.headerText}>Welcome to</Text>\n        </MotiView>\n        <MotiView\n          key={`i`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: 1, translateY: 0, scale: 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay: 1300,\n          }}\n        >\n          <TouchableOpacity style={styles.menuIcon} onPress={handleMenuPress}>\n            <Ionicons name=\"menu-outline\" size={24} color=\"black\" />\n          </TouchableOpacity>\n        </MotiView>\n      </View>\n\n      {/* Title */}\n      <View style={styles.titleContainer}>\n        <Text style={styles.mainTitle}>Jays</Text>\n        <MotiView\n          key={`sea`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: -10 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay: 1400,\n          }}\n        >\n          <Text style={styles.subTitle}>Sea Moss</Text>\n        </MotiView>\n      </View>\n\n      {/* Product List */}\n      <View style={styles.productList}>\n        <MotiView\n          key={`t1`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          // animate={{ opacity: 1, translateY: 0, scale: 1 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 600 : 0,\n          }}\n        >\n          <Text style={styles.productItem}> All Products</Text>\n        </MotiView>\n        <MotiView\n          key={`t2`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 700 : 0,\n          }}\n        >\n          <Text style={styles.productItem}>Raw Sea Moss</Text>\n        </MotiView>\n        <MotiView\n          key={`t3`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 800 : 0,\n          }}\n        >\n          <Text style={styles.productItem}>Sea Moss Gel</Text>\n        </MotiView>\n        <MotiView\n          key={`t4`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 900 : 0,\n          }}\n        >\n          <Text style={styles.productItem}>Sea Moss Capsules</Text>\n        </MotiView>\n        <MotiView\n          key={`t5`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 1000 : 0,\n          }}\n        >\n          <Text style={styles.productItem}>Sea Moss Powder</Text>\n        </MotiView>\n      </View>\n\n      {/* Image */}\n      <MotiView\n        key={`image`} // Force re-render to reset animation\n        from={{ opacity: 0, translateY: -10, scale: 0.85 }}\n        animate={{ opacity: 1, translateY: 0, scale: 1 }}\n        transition={{\n          type: \"timing\",\n          duration: 600,\n          delay: 1500,\n        }}\n      >\n        <Image\n          source={{ uri: store?.images.welcome_image }} // Replace with your image URL\n          style={styles.image}\n          resizeMode=\"cover\"\n        />\n      </MotiView>\n\n      {/* Description */}\n      <MotiView\n        key={`description`} // Force re-render to reset animation\n        from={{ opacity: 0, translateX: -90, scale: 0.85 }}\n        animate={{ opacity: 1, translateX: 0, scale: 1 }}\n        transition={{\n          type: \"timing\",\n          duration: 600,\n          delay: 1500,\n        }}\n      >\n        <Text style={styles.description}>\n          Discover the natural benefits of Sea Moss, rich in essential minerals\n          and nutrients to support your health and well-being.\n        </Text>\n      </MotiView>\n\n      <MotiView\n        key={`shop`} // Force re-render to reset animation\n        from={{ opacity: 0, translateX: -90, scale: 0.85 }}\n        animate={{ opacity: 1, translateX: 0, scale: 1 }}\n        transition={{\n          type: \"timing\",\n          duration: 600,\n          delay: 1600,\n        }}\n      >\n       \n          <View style={{ paddingTop: 20 }}>\n          <TouchableOpacity  style={styles.shopNowButton} onPress={() => router.push(\"/products\")}>\n          <Text style={styles.shopNowButtonText}>Shop</Text>\n            </TouchableOpacity>\n          </View>\n\n          <View style={{ paddingTop: 20 }}>\n          <SearchBarVOneButton path={ROUTES.products as never} />\n          </View>\n          {/* <SearchBar /> */}\n      \n      </MotiView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 20,\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  headerText: {\n    fontSize: 14,\n    color: \"black\",\n  },\n  menuIcon: {\n    paddingVertical: 10,\n  },\n  titleContainer: {\n    marginTop: 20,\n  },\n  mainTitle: {\n    fontSize: 48,\n    fontWeight: \"bold\",\n    color: \"black\",\n    lineHeight: 50,\n  },\n  subTitle: {\n    fontSize: 48,\n    fontWeight: \"300\",\n    color: \"black\",\n    lineHeight: 50,\n  },\n  productList: {\n    position: \"absolute\",\n    top: 60,\n    right: 20,\n    alignItems: \"flex-end\",\n  },\n  productItem: {\n    fontSize: 16,\n    color: \"black\",\n    marginBottom: 5,\n  },\n  image: {\n    width: width - 40,\n    height: 300,\n    borderRadius: 10,\n    marginTop: 20,\n  },\n  description: {\n    fontSize: 16,\n    color: \"black\",\n    textAlign: \"left\",\n    marginTop: 20,\n  },\n\n  shopNowButton: {\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    backgroundColor: COLORS.primary,\n    borderRadius: 25,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 8, // Adds shadow for Android\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"40%\", // Adjust the width as needed\n    // alignSelf: 'center', // Center the button within its parent\n  },\n  shopNowButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n    letterSpacing: 1,\n    textTransform: \"uppercase\",\n  },\n});\n\nexport default TopHomeSeaction;\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  ScrollView,\n} from \"react-native\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\nimport { View as MotiView } from \"moti\";\nimport TopHomeSeaction from \"./TopHomeSeaction\";\n// import SearchBar from '@/components/other/general/SearchBar';\nimport ProductRow from \"@/components/other/cards/other/ProductRow\";\nimport Carousel from \"@/components/pages/home/Carousel\";\nimport SectionHeader from \"@/components/pages/home/Headings\";\nimport { AWS_HOLDER_IMAGE } from \"@/utils/api\";\nimport { router } from \"expo-router\";\nimport { ROUTES } from \"@/utils/Routes\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst HomeDesignTwo: React.FC = () => {\n  const { store } = useClientStore();\n\n  return (\n    <ScrollView\n      showsVerticalScrollIndicator={false}\n      style={{\n        backgroundColor: \"white\",\n        paddingTop: 30,\n        paddingBottom: 200,\n      }}\n    >\n      <TopHomeSeaction />\n      <SectionHeader />\n      <ProductRow client={true} />\n      <View style={styles.card}>\n  <Image\n    source={{ uri: store?.images.welcome_image }} // Replace with your actual image URL\n    style={styles.profileImage}\n  />\n  <Text style={styles.name}>JACOB JAMES</Text>\n  <Text style={styles.title}>Founder of {store?.store_name ?? \"\"} Co.</Text>\n  <TouchableOpacity style={styles.button} onPress={() => router.push(ROUTES.products as never)}>\n    <Text style={styles.buttonText}>EXPLORE PRODUCTS</Text>\n  </TouchableOpacity>\n  <Text style={{padding: 10, fontSize: 40, paddingBottom: 30}}> 🌿</Text>\n  <Text style={styles.description}>\n    Leading the way in natural wellness with a focus on the incredible benefits of sea moss...\n  </Text>\n  {/* <Text style={styles.healthTip}>\n    🌿 Health Tip: Sea Moss is packed with 92 essential minerals that can support overall wellness, improve skin health, and boost your immune system. Add it to your smoothies or meals for a natural health boost!\n  </Text> */}\n</View>\n\n\n      <Carousel />\n\n      <View style={{ paddingTop: 40 }} />\n    </ScrollView>\n  );\n};\n\nexport default HomeDesignTwo;\n\n\n// card\nconst styles = StyleSheet.create({\n  card: {\n    // width: width * 0.9,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    elevation: 3,\n    marginVertical: 10,\n  },\n  profileImage: {\n    width: width - 40,\n    height: 500,\n    borderRadius: 10,\n    marginBottom: 20,\n\n  },\n  healthTip: {\n    marginTop: 10,\n    fontSize: 14,\n    color: 'green',\n    fontStyle: 'italic',\n  },  \n  name: {\n    fontSize: 24,\n    fontWeight: '900',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  title: {\n    fontSize: 16,\n    color: '#6e6e6e',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  button: {\n    // fontWeight: '900',\n    backgroundColor: '#000',\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 15,\n    marginBottom: 20,\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n    color: '#6e6e6e',\n    textAlign: 'center',\n  },\n});","import React from 'react';\nimport { Alert } from 'react-native';\nimport { useRouter } from 'expo-router';\n\ninterface AlertComponentProps {\n  title: string;\n  message: string;\n  cancelText?: string;\n  updateText?: string;\n  onCancelPress?: () => void;\n  onUpdatePress?: () => void;\n  cancelable?: boolean;\n}\n\nexport const MyAlert: React.FC<AlertComponentProps> = ({\n  title,\n  message,\n  cancelText = 'Cancel',\n  updateText = 'Update Store',\n  onCancelPress,\n  onUpdatePress,\n  cancelable = false,\n}) => {\n  const router = useRouter();\n\n  React.useEffect(() => {\n    Alert.alert(\n      title,\n      message,\n      [\n        {\n          text: cancelText,\n          onPress: onCancelPress || (() => console.log('Cancel Pressed')),\n          style: 'cancel',\n        },\n        {\n          text: updateText,\n          onPress: onUpdatePress || (() => router.push('/store')),\n        },\n      ],\n      { cancelable }\n    );\n  }, []);\n\n  return null; // This component doesn't render anything visible.\n};\n\nexport default MyAlert;\n","import { StyleSheet } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Stack } from \"expo-router\";\nimport { useMankindProduct } from \"@/contexts/MankindProductContext\";\n\nexport const AuthLayout = () => {\n  return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen\n          name=\"welcome\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n        <Stack.Screen\n          name=\"login\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n        <Stack.Screen\n          name=\"register\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n      </Stack>\n    );\n\n};\n\nexport default AuthLayout;\n\nconst styles = StyleSheet.create({});\n","import { StyleSheet } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Stack } from \"expo-router\";\nimport { useMankindProduct } from \"@/contexts/MankindProductContext\";\n\nexport const CoreLayout = () => {\n  const { authState } = useAuth();\n\n  if (authState.authenticated) {\n    return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen name=\"(tabs)\" options={{}} />\n        <Stack.Screen name=\"modal\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"privacy-policy\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"terms-of-use\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"cookies-policy\" options={{ presentation: \"modal\" }} />\n      </Stack>\n    );\n  } else {\n    return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen\n          name=\"(auth)\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n       \n      </Stack>\n    );\n  }\n};\n\nexport default CoreLayout;\n\nconst styles = StyleSheet.create({});\n","import React, { useEffect } from 'react';\nimport { Slot, useRouter, Stack } from 'expo-router';\nimport { AuthProvider, useAuth } from '@/contexts/AuthContext';\nimport { ThemeProvider, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { useColorScheme } from 'react-native';\nimport { CartProvider } from \"@/contexts/CartContext\";\nimport { CollectionProvider } from \"@/contexts/CollectionContext\";\nimport { ClientStoreProvider } from \"@/contexts/ClientStoreContext\";\n// import { ClientProductProvider } from \"@/contexts/ClientProductContext\";\nimport { OrderProvider } from \"@/contexts/OrderContext\";\nimport { ClientProductProvider } from '@/contexts/ClientProductContext';\nimport CoreLayout from './CoreLayout';\n\n const AppProviders = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <AuthProvider>\n      <CartProvider>\n        <ClientStoreProvider>\n          <CollectionProvider>\n            <ClientProductProvider>\n              <OrderProvider>\n                {children}\n              </OrderProvider>\n            </ClientProductProvider>\n          </CollectionProvider>\n        </ClientStoreProvider>\n      </CartProvider>\n    </AuthProvider>\n  );\n};\n\n\nexport function RootLayout() {\n  // const { authState } = useAuth(); // DO NOT ADD HERE\n\n  const colorScheme = useColorScheme();\n  const theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n\n\n  return (\n    <AppProviders>\n      <ThemeProvider value={theme}>\n        <CoreLayout />\n      </ThemeProvider>\n    </AppProviders>\n  );\n}","import React from 'react';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { Link, Tabs } from 'expo-router';\nimport { Pressable, useColorScheme } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons'\n\n// import Colors from '@/constants/Colors';\n// import { useColorScheme } from '@/components/useColorScheme';\n// import { useClientOnlyValue } from '@/components/useClientOnlyValue';\nimport { COLORS } from '@/utils/theme';\nimport { useClientOnlyValue } from '@/hooks/useClientOnlyValue';\n\n// You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={28} style={{ marginBottom: -3 }} {...props} />;\n}\n\nexport  function TabLayout() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <Tabs\n      screenOptions={{\n        tabBarActiveTintColor: COLORS[colorScheme ?? 'light'].tint,\n        // Disable the static render of the header on web\n        // to prevent a hydration error in React Navigation v6.\n        headerShown: useClientOnlyValue(false, true),\n      }}>\n      <Tabs.Screen\n        name=\"(home)\"\n        options={{\n          title: 'Home',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"square\" color={color} />,\n          headerShown: false,\n          // headerRight: () => (\n          //   <Link href=\"/modal\" asChild>\n          //     <Pressable>\n          //       {({ pressed }) => (\n          //         <FontAwesome\n          //           name=\"info-circle\"\n          //           size={25}\n          //           color={Colors[colorScheme ?? 'light'].text}\n          //           style={{ marginRight: 15, opacity: pressed ? 0.5 : 1 }}\n          //         />\n          //       )}\n          //     </Pressable>\n          //   </Link>\n          // ),\n        }}\n      />\n    \n    \n       <Tabs.Screen\n        name=\"collections\"\n        options={{\n          title: 'Collections',\n          // headerShown: false,\n\n          tabBarIcon : ({size, color }) => <Ionicons name='newspaper' size={size} color={color} />\n        }}\n      />\n       <Tabs.Screen\n        name=\"cart\"\n        options={{\n          title: 'Cart',\n          // headerShown: false,\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"shopping-cart\" color={color} />,\n      \n        }}\n      />\n        <Tabs.Screen\n        name=\"(settings)\"\n        options={{\n          title: 'Settings',\n          headerShown: false,\n\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"gear\" color={color} />,\n        }}\n      />\n    </Tabs>\n  );\n}\n","import React, { FC } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, useColorScheme } from 'react-native';\nimport { Link } from 'expo-router';\nimport { Ionicons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\n\ninterface SettingsItemLink {\n  href: string\n  iconName: string\n  label: string\n}\n\nconst SettingsItemLink: FC<SettingsItemLink> = ({ href, iconName, label }) => {\n \n // color={Colors[colorScheme ?? 'light'].text}\n  const colorScheme = useColorScheme();\n\n  return (\n    <Link href={href as never} asChild>\n      <TouchableOpacity style={styles.option}>\n        <FontAwesome5 name={iconName} size={20} color=\"black\" />\n        <Text style={styles.optionText}>{label}</Text>\n        <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n      </TouchableOpacity>\n    </Link>\n\n\n  );\n};\n\nexport default SettingsItemLink;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  upperSection: {\n  \n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#EAEAEA',\n    // paddingBottom: 20\n    // marginBottom: 20,\n  },\n\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'left',\n    marginVertical: 20,\n    marginLeft: 16,\n    paddingBottom: 20,\n  },\n  content: {\n    paddingHorizontal: 20,\n    paddingBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 4, // for Android shadow\n    marginTop: 12,\n\n  },\n  section: {\n    marginBottom: 30,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 10,\n  },\n  option: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#EAEAEA',\n  },\n  optionText: {\n    flex: 1,\n    fontSize: 16,\n    color: '#000',\n    marginLeft: 10,\n  },\n  logoutButton: {\n    backgroundColor: '#FFFFFF',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#000',\n    marginTop: 20,\n  },\n  logoutText: {\n    color: '#000',\n    fontSize: 16,\n  },\n});\n\n","import { StyleSheet, Text, View } from 'react-native'\n\n\nexport const generalStyles = StyleSheet.create({\n    center : {\n        alignItems: 'center',\n        width: '100%'\n    },\n    container: {\n        // padding: 16\n        flex: 1,\n        backgroundColor: '#fff',\n      },\n})","import { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React, { FC, useContext, useState } from 'react'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { ProductModelProps } from '../../../models/ProductModelProps'\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { CartContext } from '../../../contexts/CartContext'\nimport { Ionicons , SimpleLineIcons} from \"@expo/vector-icons\"\n// import { stripeConverter } from '../../hook/stripeConverter'\nimport { useAuth } from '../../../contexts/AuthContext'\nimport { createPaymentIntent } from '../../../api/paymentApi'\nimport { CONSTANTS } from '@/utils/constants'\n\nconst CartCard = ({ item }: any) => {\n    const { deleteItemFromCart, addToCart , decreaseFromCart, totalSum} = useContext(CartContext);\n    const [quantity, setQuantity] = useState(item.quantity);\n    const {authState, onLogout } = useAuth()\n    const [paymentStatus, setPaymentStatus] = useState('ijiij');\n\n    // Plus\n    const increment = () => {\n        // handlePayment(totalSum, 10)\n\n        addToCart(item);\n    };\n\n    // Minus\n    const decrement = () => {\n        // handlePayment(totalSum, 10)\n        if (item.quantity === 1) {\n          // remove it or do nothing..\n          console.log(\"do nothing\")\n\n        } else {\n            console.log(\"remove 1\")\n            decreaseFromCart(item);\n        }\n    };\n\n  \n  \n  \n  \n    // async function handlePayment(amount: number, shippingAmount: number) {\n  \n    //   //  WORKS GETTING CLIENT ID\n    //   try {\n    //     const paymentData = {\n    //       amount: stripeConverter(amount), // Example value, replace with your actual data\n    //       currency: \"USD\", // Example value, replace with your actual data\n    //       shipping_fee: stripeConverter(shippingAmount), // Example value, replace with your actual data\n    //       // (FIX) - USE STORE.STRIPE\n    //       stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n    //       app_name: CONSTANTS.appName // Example value, replace with your actual data\n    //     };\n        \n    //     const response = await createPaymentIntent(paymentData);\n    //     // Handle successful response\n    //     setPaymentStatus('Payment successful!');\n    //     console.log(response)\n    //   } catch (error) {\n    //     // Handle error\n    //     setPaymentStatus('Payment failed!');\n    //     // setPaymentStatus(error);\n  \n    //     console.error('Error creating payment intent:', error);\n    //   }\n    // };\n  \n           \n  return (\n   \n      <View style={styles.container}>\n     \n        <Image style={styles.img} source={{uri: item.image  ? item.image : CONSTANTS.holderImage}}/>\n        <View style={styles.cardContent}>\n            <Text style={styles.title}>{item.name}</Text>\n            <Text style={styles.price}>{convertToCurrency(item.price)} x {item.quantity}</Text>\n            {/* <Text style={styles.price}>{convertToCurrency(item.price * item.quantity) }</Text> */}\n            \n            {/* <View style={styles.circleSizeContainer}>\n                <View style={styles.circle} />\n            </View>  */}\n                \n<View style={styles.rating}>\n        <TouchableOpacity onPress={()=>increment()}>\n          <SimpleLineIcons name='plus' size={20} />\n        </TouchableOpacity>\n\n        <Text style={styles.ratingText}>{item.quantity}</Text>\n\n        <TouchableOpacity  onPress={()=> decrement()}>\n          <SimpleLineIcons style={{color: item.quantity === 1 ? 'gray': 'black'}} name='minus' size={20} />\n        </TouchableOpacity>\n \n\n                {/* <View style={styles.sizeCircle}> */}\n                    {/* <Text style={styles.sizeText}>L</Text>\n                </View>    */}\n\n              \n            </View>\n\n        </View>\n        <TouchableOpacity onPress={() => deleteItemFromCart(item)}>\n            <Ionicons name='trash-outline' size={SIZES.xLarge} color={COLORS.black}/>\n        </TouchableOpacity>    \n\n        <View>\n\n        </View>\n      </View>\n  \n  )\n}\n\nexport default CartCard\n\nconst styles = StyleSheet.create({\n    container: {\n     marginVertical: 10,\n     flexDirection: 'row'\n    },\n    img : {\n      height: 125,\n      width: \"25%\",\n      borderRadius: 10\n    },\n    cardContent: {\n        flex: 1,\n        marginHorizontal: 10\n    },\n    title: {\n        fontSize: 15,\n        color: \"#444444\"\n    },\n    price: {\n        color: \"#797979\",\n        marginVertical: 7,\n        fontSize: 18\n    },\n    circleSizeContainer: {\n        flexDirection: \"row\",\n       \n    },\n    circle: {\n        height: 32,\n        width: 32,\n        borderRadius: 16,\n        backgroundColor: \"#444444\",\n       \n    },\n    sizeCircle: {\n        backgroundColor: \"white\",\n        height: 32,\n        width: 32,\n        borderRadius: 16,\n        justifyContent: 'center',\n        alignItems: \"center\",\n       \n    },\n    sizeText: {\n        fontSize: 18,\n        fontWeight: \"500\"\n    },\n    rating : {\n        top: SIZES.large,\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        // marginHorizontal: SIZES.large\n    \n      }, \n      ratingText: {\n        color: COLORS.gray,\n        fontFamily: \"medium\",\n         paddingHorizontal: SIZES.xSmall\n      },\n    \n  })","import axios, { AxiosError } from 'axios';\n// import { BASE_URL } from '../utils/api';\nimport { ProductModelProps } from '../models/ProductModelProps';\nimport { CONSTANTS } from '../utils/constants';\nimport { BASE_URL } from '../utils/api';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// import { CONSTANTS } from '../utils/constants';\n\n\ninterface PaymentJsonProps  {\n  amount: number, // Example value, replace with your actual data\n  currency: string, // Example value, replace with your actual data\n  shipping_fee: number, // Example value, replace with your actual data\n  stripe_id: string, // Example value, replace with your actual data\n  app_name: string // Example value, replace with your actual data\n};\n\n\n  const paymentApi = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n        Authorization: \"token\",\n        'Content-Type': 'application/json',\n    },\n    params: {\n      store_id: CONSTANTS.store_id,\n      email: \"\", // user?.email ?? \"\",\n      tableName: 'prof-website-payment-table', \n      stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n      showFilteredItems: true\n    },\n  });\n\n\nexport const getpayment = async () => {\n  return await paymentApi.get(`/payment`);\n};\n\n\n\nexport const createPaymentIntent = async (paymentJsonProps: PaymentJsonProps) => {\n  try {\n    const response = await paymentApi.post('/create-payment-intent', paymentJsonProps);\n    return response.data; // Assuming you want to return the response data\n  } catch (error) {\n    throw error; // Rethrow the error to handle it outside\n  }\n};\n\n\nexport const showStripeHostedPage = async (priceID: string) => {\n  try {\n    const response = await paymentApi.post('/pay/stripe-hosted-page', { priceID });\n    return response.data; // Assuming you want to return the full response data\n  } catch (error : any) {\n    console.error('Error:', error.response?.data || error.message);\n    // console.log(error.response.data)\n\n    throw error.response?.data || error.message; // Rethrow the error with more context\n  }\n};\n\n\nexport default paymentApi;","\nimport { Alert, Platform, StyleSheet, Text, View } from 'react-native';\nimport React, { FC, useContext, useEffect, useState } from 'react';\nimport { StripeProvider, usePlatformPay, PlatformPayButton, PlatformPay } from '@stripe/stripe-react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { CartContext } from '../../../contexts/CartContext';\nimport { useClientStore } from '../../../contexts/ClientStoreContext';\nimport { stripeConverter } from '../../../hooks/stripeConverter';\nimport { createPaymentIntent } from '../../../api/paymentApi';\nimport { CONSTANTS } from '../../../utils/constants';\n// import { CartContext } from '@/contexts/CartContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n// import { CONSTANTS } from '@/utils/constants';\n// import { createPaymentIntent } from '@/api/paymentApi';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n\ninterface PaymentPayScreenProps {\n  goBack?: () => void;\n  publishableKey: string;\n  amount: number;\n  shippingAmount: number;\n}\n\nexport const PaymentPayScreen: FC<PaymentPayScreenProps> = (props) => {\n  const [ready, setReady] = useState(false);\n  const [clientSecret, setClientSecret] = useState('');\n  const { isPlatformPaySupported, confirmPlatformPayPayment } = usePlatformPay();\n  const { store } = useClientStore();\n  const { carts, totalSum, totalShipping, totalTax, grandTotal, quantity, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n\n  useFocusEffect(\n    React.useCallback(() => {\n      console.log('Screen focused');\n      setup();\n    }, [])\n  );\n\n  const setup = async () => {\n    try {\n      if (!(await isPlatformPaySupported())) {\n        Alert.alert(\n          'Error',\n          `${Platform.OS === 'android' ? 'Google' : 'Apple'} Pay is not supported.`\n        );\n        return;\n      }\n\n      const paymentData = {\n        amount: stripeConverter(props.amount),\n        currency: 'USD',\n        shipping_fee: stripeConverter(props.shippingAmount),\n        stripe_id:  'acct_1NVCh3JEHBX7gOQA', // store?.stripe_id ??\n        app_name: store?.store_name ?? '',\n      };\n\n      const response = await createPaymentIntent(paymentData);\n      setClientSecret(response.clientSecret);\n      console.log(`Client Secret: ${response.clientSecret}`);\n      setReady(true);\n    } catch (error) {\n      console.error('Error during setup:', error);\n      Alert.alert('Setup Error', 'There was an error setting up the payment.');\n    }\n  };\n\n  const buy = async () => {\n    if (!ready) {\n      return;\n    }\n    \n    setReady(false);\n\n    try {\n      const { error } = await confirmPlatformPayPayment(clientSecret, {\n        applePay: {\n          cartItems: carts.map(item => ({\n            label: store?.store_name ?? CONSTANTS.appName,\n            amount: String(item.price),\n            paymentType: PlatformPay.PaymentType.Immediate,\n          })),\n          merchantCountryCode: 'US',\n          currencyCode: 'USD',\n        },\n        googlePay: {\n          testEnv: true,\n          merchantName: 'My merchant name',\n          merchantCountryCode: 'US',\n          currencyCode: 'USD',\n          billingAddressConfig: {\n            format: PlatformPay.BillingAddressFormat.Full,\n            isPhoneNumberRequired: true,\n            isRequired: true,\n          },\n        },\n      });\n\n      if (error) {\n        setReady(true);\n        Alert.alert(`Error code: ${error.code}`, error.message);\n        console.log(`Error code: ${error.code}`, error.message);\n      } else {\n        Alert.alert('Success', 'The payment was confirmed successfully');\n        console.log('Success', 'The payment was confirmed successfully');\n      }\n    } catch (error) {\n      console.error('Payment error:', error);\n      Alert.alert('Payment Error', 'There was an error processing the payment.');\n      setReady(true);\n    }\n  };\n\n  return (\n    <View>\n    <View style={styles.container}>\n\n      <StripeProvider\n        publishableKey={props.publishableKey}\n        merchantIdentifier={CONSTANTS.merchant_id}\n      >\n        <PlatformPayButton\n          onPress={buy}\n          disabled={!ready}\n          style={styles.payButton}\n          borderRadius={4}\n          type={PlatformPay.ButtonType.Buy}\n        />\n      </StripeProvider>\n\n\n      </View>\n      </View>\n  );\n};\n\nexport default PaymentPayScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  payButton: {\n    width: '100%',\n    height: 50,\n    borderRadius: 5,\n  },\n});\n\n\n\n\n\n\n\n\n// import { Alert, Platform, StyleSheet, Text, View } from 'react-native'\n// import React, { FC, useContext, useEffect, useState } from 'react'\n// import { StripeProvider, usePlatformPay, PlatformPayButton, PlatformPay, usePaymentSheet } from '@stripe/stripe-react-native'\n// import { useFocusEffect } from '@react-navigation/native';\n// import { CartContext } from '@/contexts/CartContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n// import { CONSTANTS } from '@/utils/constants';\n// import { createPaymentIntent } from '@/api/paymentApi';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n\n \n// interface PaymentPayScreenProps  {\n//     goBack?: () => void\n//     publishableKey: string\n//     amount: number\n//     shippingAmount: number\n    \n// }\n\n\n// export const PaymentPayScreen: FC<PaymentPayScreenProps> = (props) => {\n//     const [ready, setReady] = useState(false)\n//     const [clientSecret, setClientSecret] = useState('')\n//     const { isPlatformPaySupported, confirmPlatformPayPayment } = usePlatformPay()\n//     const { carts, totalSum, totalShipping, totalTax, grandTotal, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n\n//     const {store} = useClientStore()\n//     // const {initPaymentSheet, presentPaymentSheet, loading} = usePaymentSheet()\n\n//     // useEffect(() => {\n//     //     setup()\n//     //     // initialisePaymentSheet()\n//     //     console.log(\"Payment set up completed\")\n\n//     // }, [])\n\n//     useFocusEffect(\n//         React.useCallback(() => {\n//           // Run this function every time the screen comes into focus\n//           console.log('Screen focused');\n//          setup()\n//         // initialisePaymentSheet()\n//         console.log(\"Payment set up completed\")\n\n//         }, [])\n//       );\n\n//     // const initialisePaymentSheet = async () => {\n//     //     const { paymentInent, ephemeralKey , customer } = await fetchPaymentSheet({\n\n//     //     })\n//     // }\n\n\n//     const setup = async () => {\n//         // Perform any setup here if needed\n//         if(!(await isPlatformPaySupported())) {\n//             // console.log\n//             Alert.alert(\n//                 'Error',\n//                 `${\n//                     Platform.OS === 'android' ? 'Google': 'Apple'\n//                 } Pay is not supported. `\n//             )\n//             return\n//         } else {\n//            await isPlatformPaySupported()\n//            // setup()\n//             console.log(\"sorry..\")\n//         }\n\n//         const paymentData = {\n//             amount: stripeConverter(props.amount), // Example value, replace with your actual data\n//             currency: \"USD\", // Example value, replace with your actual data\n//             shipping_fee: stripeConverter(props.shippingAmount), // Example value, replace with your actual data\n//             stripe_id: \"acct_1NVCh3JEHBX7gOQA\", //  store?.stripe_id ?? \"\", //\"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n//             app_name: store?.store_name ?? \"\" // CONSTANTS.appName // Example value, replace with your actual data\n//           };\n\n//         const response = await createPaymentIntent(paymentData);\n\n//        // const result = response.json\n//         setClientSecret(response.clientSecret)\n//         // console.log(clientSecret)\n//         console.log(`This is the best button - ${response.clientSecret}`)\n//         setReady(true)\n//     }\n\n//     async function buy() {\n//         if (ready == true) {\n//             setup()\n//         }\n//         setReady(false)\n\n       \n\n//         const { error } = await confirmPlatformPayPayment(clientSecret, {\n//             applePay: {\n//                 cartItems: carts.map(item => ({\n//                     label: store?.store_name, //  CONSTANTS.appName, // pay ....\n//                     amount: String(item.price),\n//                     paymentType: PlatformPay.PaymentType.Immediate\n//                 })),\n\n//                 // cartItems: [\n//                 //     {\n//                 //         label: CONSTANTS.appName,\n//                 //         amount: String(props.amount), // '12',// \n//                 //         paymentType: PlatformPay.PaymentType.Immediate,\n                        \n             \n                      \n//                 //     }\n//                 // ],\n//                 merchantCountryCode: \"US\",\n//                 currencyCode: 'USD',\n            \n//                 // requiredBillingContactFields: [\n//                 //     ContactField.EmailAddress,\n//                 //     ContactField.Name,\n//                 //     ContactField.PhoneNumber,\n//                 //     ContactField.PhoneticName,\n//                 //     ContactField.PostalAddress\n//                 // ]\n                \n                \n//             },\n//             googlePay: {\n//                 testEnv: true,\n//                 merchantName: 'My merchant name',\n//                 merchantCountryCode: 'US',\n//                 currencyCode: 'USD',\n//                 billingAddressConfig: {\n//                   format: PlatformPay.BillingAddressFormat.Full,\n//                   isPhoneNumberRequired: true,\n//                   isRequired: true,\n//                 },\n//             },\n        \n//         })\n\n//         if (error) {\n//             setReady(true)\n//             Alert.alert(`Error code: ${error.code}`, error.message)\n//             console.log(`Error code: ${error.code}`, error.message)\n\n//         } else {\n//             setReady(false)\n//             Alert.alert('Success', 'The payment was confirmed successfully')\n//             console.log('Success', 'The payment was confirmed successfully')\n// }\n//     }\n\n//     return (\n//         <View style={{}}>\n//             <StripeProvider\n//                 publishableKey={props.publishableKey}\n//                 merchantIdentifier={CONSTANTS.merchant_id} // Use the correct constant\n//             >\n//                 <View>\n                    \n//                     <PlatformPayButton\n//                         onPress={buy}\n//                         disabled={!ready}\n//                         style={styles.payButton}\n//                        // appearance={PlatformPay.ButtonStyle.Black}\n//                         borderRadius={4}\n//                         type={5} //{PlatformPay.ButtonType.AddMoney}\n//                     />\n//                 </View>\n//             </StripeProvider> \n//         </View>\n//     )\n// }\n\n// export default PaymentPayScreen\n\n// const styles = StyleSheet.create({\n//     container: {\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         color: 'red',\n//     },\n//     payButton: {\n//         backgroundColor: 'black',\n//         tintColor: 'red',\n//         width: '100%',\n//         height: 50,\n//         borderRadius: 5,\n//         color: 'red',\n       \n//     },\n//     buttons: {\n//         marginTop: 20,\n//     }\n// })\n\n\n","import { Image, StyleSheet, FlatList, Text, TouchableOpacity, View } from 'react-native'\nimport React, { useContext, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { CartContext } from '@/contexts/CartContext'\nimport CartHeader from '@/components/other/headers/CartHeader'\nimport { generalStyles } from '@/components/other/general/Styles'\nimport CartCard from '@/components/other/cart/CartCard'\n// import convertToCurrency from '@/hooks/convertToCurrency'\nimport { CONSTANTS } from '@/utils/constants'\nimport PaymentPayScreen from './PaymentPayScreen'\nimport convertToCurrency from '@/hooks/convertToCurrency'\n// import CartHeader from '../components/headers/CartHeader'\n// import { Avatar, Divider } from 'react-native-paper'\n// import LinearGradient from 'react-native-linear-gradient' // cause error\n// import CartCard from '../components/cart/CartCard'\n// import { Ionicons , Fontisto} from '@expo/vector-icons'\n// import { COLORS } from '../utils/theme'\n// import { CartContext } from '../contexts/CartContext'\n// import convertToCurrency from '../hook/convertToCurrency'\n// import { Item } from 'react-native-paper/lib/typescript/components/Drawer/Drawer'\n// import PaymentButton from '../components/buttons/CheckoutButton'\n// import PaymentPayScreen from './PaymentPayScreen'\n// import { CONSTANTS } from '../utils/constants'\n// import CheckoutButton from '../components/buttons/CheckoutButton'\n// import { generalStyles } from '../components/general/Styles'\n// import { useFocusEffect } from '@react-navigation/native'\n\n\n// export interface CartProps {\n//   carts: []\n// }\n\nconst CartPageVOne = () => {\n  \n  const { carts, totalSum, totalShipping, totalTax, grandTotal, quantity, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n  \n  const [triggerValueChange, setTriggerValueChange] = useState(false)\n  // useFocusEffect(\n  //   React.useCallback(() => {\n  //     // Run this function every time the screen comes into focus\n     \n\n  //     if (quantity <= 0    ){ // || carts.length <= 0\n  //       setQuantity(0)\n  //     }\n  //   }, [])\n  // );\n\n\n  \n  \n  return (\n    <View style={styles.container}>\n      {/* <CartHeader/> */}\n\n      {carts.length <= 0 ? (\n\n          <>\n          <View style={generalStyles.center}>\n            <Text>\n              Please add items to the cart\n            </Text>\n          </View>\n          </>\n      ): (\n<>\n        <FlatList\n        data={carts}\n        showsVerticalScrollIndicator={false}\n        keyExtractor={(_, index) => index.toString()}\n        ListHeaderComponent={\n          <></>\n        }\n        contentContainerStyle={{\n          paddingBottom: 100\n        }}\n        renderItem={({item}) => (\n          // <CartCard item={item} delteItemFromCart={deleteItemFromCart} />\n          <CartCard item={item} delteItemFromCart={deleteItemFromCart} triggerValueChange={triggerValueChange} />\n        )}\n        ListFooterComponent={\n         <></>\n        }\n    />\n\n\n<View>\n<>\n          <View style={styles.priceContainer}>\n          \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Total:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalSum)}</Text>\n          </View>\n          \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Shipping:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalShipping)}</Text>\n          </View>\n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Tax:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalTax)}</Text>\n          </View>\n          {/* <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Shipping:</Text>\n            <Text style={styles.text}>$0.0</Text>\n          </View> */}\n        \n        </View>\n\n        <View style={styles.divider}/>\n      \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Grand Total:</Text>\n            <Text style={[styles.text , {color: \"black\", fontWeight: \"700\"} ]}>{convertToCurrency(grandTotal)}</Text>\n          </View>\n        \n        </>\n      </View>\n      <View style={{paddingTop: 30}}>\n        <PaymentPayScreen \n           publishableKey={CONSTANTS.publishableKeyTest}\n          // publishableKey={CONSTANTS.publishableKeyLive}\n          amount={totalSum}\n          shippingAmount={totalShipping} \n        />\n    </View>\n\n      \n      <View style={{paddingBottom: 50}}></View>\n\n\n</>\n      )}\n   \n     \n \n  \n    </View>\n\n  )\n}\n\nexport default CartPageVOne\n\nconst styles = StyleSheet.create({\n\n  headerContainer: {\n    marginBottom: 20\n  },\n  container: {\n    flex  : 1,\n    padding: 15\n  },\n  priceContainer :{\n    marginTop: 40\n  },\n  priceAndTitle: {\n    flexDirection: 'row',\n    justifyContent: \"space-between\",\n    marginHorizontal: 20,\n    marginVertical: 10\n  },\n  text: {\n    color: \"#757575\",\n    fontSize: 14\n  },\n  divider: {\n    borderWidth: 1,\n    borderColor: \"#C0C0C0\",\n    borderRadius: 15,\n    marginVertical: 10\n  },\n  checkoutContainer: {\n    backgroundColor: \"black\",//  \"#E96E6E\",\n    width: \"100%\",\n    marginVertical: 30,\n    borderRadius: 10\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"white\",\n    textAlign: \"center\",\n    padding: 10,\n    fontWeight: \"700\"\n\n\n  }\n\n})\n\n// rnef","\n\nimport React from 'react';\nimport { View, Text, Image, StyleSheet, Dimensions } from 'react-native';\nimport { COLORS } from '@/utils/theme';\nimport { Stack } from 'expo-router';\n\nconst { width, height } = Dimensions.get('window');\n\nconst NoOrdersView = () => {\n  return (\n    <View style={styles.container}>\n        {/* <Stack.Screen options={{headerShown: false}}/> */}\n      <Image\n        source={require('../../../../src/assets/images/orderImage.png')}\n        \n        style={styles.image}\n      />\n      <Text style={styles.message}>\n        Orders will be listed here. To add an order manually, simply click the + in the top left.\n      </Text>\n    </View>\n  );\n};\n\nexport default NoOrdersView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.white,\n    paddingHorizontal: 20,\n  },\n  image: {\n    width: width * 0.5,\n    height: height * 0.25,\n    resizeMode: 'contain',\n    marginBottom: 20,\n  },\n  message: {\n    fontSize: 16,\n    color: COLORS.darkGray,\n    textAlign: 'center',\n  },\n});\n\n\n\n\n// // If mobile and web is different\n\n// // Make sure to also create the folder in components\n\n// export {default} from '@/components/pages/client-order/ClientOrdersView' ","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { OrderModelProps } from '@/models/OrderModelProps';\nimport { Link } from 'expo-router';\nimport { useClientOrder } from '@/contexts/OrderContext';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst ClientOrderCard: React.FC<{ order: OrderModelProps }> = ({ order }) => {\n  const { selectOrder } = useClientOrder();\n  const [status, setStatus] = useState(order.order_status);\n\n  const handleOrderPress = () => {\n    selectOrder(order);\n  };\n\n  useEffect(() => {\n    setStatus(order.order_status);\n  }, [order.order_status]);\n\n  return (\n    <Link href={`(tabs)/client-orders/(details)/${order.id}` as never} asChild>\n      <TouchableOpacity style={styles.card} onPress={handleOrderPress}>\n        <View style={styles.body}>\n          <Ionicons name=\"bag\" size={30} color={COLORS.primary} style={styles.icon} />\n          <View style={styles.details}>\n            <Text style={styles.name}>{order.to_address.name}</Text>\n            <Text style={styles.price}>{convertToCurrency(order.total)}</Text>\n            <Text style={styles.date}>Placed on: {order.order_placed_date}</Text>\n          </View>\n          <View style={styles.statusContainer}>\n            <Text style={[styles.status, getStatusStyle(status)]}>{status}</Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Link>\n  );\n};\n\nconst getStatusStyle = (status: string) => {\n  switch (status) {\n    case 'Fulfill Order':\n      return styles.fulfillOrderStatus;\n    case 'Mark as Shipped':\n      return styles.markAsShippedStatus;\n    case 'Shipped !':\n      return styles.shippedStatus;\n    default:\n      return styles.defaultStatus;\n  }\n};\n\nexport default ClientOrderCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: COLORS.white,\n    borderRadius: SIZES.medium,\n    marginBottom: SIZES.medium,\n    padding: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  body: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    paddingRight: SIZES.medium,\n  },\n  details: {\n    flex: 1,\n  },\n  name: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  price: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  date: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  statusContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  status: {\n    fontFamily: 'bold',\n    fontSize: SIZES.small,\n    paddingVertical: SIZES.small,\n    paddingHorizontal: SIZES.medium,\n    borderRadius: SIZES.large,\n  },\n  fulfillOrderStatus: {\n    backgroundColor: COLORS.primary,\n    color: COLORS.white,\n  },\n  markAsShippedStatus: {\n    backgroundColor: COLORS.orange,\n    color: COLORS.black,\n  },\n  shippedStatus: {\n    backgroundColor: COLORS.green,\n    color: COLORS.black,\n  },\n  defaultStatus: {\n    backgroundColor: COLORS.blue,\n    color: COLORS.white,\n  },\n});\n\n\n\n\n\n// // OrderCard.tsx\n// import React from 'react';\n// import { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\n// // import { OrderModelProps } from './Order';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { Ionicons } from '@expo/vector-icons';\n// import convertToCurrency from '@/hooks/convertToCurrency';\n// import { OrderModelProps } from '@/models/OrderModelProps';\n// import { Link } from 'expo-router';\n// import { useClientOrder } from '@/contexts/OrderContext';\n\n\n// const ClientOrderCard: React.FC<OrderModelProps> = (order) => {\n//   const { selectOrder } = useClientOrder();\n\n//   const handleProductPress = () => {\n//     selectOrder(order);\n//   };\n//   return (\n//     // <Link href={\"(tabs)/client-orders/(create)/create-client-order\" as never} asChild>\n//     // <Link href={\"(tabs)/client-orders/(create)/create-client-order\" as never} asChild>\n\n//     <Link href={`(tabs)/client-orders/(details)/${order.id}` as never} asChild>\n\n//     <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n//       <View style={styles.header}>\n//         <Text style={styles.orderId}>Order ID: {order.id}</Text>\n//         <Text style={styles.status}>{order.order_status}</Text>\n//       </View>\n      \n//       <View style={styles.body}>\n//         {/* <Image source={{ uri: props.items[0].image }} style={styles.image} /> */}\n//         <View style={styles.details}>\n//           <Text style={styles.title}>{order.title}</Text>\n//           <Text style={styles.date}>Placed on: {order.order_placed_date}</Text>\n//           <Text style={styles.price}>{convertToCurrency(order.total)}</Text>\n//         </View>\n//       </View>\n      \n//       <View style={styles.footer}>\n//         <Ionicons name=\"square\" size={24} color={COLORS.primary} />\n//       </View>\n//     </TouchableOpacity>\n//     </Link>\n//   );\n// };\n\n// export default ClientOrderCard;\n\n// const styles = StyleSheet.create({\n//   card: {\n//     backgroundColor: COLORS.white,\n//     borderRadius: SIZES.medium,\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 5,\n//   },\n//   header: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//     marginBottom: SIZES.small,\n//   },\n//   orderId: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   status: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   body: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//   },\n//   image: {\n//     width: 60,\n//     height: 60,\n//     borderRadius: SIZES.small,\n//     marginRight: SIZES.medium,\n//   },\n//   details: {\n//     flex: 1,\n//   },\n//   title: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     marginBottom: SIZES.small,\n//     color: COLORS.primary,\n//   },\n//   date: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   price: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginTop: SIZES.small,\n//   },\n//   footer: {\n//     flexDirection: 'row',\n//     justifyContent: 'flex-end',\n//     marginTop: SIZES.small,\n//   },\n// });\n","// import React, { useEffect, useState } from 'react';\n// import { View, Text, Button, Alert, ScrollView, StyleSheet } from 'react-native';\n// import { useNavigation } from '@react-navigation/native';\n// import { useClientOrder } from '@/contexts/OrderContext';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { OrderModelProps } from '@/models/OrderModelProps';\n\n// const EditClientOrderCrud = () => {\n//   const { selectedOrder, updateOrder } = useClientOrder();\n//   const [isShowingConfirmation, setIsShowingConfirmation] = useState(false);\n//   const navigation = useNavigation();\n\n//   const [orderDetails, setOrderDetails] = useState<OrderModelProps | null>(null);\n\n//   useEffect(() => {\n//     if (selectedOrder) {\n//       setOrderDetails(selectedOrder);\n//     }\n//   }, [selectedOrder]);\n\n//   const handleUpdateOrder = () => {\n//     if (!orderDetails) return;\n\n//     Alert.alert(\n//       'Confirmation',\n//       'Are you sure you want to proceed?',\n//       [\n//         {\n//           text: 'Yes',\n//           onPress: () => {\n//             // Your update logic here\n//             updateOrder(orderDetails);\n//             navigation.goBack();\n//           },\n//         },\n//         { text: 'No', style: 'cancel' },\n//       ],\n//       { cancelable: true }\n//     );\n//   };\n\n//   const handleCallCustomer = () => {\n//     // Logic to call customer\n//     if (orderDetails?.to_address?.phone) {\n//       // Logic to open the phone app with the number\n//       console.log(`Calling ${orderDetails.to_address.phone}`);\n//     }\n//   };\n\n//   const handleEmailCustomer = () => {\n//     // Logic to email customer\n//     if (orderDetails?.to_address?.email) {\n//       // Logic to open the email app with the address\n//       console.log(`Emailing ${orderDetails.to_address.email}`);\n//     }\n//   };\n\n//   if (!orderDetails) {\n//     return (\n//       <View style={styles.container}>\n//         <Text>Order not found</Text>\n//       </View>\n//     );\n//   }\n\n//   return (\n//     <ScrollView style={styles.container}>\n//       <View style={styles.section}>\n//         <Text style={styles.sectionHeader}>Status</Text>\n//         <Text style={styles.text}>{orderDetails.order_status}</Text>\n//       </View>\n\n//       <View style={styles.section}>\n//         <Text style={styles.sectionHeader}>General</Text>\n//         <Button title=\"Call Customer\" onPress={handleCallCustomer} />\n//         <Button title=\"Email Customer\" onPress={handleEmailCustomer} />\n//         <Button\n//           title=\"Edit Shipping Information\"\n//         //   onPress={() => navigation.navigate('EditShippingInfo', {\n//         //     address: orderDetails.to_address?.streetOne,\n//         //     city: orderDetails.to_address?.city,\n//         //     state: orderDetails.to_address?.state,\n//         //     zip: orderDetails.to_address?.zip,\n//         //   })}\n//         />\n//       </View>\n\n//       <View style={styles.section}>\n//         <Text style={styles.sectionHeader}>Personal Information</Text>\n//         <Text style={styles.text}>Address: {orderDetails.to_address?.streetOne}</Text>\n//         <Text style={styles.text}>City: {orderDetails.to_address?.city}</Text>\n//         <Text style={styles.text}>State: {orderDetails.to_address?.state}</Text>\n//         <Text style={styles.text}>Zip: {orderDetails.to_address?.zip}</Text>\n//       </View>\n\n//       <View style={styles.section}>\n//         <Text style={styles.sectionHeader}>Time Stamp</Text>\n//         <Text style={styles.text}>Created: {orderDetails.order_created_date}</Text>\n//         <Text style={styles.text}>Placed: {orderDetails.order_placed_date}</Text>\n//         <Text style={styles.text}>Shipped: {orderDetails.order_started_date}</Text>\n//         <Text style={styles.text}>Completed: {orderDetails.order_completed_date}</Text>\n//       </View>\n\n//       <Button title=\"Update Order\" onPress={handleUpdateOrder} />\n//     </ScrollView>\n//   );\n// };\n\n// export default EditClientOrderCrud;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: COLORS.lightGray,\n//     padding: SIZES.medium,\n//   },\n//   section: {\n//     marginBottom: SIZES.large,\n//   },\n//   sectionHeader: {\n//     fontSize: SIZES.large,\n//     fontWeight: 'bold',\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//   },\n//   text: {\n//     fontSize: SIZES.medium,\n//     color: COLORS.black,\n//     marginBottom: SIZES.small,\n//   },\n// });\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Button, Alert, ScrollView, Linking } from 'react-native';\nimport { Stack, useLocalSearchParams, useRouter } from 'expo-router';\nimport { useClientOrder } from '@/contexts/OrderContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { OrderModelProps } from '@/models/OrderModelProps';\n\nconst OrderDetailsPage = () => {\n  const { selectedOrder, removeOrder, addOrder } = useClientOrder();\n  const router = useRouter();\n  const [orderDetails, setOrderDetails] = useState<OrderModelProps | null>(null);\n\n  // State variables to handle order details\n  const [status, setStatus] = useState('');\n  const [total, setTotal] = useState(0.0);\n  const [address, setAddress] = useState('');\n  const [addressZip, setAddressZip] = useState('');\n  const [addressState, setAddressState] = useState('');\n  const [addressCity, setAddressCity] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [orderPlacedDate, setOrderPlacedDate] = useState('');\n  const [orderCompletedDate, setOrderCompletedDate] = useState('');\n\n  useEffect(() => {\n    if (selectedOrder) {\n      // Populate state variables with selected order details\n      setStatus(selectedOrder.order_status);\n      setTotal(selectedOrder.total);\n      setAddress(selectedOrder.to_address.streetOne);\n      setAddressZip(selectedOrder.to_address.zip);\n      setAddressState(selectedOrder.to_address.state);\n      setAddressCity(selectedOrder.to_address.city);\n      setPhoneNumber(selectedOrder.to_address.phone);\n      setOrderPlacedDate(selectedOrder.order_placed_date);\n      setOrderCompletedDate(selectedOrder.order_completed_date);\n   \n   \n    }\n  }, [selectedOrder]);\n\n  const handleCallCustomer = () => {\n    // Trigger phone dialer with customer's phone number\n    if (phoneNumber) {\n      Linking.openURL(`tel:${phoneNumber}`);\n    } else {\n      Alert.alert('Error', 'Phone number is not available.');\n    }\n  };\n\n  const handleEmailCustomer = () => {\n    // Trigger email client with customer's email\n    if (selectedOrder?.to_address.email) {\n      Linking.openURL(`mailto:${selectedOrder.to_address.email}`);\n    } else {\n      Alert.alert('Error', 'Email address is not available.');\n    }\n  };\n\n\n  const handleUpdateOrder = () => {\n    if (!orderDetails) return;\n\n    Alert.alert(\n      'Confirmation',\n      'Are you sure you want to proceed?',\n      [\n        {\n          text: 'Yes',\n          onPress: () => {\n            // Your update logic here\n            addOrder(orderDetails);\n            // navigation.goBack();\n          },\n        },\n        { text: 'No', style: 'cancel' },\n      ],\n      { cancelable: true }\n    );\n  };\n\n  const handleDeleteOrder = () => {\n    if (!selectedOrder?.id) {\n      Alert.alert('Error', 'Order ID is missing.');\n      return;\n    }\n  \n    Alert.alert('Confirmation', 'Are you sure you want to delete this order?', [\n      {\n        text: 'Yes',\n        onPress: () => {\n          removeOrder(selectedOrder.id);\n          router.back();\n        },\n      },\n      {\n        text: 'No',\n        style: 'cancel',\n      },\n    ]);\n  };\n  \n\n  return (\n   <ScrollView style={styles.container}>\n        <Stack.Screen options={{ title: selectedOrder?.title || 'Order Details' }} />\n\n       <View style={styles.section}>\n             <Text style={styles.sectionHeader}>Status</Text>\n         <Text style={styles.text}>{selectedOrder?.order_status}</Text>\n       </View>\n\n       <View style={styles.section}>\n         <Text style={styles.sectionHeader}>General</Text>\n        <Button title=\"Call Customer\" onPress={handleCallCustomer} />\n       <Button title=\"Email Customer\" onPress={handleEmailCustomer} />\n        <Button\n          title=\"Edit Shipping Information\"\n        //   onPress={() => navigation.navigate('EditShippingInfo', {\n        //      address: orderDetails.to_address?.streetOne,\n        //     city: orderDetails.to_address?.city,\n        //      state: orderDetails.to_address?.state,\n        //    zip: orderDetails.to_address?.zip,\n        //   })}\n        />\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Personal Information</Text>\n        <Text style={styles.text}>Address: {selectedOrder?.to_address.streetOne}</Text>\n        <Text style={styles.text}>City: {selectedOrder?.to_address?.city}</Text>\n        <Text style={styles.text}>State: {selectedOrder?.to_address?.state}</Text>\n        <Text style={styles.text}>Zip: {selectedOrder?.to_address?.zip}</Text>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Time Stamp</Text>\n        <Text style={styles.text}>Created: {selectedOrder?.order_created_date}</Text>\n        <Text style={styles.text}>Placed: {selectedOrder?.order_placed_date}</Text>\n        <Text style={styles.text}>Shipped: {selectedOrder?.order_started_date}</Text>\n        <Text style={styles.text}>Completed: {selectedOrder?.order_completed_date}</Text>\n      </View>\n\n      <Button title=\"Update Order\" onPress={handleUpdateOrder} />\n    </ScrollView>\n  );\n};\n\nexport default OrderDetailsPage;\n\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    //   backgroundColor: COLORS.lightGray,\n      padding: SIZES.medium,\n    },\n    section: {\n      marginBottom: SIZES.large,\n    },\n    sectionHeader: {\n      fontSize: SIZES.large,\n      fontWeight: 'bold',\n      color: COLORS.primary,\n      marginBottom: SIZES.small,\n    },\n    text: {\n      fontSize: SIZES.medium,\n      color: COLORS.gray,\n      marginBottom: SIZES.small,\n    },\n  });\n\n\n\n// const styles = StyleSheet.create({\n//   container: {\n//     padding: SIZES.medium,\n//     // backgroundColor: COLORS.lightGray,\n//   },\n//   section: {\n//     marginBottom: SIZES.medium,\n//   },\n//   label: {\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//   },\n//   value: {\n//     fontSize: SIZES.large,\n//     color: COLORS.gray,\n//   },\n//   buttonContainer: {\n//     marginTop: SIZES.large,\n//   },\n// });\n// function addOrder(arg0: {}) {\n//     throw new Error('Function not implemented.');\n// }\n\n","import React, { useState } from 'react';\nimport { SafeAreaView, View, TextInput, TouchableOpacity, Text, FlatList, StyleSheet, Pressable } from 'react-native';\nimport { Feather, Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { useClientOrder } from '@/contexts/OrderContext';\n// import OrderCard from '@/components/OrderCard';  // Adjust the import path as necessary\nimport { Link, Stack } from 'expo-router';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\n// import Colors from '@/constants/Colors';\nimport { useColorScheme } from '@/hooks/useColorScheme';\nimport { OrderModelProps } from '@/models/OrderModelProps';\nimport ClientOrderCard from '@/components/pages/client-order/ClientOrderCard';\n\nconst ClientOrdersView = () => {\n  const { authState } = useAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<OrderModelProps[]>([]);\n\n  const { orders, selectOrder } = useClientOrder();\n  \n  const colorScheme = useColorScheme();\n\n  const handleOrderSelect = (order: OrderModelProps) => {\n    selectOrder(order);\n  };\n\n  const handleSearch = (text: string) => {\n    try {\n      setSearchTerm(text);\n      const results = orders.filter((order: OrderModelProps) =>\n        order.title.toLowerCase().includes(text.toLowerCase())\n      );\n      setSearchResults(results);\n    } catch (error) {\n      console.log(\"Failed to get orders\", error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Stack.Screen \n        options={{\n          headerRight: () => (\n            <Link href={\"(tabs)/client-orders/(create)/create-client-order\" as never} asChild>\n              <Pressable>\n                {({ pressed }) => (\n                  <FontAwesome\n                    name=\"plus\"\n                    size={30}\n                    color={COLORS[colorScheme ?? 'light'].text}\n                    style={{ marginRight: 15, opacity: pressed ? 0.5 : 1 }}\n                  />\n                )}\n              </Pressable>\n            </Link>\n          ),\n        }}\n      />\n\n      {/* Search */}\n{/* \n      <View style={styles.searchContainer}>\n        <TouchableOpacity>\n          <Ionicons \n            name='camera-outline' \n            size={SIZES.xLarge} \n            style={styles.searchIcon}\n          />\n        </TouchableOpacity>\n\n        <View style={styles.searchWrapper}>\n          <TextInput \n            style={styles.searchInput} \n            value={searchTerm}\n            onChangeText={handleSearch}\n            placeholder='What are you looking for'\n          />\n        </View>\n\n        <View>\n          <TouchableOpacity style={styles.searchBtn} onPress={() => handleSearch(searchTerm)}>\n            <Feather name='search' size={24} color={COLORS.offwhite}/>\n          </TouchableOpacity>\n        </View>\n      </View> */}\n\n      <FlatList\n        keyExtractor={(item: OrderModelProps) => item.id.toString()}\n        // data={searchTerm === '' ? orders : searchResults.length === 0 ? orders : searchResults}\n        data={orders}\n        // renderItem={({ item }) => <ClientOrderCard order={item} onPress={() => console.log('Order selected', item)} />}\n        renderItem={({ item }) =>  (\n          <TouchableOpacity onPress={() => handleOrderSelect(item)}>\n            <ClientOrderCard order={item}/>\n          </TouchableOpacity>\n        )}\n        contentContainerStyle={styles.list}\n      />\n    </View>\n  );\n};\n\nexport default ClientOrdersView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    // backgroundColor: COLORS.gray2,\n  },\n  detailsLink: {\n    marginHorizontal: SIZES.medium,\n    marginBottom: SIZES.medium,\n  },\n  detailsLinkText: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n    textDecorationLine: 'underline',\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    marginHorizontal: SIZES.small,\n    backgroundColor: COLORS.secondary,\n    borderRadius: SIZES.medium,\n    marginVertical: SIZES.medium,\n    height: 50,\n  },\n  searchIcon: {\n    marginHorizontal: 10,\n    color: COLORS.gray,\n    marginTop: SIZES.small,\n  },\n  searchWrapper:{ \n    flex: 1,\n    backgroundColor: COLORS.secondary,\n    marginRight: SIZES.small,\n    borderRadius: SIZES.small,\n  },\n  searchInput: {\n    fontFamily: \"regular\",\n    width: \"100%\",\n    height: \"100%\",\n    paddingHorizontal: SIZES.small,\n  },\n  searchBtn: {\n    width: 50,\n    height: \"100%\",\n    borderRadius: SIZES.medium,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.primary,\n  },\n  list: {\n    paddingHorizontal: SIZES.medium,\n    paddingBottom: SIZES.large,\n  },\n});","import React, { FC, useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, Alert, TextInputProps } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useClientOrder } from '@/contexts/OrderContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { OrderModelProps } from '@/models/OrderModelProps';\nimport { generateUUID } from '@/hooks/generateUUID';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { SAMPLE_ORDER_ITEMS } from '@/model-sample-data/sample-order';\ninterface FormInputProps {\n    label: string;\n    value: any;\n    onChangeText: (text: string) => void;\n    placeholder: string;\n    keyboardType?: TextInputProps['keyboardType']; // 'default' is the default keyboard type in TextInput\n    multiline?: boolean;\n}\n\nconst FormInput: FC<FormInputProps> = ({\n  label,\n  value,\n  onChangeText,\n  placeholder,\n  keyboardType = 'default',\n  multiline = false,\n}) => (\n  <>\n    <Text style={styles.label}>{label}</Text>\n    <TextInput\n      style={[styles.input, multiline && styles.textArea]}\n      placeholder={placeholder}\n      value={value}\n      onChangeText={onChangeText}\n      keyboardType={keyboardType}\n      multiline={multiline}\n    />\n  </>\n);\n\nconst CreateClientOrderView = () => {\n  const [title, setTitle] = useState('title');\n  const [total, setTotal] = useState('200');\n  const [note, setNote] = useState('notes...');\n  const [to_address_name, setTo_address_name] = useState('Darrien');\n  const [to_address_streetOne, setTo_address_streetOne] = useState('643 Snediker Ave');\n  const [to_address_streetTwo, setTo_address_streetTwo] = useState('');\n  const [to_address_city, setTo_address_city] = useState('Brooklyn');\n  const [to_address_state, setTo_address_state] = useState('NY');\n  const [to_address_zip, setTo_address_zip] = useState('11207');\n  const [to_address_country, setTo_address_country] = useState('US');\n  const [to_address_phone, setTo_address_phone] = useState('3478800665');\n  const [to_address_email, setTo_address_email] = useState('darrien@gmail.com');\n\n  const { addOrder } = useClientOrder();\n  const { authState } = useAuth();\n\n  const handleSubmit = () => {\n    if (!title || !total || !to_address_name || !to_address_phone || !to_address_email) {\n      Alert.alert('Validation Error', 'Please fill in all required fields.');\n      return;\n    }\n\n    if (!/^\\d+(\\.\\d{1,2})?$/.test(total)) {\n      Alert.alert('Validation Error', 'Please enter a valid amount.');\n      return;\n    }\n\n    const newOrder: OrderModelProps = {\n      id: generateUUID(8),\n      stripe_id: '',\n      store_id: authState?.user?.store_owner_id ?? '',\n      index: 0,\n      order_status: 'Pending',\n      items: SAMPLE_ORDER_ITEMS,\n      userId: authState?.user?.id ?? '',\n      order_history: [],\n      total: parseFloat(total),\n      net_total: parseFloat(total),\n      courier: '',\n      shipping_label: '',\n      return_label: '',\n      from_address: {\n        name: 'darrien',\n        streetOne: '643 snediker ave',\n        streetTwo: '',\n        city: 'brooklyn NY',\n        state: 'NY',\n        zip: '11207',\n        country: 'US',\n        phone: '3478800665',\n        email: authState?.user?.email ?? '',\n        is_residential: false,\n      },\n      to_address: {\n        name: to_address_name || 'tom',\n        streetOne: to_address_streetOne || '343 snediker ave',\n        streetTwo: to_address_streetTwo,\n        city: to_address_city || 'brooklyn',\n        state: to_address_state || 'NY',\n        zip: to_address_zip || '11207',\n        country: to_address_country || 'US',\n        phone: to_address_phone || '3478800665',\n        email: to_address_email || 'darrien@gmail.com',\n        is_residential: false,\n      },\n      parcel: {\n        length: '',\n        width: '',\n        height: '',\n        distance_unit: '',\n        weight: '',\n        mass_unit: '',\n        value_amount: 0,\n        metadata: '',\n        test: false,\n      },\n      title,\n      type: '',\n      coupon_code: '',\n      referred_by: '',\n      statement_descriptor: '',\n      note,\n      budget: '',\n      order_placed_date: new Date().toISOString(),\n      order_started_date: '',\n      order_created_date: '',\n      order_completed_date: '',\n      tax: 0,\n      stripe_fee: 0,\n      afm_fee: 0,\n      shipping_cost: 0,\n      discount_amount: 0,\n    };\n\n    addOrder(newOrder);\n    // Alert.alert('Order Created', `Order titled \"${title}\" has been created!`);\n  };\n\n  return (\n    <ScrollView style={styles.formContainer}>\n      <FormInput label=\"Order Title\" value={title} onChangeText={setTitle} placeholder=\"Enter order title\" />\n      <Text style={styles.sectionHeader}>Customer Contact Information</Text>\n      <FormInput\n        label=\"Name\"\n        value={to_address_name}\n        onChangeText={setTo_address_name}\n        placeholder=\"Enter customer name\"\n      />\n      <FormInput\n        label=\"Phone\"\n        value={to_address_phone}\n        onChangeText={setTo_address_phone}\n        placeholder=\"Enter customer phone\"\n        keyboardType=\"phone-pad\"\n      />\n      <FormInput\n        label=\"Email\"\n        value={to_address_email}\n        onChangeText={setTo_address_email}\n        placeholder=\"Enter customer email\"\n        keyboardType=\"email-address\"\n      />\n      <FormInput\n        label=\"Address 1\"\n        value={to_address_streetOne}\n        onChangeText={setTo_address_streetOne}\n        placeholder=\"Enter address line 1\"\n      />\n      <FormInput\n        label=\"Address 2 (optional)\"\n        value={to_address_streetTwo}\n        onChangeText={setTo_address_streetTwo}\n        placeholder=\"Enter address line 2\"\n      />\n      <FormInput\n        label=\"City\"\n        value={to_address_city}\n        onChangeText={setTo_address_city}\n        placeholder=\"Enter city\"\n      />\n      <FormInput\n        label=\"State\"\n        value={to_address_state}\n        onChangeText={setTo_address_state}\n        placeholder=\"Enter state\"\n      />\n      <FormInput\n        label=\"Zip\"\n        value={to_address_zip}\n        onChangeText={setTo_address_zip}\n        placeholder=\"Enter zip code\"\n        keyboardType=\"numeric\"\n      />\n      <FormInput\n        label=\"Country\"\n        value={to_address_country}\n        onChangeText={setTo_address_country}\n        placeholder=\"Enter country\"\n      />\n      <FormInput\n        label=\"Total Amount\"\n        value={total}\n        onChangeText={setTotal}\n        placeholder=\"Enter total amount\"\n        keyboardType=\"numeric\"\n      />\n      <FormInput\n        label=\"Note\"\n        value={note}\n        onChangeText={setNote}\n        placeholder=\"Add a note (optional)\"\n        multiline\n      />\n\n      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n        <Ionicons name=\"checkmark-done-outline\" size={24} color={COLORS.white} />\n        <Text style={styles.submitButtonText}>Create Order</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nexport default CreateClientOrderView;\n\nconst styles = StyleSheet.create({\n  formContainer: {\n    padding: SIZES.medium,\n  },\n  label: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n    marginBottom: SIZES.small,\n  },\n  sectionHeader: {\n    fontSize: SIZES.large,\n    color: COLORS.primary,\n    marginBottom: SIZES.small,\n    fontWeight: 'bold',\n  },\n  input: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.small,\n    borderRadius: SIZES.small,\n    fontFamily: 'regular',\n    marginBottom: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: COLORS.primary,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    marginTop: SIZES.large,\n  },\n  submitButtonText: {\n    fontFamily: 'bold',\n    color: COLORS.white,\n    fontSize: SIZES.medium,\n    marginLeft: SIZES.small,\n  },\n});\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, Alert } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { useClientOrder } from '@/contexts/OrderContext';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { OrderModelProps, SAMPLE_ORDER_ITEMS } from '@/models/OrderModelProps';\n// import { generateUUID } from '@/hooks/generateUUID';\n// import { useAuth } from '@/contexts/AuthContext';\n// import { SAMPLE_PRODUCT } from '@/models/ProductModelProps';\n\n// const CreateClientOrderView = () => {\n//   const [title, setTitle] = useState('');\n//   const [total, setTotal] = useState('');\n//   const [note, setNote] = useState('');\n\n//   const [to_address_name, setTo_address_name] = useState('');\n//   const [to_address_streetOne, setTo_address_streetOne] = useState('');\n//   const [to_address_streetTwo, setTo_address_streetTwo] = useState('');\n//   const [to_address_city, setTo_address_city] = useState('');\n//   const [to_address_state, setTo_address_state] = useState('');\n//   const [to_address_zip, setTo_address_zip] = useState('');\n//   const [to_address_country, setTo_address_country] = useState('');\n//   const [to_address_phone, setTo_address_phone] = useState('');\n//   const [to_address_email, setTo_address_email] = useState('');\n\n\n\n\n\n//   const { getClientOrders , addOrder } = useClientOrder();\n//   const { authState } = useAuth();\n// //   const randomID = uuid();\n//   const handleSubmit = () => {\n//     if (!title || !total) {\n//       Alert.alert(\"Validation Error\", \"Please fill in all required fields.\");\n//       return;\n//     }\n\n//     // console.warn(\"Replace - SAMPLE_ORDER_ITEMS with cart products for order items\")\n//     const newOrder: OrderModelProps = {\n//       id: generateUUID(8),  // Generate a unique ID for the order\n//       stripe_id: '',\n//       store_id: authState?.user?.store_owner_id ?? \"\",\n//       index: 0,// getClientOrders.length,\n//       order_status: 'Pending', // Default status\n//       items: SAMPLE_ORDER_ITEMS,\n//       userId: authState?.user?.id ?? \"\",\n//       order_history: [],\n//       total: parseFloat(total),\n//       net_total: parseFloat(total),\n//       courier: '',\n//       shipping_label: '',\n//       return_label: '',\n//       from_address: {\n//         name: 'darrien',\n//         streetOne: '643 snediker ave',\n//         streetTwo: '',\n//         city: 'brooklyn NY',\n//         state: 'NY',\n//         zip: '11207',\n//         country: 'US',\n//         phone: '3478800665',\n//         email: authState?.user?.email ?? \"\",\n//         is_residential: false,\n//       },\n//       to_address: {\n//         name: to_address_name || \"tom\",\n//         streetOne: to_address_streetOne || \"343 snediker ave\",\n//         streetTwo: to_address_streetTwo,\n//         city: to_address_city || \"brooklyn\",\n//         state: to_address_state || \"NY\",\n//         zip: to_address_zip || \"11207\",\n//         country: to_address_country || \"US\",\n//         phone: to_address_phone || \"3478800665\",\n//         email: to_address_email || \"darrien@gmail.com\",\n//         is_residential: false,\n//       },\n//       parcel: {\n//         length: '',\n//         width: '',\n//         height: '',\n//         distance_unit: '',\n//         weight: '',\n//         mass_unit: '',\n//         value_amount: 0,\n//         metadata: '',\n//         test: false,\n//       },\n//       title,\n//       type: '',\n//       coupon_code: '',\n//       referred_by: '',\n//       statement_descriptor: '',\n//       note,\n//       budget: '',\n//       order_placed_date:  new Date().toISOString(),\n//       order_started_date: '',\n//       order_created_date: '',\n//       order_completed_date: '',\n//       tax: 0,\n//       stripe_fee: 0,\n//       afm_fee: 0,\n//       shipping_cost: 0,\n//       discount_amount: 0,\n//     };\n\n//     console.log(newOrder)\n\n//     addOrder(newOrder);\n//     Alert.alert(\"Order Created\", `Order titled \"${title}\" has been created!`);\n//   };\n\n//   return (\n//     <ScrollView style={styles.formContainer}>\n//       <Text style={styles.label}>Order Title</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order title\"\n//         value={title}\n//         onChangeText={setTitle}\n//       />\n\n//    {/* Contact  Section */}\n//    <Text style={styles.sectionHeader}>Customer Contact Information</Text>\n\n//    <Text style={styles.label}>Name</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter customer name\"\n//         value={to_address_name}\n//         onChangeText={setTo_address_name}\n//       />\n    \n//     <Text style={styles.label}>Phone</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order phone\"\n//         value={to_address_phone}\n//         onChangeText={setTo_address_phone}\n//       />\n      \n//       <Text style={styles.label}>Address 1</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order address\"\n//         value={to_address_streetOne}\n//         onChangeText={setTo_address_streetOne}\n//       />\n      \n\n//       <Text style={styles.label}>Address 2 (optional)</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order address\"\n//         value={to_address_streetTwo}\n//         onChangeText={setTo_address_streetTwo}\n//       />\n      \n\n//       <Text style={styles.label}>City</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order city\"\n//         value={to_address_city}\n//         onChangeText={setTo_address_city}\n//       />\n      \n\n//       <Text style={styles.label}>State</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order state\"\n//         value={to_address_state}\n//         onChangeText={setTo_address_state}\n//       />\n      \n\n//       <Text style={styles.label}>Zip</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order zip\"\n//         value={to_address_zip}\n//         onChangeText={setTo_address_zip}\n//       />\n\n\n//       <Text style={styles.label}>Country</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order country\"\n//         value={to_address_country}\n//         onChangeText={setTo_address_country}\n//       />\n      \n\n//       <Text style={styles.label}>Email</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order email\"\n//         value={to_address_email}\n//         onChangeText={setTo_address_email}\n//       />\n      \n\n//       <Text style={styles.label}>Order Title</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order title\"\n//         value={title}\n//         onChangeText={setTitle}\n//       />\n      \n\n\n\n//       <Text style={styles.label}>Total Amount</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter total amount\"\n//         value={total}\n//         onChangeText={setTotal}\n//         keyboardType=\"numeric\"\n//       />\n\n//       <Text style={styles.label}>Note</Text>\n//       <TextInput\n//         style={[styles.input, styles.textArea]}\n//         placeholder=\"Add a note (optional)\"\n//         value={note}\n//         onChangeText={setNote}\n//         multiline\n//       />\n\n//       <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n//         <Ionicons name=\"checkmark-done-outline\" size={24} color={COLORS.white} />\n//         <Text style={styles.submitButtonText}>Create Order</Text>\n//       </TouchableOpacity>\n//     </ScrollView>\n//   );\n// };\n\n// export default CreateClientOrderView;\n\n// const styles = StyleSheet.create({\n\n//   formContainer: {\n//     padding: SIZES.medium,\n//     // backgroundColor: COLORS.lightGray,\n//   },\n//   label: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//   },\n//   sectionHeader: {\n//     fontSize: SIZES.large,\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//     fontWeight: 'bold',\n//   },\n//   input: {\n//     backgroundColor: COLORS.white,\n//     padding: SIZES.small,\n//     borderRadius: SIZES.small,\n//     fontFamily: 'regular',\n//     marginBottom: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 2,\n//   },\n//   textArea: {\n//     height: 100,\n//     textAlignVertical: 'top',\n//   },\n//   submitButton: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     backgroundColor: COLORS.primary,\n//     padding: SIZES.medium,\n//     borderRadius: SIZES.medium,\n//     marginTop: SIZES.large,\n//   },\n//   submitButtonText: {\n//     fontFamily: 'bold',\n//     color: COLORS.white,\n//     fontSize: SIZES.medium,\n//     marginLeft: SIZES.small,\n//   },\n// });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { View, Text, TextInput, Button, ScrollView, Image, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\n// import { useClientOrder } from '@/contexts/OrderContext'; // Replace with actual import\n// import { useAuth } from '@/contexts/AuthContext'; // Replace with actual import\n// import { COLORS, SIZES } from '@/utils/theme'; // Replace with actual theme imports\n// import { OrderModelProps, SAMPLE_ORDER_ITEMS } from '@/models/OrderModelProps';\n// import { generateUUID } from '@/hooks/generateUUID';\n\n// const CreateClientOrderView = () => {\n//   const [title, setTitle] = useState('');\n//   const [user_name, setUserName] = useState('');\n//   const [address, setAddress] = useState('');\n//   const [address_city, setAddressCity] = useState('');\n//   const [address_state, setAddressState] = useState('');\n//   const [address_zip, setAddressZip] = useState('');\n//   const [coupon_code, setCouponCode] = useState('');\n//   const [courier, setCourier] = useState('');\n// //   const [orderItems, setOrderItems] = useState([]);\n// //   const [selectedUser, setSelectedUser] = useState('');\n  \n//   const { addOrder } = useClientOrder();\n//   const { authState } = useAuth();\n  \n//   const handleCreateOrder = () => {\n//     // const newOrder = {\n//     //   title,\n//     //   user_name: selectedUser || user_name,\n//     //   address,\n//     //   address_city,\n//     //   address_state,\n//     //   address_zip,\n//     //   coupon_code,\n//     //   courier,\n//     //   items: orderItems,\n//     //   order_status: 'Pending',\n//     //   total: calculateFullTotal(),\n//     //   net_total: calculateFullTotal(),\n//     //   order_placed_date: new Date().toISOString(),\n//     //   note: '',\n//     //   afm_fee: 5.5,\n//     //   stripe_fee: 2.9 + 0.30,\n//     //   store_id: authState?.user?.store_owner_id || '',\n//     // };\n\n//     const newOrder: OrderModelProps = {\n//         id: generateUUID(8), // Generate a unique ID for the order\n//         stripe_id: '',\n//         store_id: authState?.user?.store_owner_id ?? \"\",\n//         index: 0, // getClientOrders.length,\n//         order_status: 'Pending', // Default status\n//         items: SAMPLE_ORDER_ITEMS,\n//         userId: authState?.user?.id ?? \"\",\n//         order_history: [],\n//         total: 20, // parseFloat(total),\n//         net_total: 20, // parseFloat(total),\n//         courier: '',\n//         shipping_label: '',\n//         return_label: '',\n//         from_address: {\n//             name: 'darrien',\n//             streetOne: '643 snediker ave',\n//             streetTwo: '',\n//             city: 'brooklyn NY',\n//             state: '',\n//             zip: '',\n//             country: '',\n//             phone: '',\n//             email: authState?.user?.email ?? \"\",\n//             is_residential: false,\n//         },\n//         to_address: {\n//             name: '',\n//             streetOne: '',\n//             streetTwo: '',\n//             city: '',\n//             state: '',\n//             zip: '',\n//             country: '',\n//             phone: '',\n//             email: 'test',\n//             is_residential: false,\n//         },\n//         parcel: {\n//             length: '',\n//             width: '',\n//             height: '',\n//             distance_unit: '',\n//             weight: '',\n//             mass_unit: '',\n//             value_amount: 0,\n//             metadata: '',\n//             test: false,\n//         },\n//         title,\n//         type: '',\n//         coupon_code: '',\n//         referred_by: '',\n//         statement_descriptor: '',\n\n//         budget: '',\n//         order_placed_date: \"\", // new Date().toISOString(),\n//         order_started_date: '',\n//         order_created_date: '',\n//         order_completed_date: '',\n//         tax: 0,\n//         stripe_fee: 0,\n//         afm_fee: 0,\n//         shipping_cost: 0,\n//         discount_amount: 0,\n//         note: ''\n//     };\n//     addOrder(newOrder)\n//       .then(() => {\n//         console.log('Order created successfully');\n//       })\n//       .catch((error) => {\n//         console.error('Failed to create order:', error);\n//       });\n//   };\n\n  \n\n// //   const calculateFullTotal = () => {\n// //     let total = 0;\n// //     orderItems.forEach(item => {\n// //         // total += item.total_price;\n// //         total += item.total_price;\n// //     });\n// //     const percentageAmount = total * (5.5 / 100.0); // Example percentage\n// //     const fixedAmount = 0.30; // Example fixed fee\n// //     return total - percentageAmount - fixedAmount;\n// //   };\n\n//   return (\n//     <ScrollView style={styles.container}>\n//       <Text style={styles.header}>Create Order</Text>\n\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Customer Name\"\n//         value={ user_name}\n//         onChangeText={setUserName}\n//       />\n\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Address\"\n//         value={address}\n//         onChangeText={setAddress}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"City\"\n//         value={address_city}\n//         onChangeText={setAddressCity}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"State\"\n//         value={address_state}\n//         onChangeText={setAddressState}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Zip\"\n//         value={address_zip}\n//         onChangeText={setAddressZip}\n//       />\n\n//       <Text style={styles.sectionHeader}>Pricing</Text>\n//       {/* <Text style={styles.label}>Net Total: ${calculateFullTotal()}</Text> */}\n//       {/* <Text style={styles.label}>AFM Fee: 5.5%</Text>\n//       <Text style={styles.label}>Processing Fee: 2.9% + $0.30</Text> */}\n\n//       {/* <FlatList\n//         data={orderItems}\n//         keyExtractor={item => item.id}\n//         renderItem={({ item }) => (\n//           <View style={styles.itemCard}>\n//             <Image source={{ uri: item.image }} style={styles.itemImage} />\n//             <View style={styles.itemDetails}>\n//               <Text>{item.title}</Text>\n//               <Text>{item.color} - {item.size}</Text>\n//               <Text>${item.total_price}</Text>\n//             </View>\n//           </View>\n//         )}\n//       /> */}\n\n//       <TouchableOpacity style={styles.createButton} onPress={handleCreateOrder}>\n//         <Text style={styles.createButtonText}>Create Order</Text>\n//       </TouchableOpacity>\n//     </ScrollView>\n//   );\n// };\n\n// export default CreateClientOrderView;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     padding: SIZES.medium,\n//   },\n//   header: {\n//     fontSize: SIZES.large,\n//     fontWeight: 'bold',\n//     marginBottom: SIZES.medium,\n//   },\n//   input: {\n//     padding: SIZES.small,\n//     borderWidth: 1,\n//     borderColor: COLORS.gray,\n//     borderRadius: SIZES.small,\n//     marginBottom: SIZES.medium,\n//   },\n//   sectionHeader: {\n//     fontSize: SIZES.medium,\n//     fontWeight: 'bold',\n//     marginBottom: SIZES.small,\n//   },\n//   label: {\n//     fontSize: SIZES.small,\n//     marginBottom: SIZES.small,\n//   },\n//   itemCard: {\n//     flexDirection: 'row',\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.small,\n//     backgroundColor: COLORS.white,\n//     borderRadius: SIZES.small,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 2,\n//   },\n//   itemImage: {\n//     width: 60,\n//     height: 60,\n//     borderRadius: SIZES.small,\n//   },\n//   itemDetails: {\n//     marginLeft: SIZES.medium,\n//     justifyContent: 'center',\n//   },\n//   createButton: {\n//     backgroundColor: COLORS.primary,\n//     padding: SIZES.medium,\n//     borderRadius: SIZES.medium,\n//     alignItems: 'center',\n//   },\n//   createButtonText: {\n//     color: COLORS.white,\n//     fontSize: SIZES.medium,\n//     fontWeight: 'bold',\n//   },\n// });\n\n\n\n\n\n\n","\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { COLORS, SIZES } from \"@/utils/theme\";\nimport convertToCurrency from \"@/hooks/convertToCurrency\";\nimport { ProductModelProps } from \"@/models/ProductModelProps\";\nimport { Link } from \"expo-router\";\nimport { useClientProduct } from \"@/contexts/ClientProductContext\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst ClientProductCard: React.FC<{ product: ProductModelProps }> = ({\n  product,\n}) => {\n  const { selectProduct } = useClientProduct();\n  const [status, setStatus] = useState<boolean>(product.active);\n\n  const handleProductPress = () => {\n    selectProduct(product);\n  };\n\n  useEffect(() => {\n    setStatus(product.active);\n  }, [product.active]);\n\n  return (\n    <Link\n      href={`(tabs)/client-products/(details)/${product.id}` as never}\n      asChild\n    >\n      <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n        <View style={styles.body}>\n          <Ionicons\n            name=\"bag\"\n            size={30}\n            color={COLORS.primary}\n            style={styles.icon}\n          />\n          <View style={styles.details}>\n            <Text style={styles.name}>{product.name}</Text>\n            <Text style={styles.price}>{convertToCurrency(product.price)}</Text>\n            <Text style={styles.date}>Placed on: {product.createdOn}</Text>\n          </View>\n          <View style={styles.statusContainer}>\n            <Text style={[styles.status, getStatusStyle(status)]}>\n              {status ? \"Active\" : \"Inactive\"}\n            </Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Link>\n  );\n};\n\nconst getStatusStyle = (status: boolean) => {\n  if (status) {\n    return styles.activeStatus;\n  } else {\n    return styles.inactiveStatus;\n  }\n};\n\nexport default ClientProductCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: COLORS.white,\n    borderRadius: SIZES.medium,\n    marginBottom: SIZES.medium,\n    padding: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  body: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  icon: {\n    paddingRight: SIZES.medium,\n  },\n  details: {\n    flex: 1,\n  },\n  name: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  price: {\n    fontFamily: \"regular\",\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  date: {\n    fontFamily: \"regular\",\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  statusContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  status: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.small,\n    paddingVertical: SIZES.small,\n    paddingHorizontal: SIZES.medium,\n    borderRadius: SIZES.large,\n  },\n  activeStatus: {\n    backgroundColor: COLORS.green,\n    color: COLORS.white,\n  },\n  inactiveStatus: {\n    backgroundColor: COLORS.red,\n    color: COLORS.white,\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\n// import { COLORS, SIZES } from \"@/utils/theme\";\n// import convertToCurrency from \"@/hooks/convertToCurrency\";\n// import { ProductModelProps } from \"@/models/ProductModelProps\";\n// import { Link } from \"expo-router\";\n// import { useClientProduct } from \"@/contexts/ClientProductContext\";\n// import { Ionicons } from \"@expo/vector-icons\";\n\n// const ClientProductCard: React.FC<{ product: ProductModelProps }> = ({\n//   product,\n// }) => {\n//   const { selectProduct } = useClientProduct();\n//   const [status, setStatus] = useState<boolean>(false);\n\n//   const handleProductPress = () => {\n//     selectProduct(product);\n//   };\n\n//   useEffect(() => {\n//     setStatus(product.active);\n//   }, [product.active]);\n\n//   return (\n//     <Link\n//       href={`(tabs)/client-products/(details)/${product.id}` as never}\n//       asChild\n//     >\n//       <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n//         <View style={styles.body}>\n//           <Ionicons\n//             name=\"bag\"\n//             size={30}\n//             color={COLORS.primary}\n//             style={styles.icon}\n//           />\n//           <View style={styles.details}>\n//             <Text style={styles.name}>{product.name}</Text>\n//             <Text style={styles.price}>{convertToCurrency(product.price)}</Text>\n//             <Text style={styles.date}>Placed on: {product.createdOn}</Text>\n//           </View>\n//           <View style={styles.statusContainer}>\n//             <Text style={[styles.status, getStatusStyle(status)]}>\n//               {status}\n//             </Text>\n//           </View>\n//         </View>\n//       </TouchableOpacity>\n//     </Link>\n//   );\n// };\n\n// const getStatusStyle = (status: string) => {\n//   switch (status) {\n//     case \"Fulfill Product\":\n//       return styles.fulfillProductStatus;\n//     case \"Mark as Shipped\":\n//       return styles.markAsShippedStatus;\n//     case \"Shipped !\":\n//       return styles.shippedStatus;\n//     default:\n//       return styles.defaultStatus;\n//   }\n// };\n\n// export default ClientProductCard;\n\n// const styles = StyleSheet.create({\n//   card: {\n//     backgroundColor: COLORS.white,\n//     borderRadius: SIZES.medium,\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 5,\n//   },\n//   body: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//   },\n//   icon: {\n//     paddingRight: SIZES.medium,\n//   },\n//   details: {\n//     flex: 1,\n//   },\n//   name: {\n//     fontFamily: \"bold\",\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   price: {\n//     fontFamily: \"regular\",\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   date: {\n//     fontFamily: \"regular\",\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   statusContainer: {\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//   },\n//   status: {\n//     fontFamily: \"bold\",\n//     fontSize: SIZES.small,\n//     paddingVertical: SIZES.small,\n//     paddingHorizontal: SIZES.medium,\n//     borderRadius: SIZES.large,\n//   },\n//   fulfillProductStatus: {\n//     backgroundColor: COLORS.primary,\n//     color: COLORS.white,\n//   },\n//   markAsShippedStatus: {\n//     backgroundColor: COLORS.orange,\n//     color: COLORS.black,\n//   },\n//   shippedStatus: {\n//     backgroundColor: COLORS.green,\n//     color: COLORS.black,\n//   },\n//   defaultStatus: {\n//     backgroundColor: COLORS.blue,\n//     color: COLORS.white,\n//   },\n// });\n\n// // ProductCard.tsx\n// import React from 'react';\n// import { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\n// // import { ProductModelProps } from './Product';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { Ionicons } from '@expo/vector-icons';\n// import convertToCurrency from '@/hooks/convertToCurrency';\n// import { ProductModelProps } from '@/models/ProductModelProps';\n// import { Link } from 'expo-router';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n\n// const ClientProductCard: React.FC<ProductModelProps> = (product) => {\n//   const { selectProduct } = useClientProduct();\n\n//   const handleProductPress = () => {\n//     selectProduct(product);\n//   };\n//   return (\n//     // <Link href={\"(tabs)/client-products/(create)/create-client-product\" as never} asChild>\n//     // <Link href={\"(tabs)/client-products/(create)/create-client-product\" as never} asChild>\n\n//     <Link href={`(tabs)/client-products/(details)/${product.id}` as never} asChild>\n\n//     <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n//       <View style={styles.header}>\n//         <Text style={styles.productId}>Product ID: {product.id}</Text>\n//         <Text style={styles.status}>{product.product_status}</Text>\n//       </View>\n\n//       <View style={styles.body}>\n//         {/* <Image source={{ uri: props.items[0].image }} style={styles.image} /> */}\n//         <View style={styles.details}>\n//           <Text style={styles.title}>{product.title}</Text>\n//           <Text style={styles.date}>Placed on: {product.product_placed_date}</Text>\n//           <Text style={styles.price}>{convertToCurrency(product.total)}</Text>\n//         </View>\n//       </View>\n\n//       <View style={styles.footer}>\n//         <Ionicons name=\"square\" size={24} color={COLORS.primary} />\n//       </View>\n//     </TouchableOpacity>\n//     </Link>\n//   );\n// };\n\n// export default ClientProductCard;\n\n// const styles = StyleSheet.create({\n//   card: {\n//     backgroundColor: COLORS.white,\n//     bproductRadius: SIZES.medium,\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 5,\n//   },\n//   header: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//     marginBottom: SIZES.small,\n//   },\n//   productId: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   status: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   body: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//   },\n//   image: {\n//     width: 60,\n//     height: 60,\n//     bproductRadius: SIZES.small,\n//     marginRight: SIZES.medium,\n//   },\n//   details: {\n//     flex: 1,\n//   },\n//   title: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     marginBottom: SIZES.small,\n//     color: COLORS.primary,\n//   },\n//   date: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   price: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginTop: SIZES.small,\n//   },\n//   footer: {\n//     flexDirection: 'row',\n//     justifyContent: 'flex-end',\n//     marginTop: SIZES.small,\n//   },\n// });\n","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Button, Alert, ScrollView, Linking } from 'react-native';\nimport { Stack, useLocalSearchParams, useRouter } from 'expo-router';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { ProductModelProps } from '@/models/ProductModelProps';\n\nconst ClientProductDetailsPage = () => {\n  const { selectedProduct, removeClientProduct, addClientProduct } = useClientProduct();\n  const router = useRouter();\n  const [productDetails, setProductDetails] = useState<ProductModelProps | null>(null);\n\n  // State variables to handle product details\n  const [status, setStatus] = useState('');\n  const [total, setTotal] = useState(0.0);\n  const [address, setAddress] = useState('');\n  const [addressZip, setAddressZip] = useState('');\n  const [addressState, setAddressState] = useState('');\n  const [addressCity, setAddressCity] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [productPlacedDate, setProductPlacedDate] = useState('');\n  const [productCompletedDate, setProductCompletedDate] = useState('');\n\n  useEffect(() => {\n    if (selectedProduct) {\n      // Populate state variables with selected product details\n      // setStatus(selectedProduct.active);\n      setTotal(selectedProduct.price);\n      // setAddress(selectedProduct.to_address.streetOne);\n      // setAddressZip(selectedProduct.to_address.zip);\n      // setAddressState(selectedProduct.to_address.state);\n      // setAddressCity(selectedProduct.to_address.city);\n      // setPhoneNumber(selectedProduct.to_address.phone);\n      // setProductPlacedDate(selectedProduct.product_placed_date);\n      // setProductCompletedDate(selectedProduct.product_completed_date);\n   \n   \n    }\n  }, [selectedProduct]);\n\n  const handleCallCustomer = () => {\n    // Trigger phone dialer with customer's phone number\n    if (phoneNumber) {\n      Linking.openURL(`tel:${phoneNumber}`);\n    } else {\n      Alert.alert('Error', 'Phone number is not available.');\n    }\n  };\n\n\n\n  const handleUpdateProduct = () => {\n    if (!productDetails) return;\n\n    Alert.alert(\n      'Confirmation',\n      'Are you sure you want to proceed?',\n      [\n        {\n          text: 'Yes',\n          onPress: () => {\n            // Your update logic here\n            addClientProduct(productDetails);\n            // navigation.goBack();\n          },\n        },\n        { text: 'No', style: 'cancel' },\n      ],\n      { cancelable: true }\n    );\n  };\n\n  const handleDeleteProduct = () => {\n    if (!selectedProduct?.id) {\n      Alert.alert('Error', 'Product ID is missing.');\n      return;\n    }\n  \n    Alert.alert('Confirmation', 'Are you sure you want to delete this product?', [\n      {\n        text: 'Yes',\n        onPress: () => {\n          removeClientProduct(selectedProduct.id);\n          router.back();\n        },\n      },\n      {\n        text: 'No',\n        style: 'cancel',\n      },\n    ]);\n  };\n  \n\n  return (\n   <ScrollView style={styles.container}>\n        <Stack.Screen options={{ title: selectedProduct?.name || 'Product Details' }} />\n\n       <View style={styles.section}>\n             <Text style={styles.sectionHeader}>Status</Text>\n         <Text style={styles.text}>{selectedProduct?.active}</Text>\n       </View>\n\n       <View style={styles.section}>\n         <Text style={styles.sectionHeader}>General</Text>\n        <Button title=\"Call Customer\" onPress={handleCallCustomer} />\n       {/* <Button title=\"Email Customer\" onPress={handleEmailCustomer} /> */}\n        <Button\n          title=\"Edit Shipping Information\"\n        //   onPress={() => navigation.navigate('EditShippingInfo', {\n        //      address: productDetails.to_address?.streetOne,\n        //     city: productDetails.to_address?.city,\n        //      state: productDetails.to_address?.state,\n        //    zip: productDetails.to_address?.zip,\n        //   })}\n        />\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Personal Information</Text>\n        {/* <Text style={styles.text}>Address: {selectedProduct?.to_address.streetOne}</Text>\n        <Text style={styles.text}>City: {selectedProduct?.to_address?.city}</Text>\n        <Text style={styles.text}>State: {selectedProduct?.to_address?.state}</Text>\n        <Text style={styles.text}>Zip: {selectedProduct?.to_address?.zip}</Text> */}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Time Stamp</Text>\n        {/* <Text style={styles.text}>Created: {selectedProduct?.product_created_date}</Text>\n        <Text style={styles.text}>Placed: {selectedProduct?.product_placed_date}</Text>\n        <Text style={styles.text}>Shipped: {selectedProduct?.product_started_date}</Text>\n        <Text style={styles.text}>Completed: {selectedProduct?.product_completed_date}</Text>\n      </View> */}\n      </View> \n      <Button title=\"Update Product\" onPress={handleUpdateProduct} />\n    </ScrollView>\n  );\n};\n\nexport default ClientProductDetailsPage;\n\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    //   backgroundColor: COLORS.lightGray,\n      padding: SIZES.medium,\n    },\n    section: {\n      marginBottom: SIZES.large,\n    },\n    sectionHeader: {\n      fontSize: SIZES.large,\n      fontWeight: 'bold',\n      color: COLORS.primary,\n      marginBottom: SIZES.small,\n    },\n    text: {\n      fontSize: SIZES.medium,\n      color: COLORS.gray,\n      marginBottom: SIZES.small,\n    },\n  });\n\n\n\n// const styles = StyleSheet.create({\n//   container: {\n//     padding: SIZES.medium,\n//     // backgroundColor: COLORS.lightGray,\n//   },\n//   section: {\n//     marginBottom: SIZES.medium,\n//   },\n//   label: {\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//   },\n//   value: {\n//     fontSize: SIZES.large,\n//     color: COLORS.gray,\n//   },\n//   buttonContainer: {\n//     marginTop: SIZES.large,\n//   },\n// });\n// function addProduct(arg0: {}) {\n//     throw new Error('Function not implemented.');\n// }\n\n","import React, { useState } from 'react';\nimport { SafeAreaView, View, TextInput, TouchableOpacity, Text, FlatList, StyleSheet, Pressable } from 'react-native';\nimport { Feather, Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n// import ProductCard from '@/components/ProductCard';  // Adjust the import path as necessary\nimport { Link, Stack } from 'expo-router';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\n// import Colors from '@/constants/Colors';\nimport { useColorScheme } from '@/hooks/useColorScheme';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport ClientProductCard from '@/components/pages/client-product/ClientProductCard';\n\nconst ClientProductsView = () => {\n  const { authState } = useAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<ProductModelProps[]>([]);\n\n  const { products, selectProduct } = useClientProduct();\n  \n  const colorScheme = useColorScheme();\n\n  const handleProductSelect = (product: ProductModelProps) => {\n    selectProduct(product);\n  };\n\n  const handleSearch = (text: string) => {\n    try {\n      setSearchTerm(text);\n      const results = products.filter((product: ProductModelProps) =>\n        product.name.toLowerCase().includes(text.toLowerCase())\n      );\n      setSearchResults(results);\n    } catch (error) {\n      console.log(\"Failed to get products\", error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Stack.Screen \n        options={{\n          headerRight: () => (\n            <Link href={\"(tabs)/client-products/(create)/create-client-product\" as never} asChild>\n              <Pressable>\n                {({ pressed }) => (\n                  <FontAwesome\n                    name=\"plus\"\n                    size={30}\n                    color={COLORS[colorScheme ?? 'light'].text}\n                    style={{ marginRight: 15, opacity: pressed ? 0.5 : 1 }}\n                  />\n                )}\n              </Pressable>\n            </Link>\n          ),\n        }}\n      />\n\n      {/* Search */}\n{/* \n      <View style={styles.searchContainer}>\n        <TouchableOpacity>\n          <Ionicons \n            name='camera-outline' \n            size={SIZES.xLarge} \n            style={styles.searchIcon}\n          />\n        </TouchableOpacity>\n\n        <View style={styles.searchWrapper}>\n          <TextInput \n            style={styles.searchInput} \n            value={searchTerm}\n            onChangeText={handleSearch}\n            placeholder='What are you looking for'\n          />\n        </View>\n\n        <View>\n          <TouchableOpacity style={styles.searchBtn} onPress={() => handleSearch(searchTerm)}>\n            <Feather name='search' size={24} color={COLORS.offwhite}/>\n          </TouchableOpacity>\n        </View>\n      </View> */}\n\n      <FlatList\n        keyExtractor={(item: ProductModelProps) => item.id.toString()}\n        // data={searchTerm === '' ? products : searchResults.length === 0 ? products : searchResults}\n        data={products}\n        // renderItem={({ item }) => <ClientProductCard product={item} onPress={() => console.log('Product selected', item)} />}\n        renderItem={({ item }) =>  (\n          <TouchableOpacity onPress={() => handleProductSelect(item)}>\n            <ClientProductCard product={item}/>\n          </TouchableOpacity>\n        )}\n        contentContainerStyle={styles.list}\n      />\n    </View>\n  );\n};\n\nexport default ClientProductsView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    // backgroundColor: COLORS.gray2,\n  },\n  detailsLink: {\n    marginHorizontal: SIZES.medium,\n    marginBottom: SIZES.medium,\n  },\n  detailsLinkText: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n    textDecorationLine: 'underline',\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    marginHorizontal: SIZES.small,\n    backgroundColor: COLORS.secondary,\n    borderRadius: SIZES.medium,\n    marginVertical: SIZES.medium,\n    height: 50,\n  },\n  searchIcon: {\n    marginHorizontal: 10,\n    color: COLORS.gray,\n    marginTop: SIZES.small,\n  },\n  searchWrapper:{ \n    flex: 1,\n    backgroundColor: COLORS.secondary,\n    marginRight: SIZES.small,\n    borderRadius: SIZES.small,\n  },\n  searchInput: {\n    fontFamily: \"regular\",\n    width: \"100%\",\n    height: \"100%\",\n    paddingHorizontal: SIZES.small,\n  },\n  searchBtn: {\n    width: 50,\n    height: \"100%\",\n    borderRadius: SIZES.medium,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.primary,\n  },\n  list: {\n    paddingHorizontal: SIZES.medium,\n    paddingBottom: SIZES.large,\n  },\n});","import React, { FC } from \"react\";\nimport { Text, TextInput, TextInputProps, StyleSheet, View } from \"react-native\";\n\nexport interface FormInputProps {\n    label: string;\n    value: any;\n    onChangeText: (text: string) => void;\n    placeholder: string;\n    keyboardType?: TextInputProps['keyboardType'];\n    multiline?: boolean;\n}\n\nexport const FormInput: FC<FormInputProps> = ({\n  label,\n  value,\n  onChangeText,\n  placeholder,\n  keyboardType = 'default',\n  multiline = false,\n}) => (\n  <View style={styles.container}>\n    <Text style={styles.label}>{label}</Text>\n    <TextInput\n      style={[styles.input, multiline && styles.textArea]}\n      placeholder={placeholder}\n      value={value}\n      onChangeText={onChangeText}\n      keyboardType={keyboardType}\n      multiline={multiline}\n    />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  input: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top', // Ensures the text starts at the top of the input\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, Alert } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport { generateUUID } from '@/hooks/generateUUID';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { FormInput } from '@/components/interfaces/FormImport';\n\nconst CreateClientProductView = () => {\n  const [title, setTitle] = useState('');\n  const [price, setPrice] = useState('');\n  const [note, setNote] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [sku, setSku] = useState('');\n\n  const { addClientProduct } = useClientProduct();\n  const { authState } = useAuth();\n\n  const handleSubmit = () => {\n    // if (!title || !price || !brand || !category) {\n    //   Alert.alert('Validation Error', 'Please fill in all required fields.');\n    //   return;\n    // }\n\n    if (!/^\\d+(\\.\\d{1,2})?$/.test(price)) {\n      Alert.alert('Validation Error', 'Please enter a valid price.');\n      return;\n    }\n\n    const newProduct: ProductModelProps = {\n      id: generateUUID(8),\n      store_id: authState?.user?.store_owner_id ?? '',\n      index: 0,\n      createdOn: '',\n      active: false,\n      name: title,\n      image: '',\n      price: parseFloat(price),\n      on_sale: false,\n      sale_price: 0,\n      slug: '',\n      quantity: parseInt(quantity) || 0,\n      description: note,\n      icon_name: '',\n      category: category,\n      images: [],\n      included: [],\n      materials: [],\n      tags: [],\n      brand: brand,\n      views: 0,\n      likes: 0,\n      isLiked: false,\n      gender: '',\n      color: '',\n      color_code: '',\n      condition: '',\n      features: [],\n      sku: sku,\n      variant_type: false,\n      variant_selected: {},\n      variants: [],\n      last_updated: '',\n      item_type: '',\n      ingredients: [],\n      inventory: 0,\n      reviews: [],\n      rating: [],\n      size: '',\n      sizes: [],\n      weight: 0,\n      year_made: 0\n    };\n\n    addClientProduct(newProduct);\n    \n    // Alert.alert('Product Created', `Product titled \"${title}\" has been created!`);\n  };\n\n  return (\n    <ScrollView style={styles.formContainer}>\n      <Text style={styles.header}>Create New Product</Text>\n      <FormInput label=\"Product Title\" value={title} onChangeText={setTitle} placeholder=\"Enter product title\" />\n      <FormInput label=\"Brand\" value={brand} onChangeText={setBrand} placeholder=\"Enter brand name\" />\n      <FormInput label=\"Category\" value={category} onChangeText={setCategory} placeholder=\"Enter category\" />\n      <FormInput\n        label=\"Price\"\n        value={price}\n        onChangeText={setPrice}\n        placeholder=\"Enter price\"\n        keyboardType=\"numeric\"\n      />\n      <FormInput\n        label=\"Quantity\"\n        value={quantity}\n        onChangeText={setQuantity}\n        placeholder=\"Enter quantity\"\n        keyboardType=\"numeric\"\n      />\n      <FormInput label=\"SKU\" value={sku} onChangeText={setSku} placeholder=\"Enter SKU\" />\n      <FormInput\n        label=\"Description/Notes\"\n        value={note}\n        onChangeText={setNote}\n        placeholder=\"Add a description or note (optional)\"\n        multiline\n      />\n\n      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n        <Ionicons name=\"checkmark-done-outline\" size={24} color={COLORS.white} />\n        <Text style={styles.submitButtonText}>Create Product</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nexport default CreateClientProductView;\n\nconst styles = StyleSheet.create({\n  formContainer: {\n    padding: SIZES.medium,\n  },\n  header: {\n    fontSize: SIZES.large,\n    color: COLORS.primary,\n    fontWeight: 'bold',\n    marginBottom: SIZES.large,\n    textAlign: 'center',\n  },\n  input: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.small,\n    borderRadius: SIZES.small,\n    fontFamily: 'regular',\n    marginBottom: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: COLORS.primary,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    marginTop: SIZES.large,\n  },\n  submitButtonText: {\n    fontFamily: 'bold',\n    color: COLORS.white,\n    fontSize: SIZES.medium,\n    marginLeft: SIZES.small,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, FlatList, Image, TouchableOpacity, SafeAreaView } from 'react-native';\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\nimport { useClientCollection } from '@/contexts/CollectionContext';\nimport { CollectionModelProps } from '@/models/CollectionModelProps'; // Adjust the import path as necessary\n\nconst CollectionPageVOne: React.FC = () => {\n\n  const { collections } = useClientCollection();\n\n  const renderItem = ({ item }: { item: CollectionModelProps }) => (\n    <View style={styles.card}>\n      <Image source={{ uri: item.image }} style={styles.cardImage} />\n      <View style={styles.cardDetails}>\n        <Text style={styles.cardTitle}>{item.title}</Text>\n        <Text style={styles.cardArtist}>{item.description}</Text>\n        <Text style={styles.cardPrice}>{item.amount} ETH</Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n     \n      <Text style={styles.title}>TOP COLLECTIONS</Text>\n\n      <FlatList\n        data={collections}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n        contentContainerStyle={styles.collectionsList}\n        showsVerticalScrollIndicator={false}\n      />\n    </View>\n  );\n};\n\nexport default CollectionPageVOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0C0D1D',\n    paddingHorizontal: 16,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 24,\n  },\n  collectionsList: {\n    marginTop: 16,\n  },\n  card: {\n    backgroundColor: '#1C1D2F',\n    borderRadius: 8,\n    marginBottom: 16,\n    overflow: 'hidden',\n  },\n  cardImage: {\n    width: '100%',\n    height: 200,\n    resizeMode: 'cover',\n  },\n  cardDetails: {\n    padding: 16,\n  },\n  cardTitle: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  cardArtist: {\n    color: '#8E8E93',\n    marginTop: 4,\n  },\n  cardPrice: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 8,\n  },\n});\n","\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\nimport { router } from 'expo-router';\nimport React, { useState } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, FlatList, Dimensions } from 'react-native';\n\nconst { width, height } = Dimensions.get('window');\n\ninterface ProductProps {\n  id: number;\n  name: string;\n  price: string;\n  image: string;\n}\n\nconst products: ProductProps[] = [\n  { id: 1, name: 'Facet Table Lamp', price: '$284', image: 'https://example.com/lamp.jpg' },\n  { id: 2, name: 'Carlisle Double', price: '$583', image: 'https://example.com/cabinet.jpg' },\n  { id: 3, name: 'Sofia Footstool', price: '$495', image: 'https://example.com/footstool.jpg' },\n  { id: 4, name: 'Theodore', price: '$322', image: 'https://example.com/chair.jpg' },\n  { id: 5, name: 'Lamp 2', price: '$369', image: 'https://example.com/lamp2.jpg' },\n  { id: 6, name: 'Chair 2', price: '$423', image: 'https://example.com/chair2.jpg' },\n];\n\nconst categories = ['All', 'Chair', 'Table', 'Lighting', 'Decor'];\n\nconst CollectionPageVTwo = () => {\n  const [selectedCategory, setSelectedCategory] = useState<string>('All');\n\n  const filteredProducts = selectedCategory === 'All'\n    ? products\n    : products.filter(product => product.name.toLowerCase().includes(selectedCategory.toLowerCase()));\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={categories}\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        keyExtractor={(item) => item}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            style={[\n              styles.categoryButton,\n              item === selectedCategory && styles.selectedCategoryButton\n            ]}\n            onPress={() => setSelectedCategory(item)}\n          >\n            <Text style={[\n              styles.categoryText,\n              item === selectedCategory && styles.selectedCategoryText\n            ]}>\n              {item}\n            </Text>\n          </TouchableOpacity>\n        )}\n        contentContainerStyle={styles.categoryContainer}\n        style={styles.categoryList} // Added style to control height\n      />\n\n      <View style={styles.promoContainer}>\n        <Image\n          source={{ uri: AWS_HOLDER_IMAGE }} // Replace with actual promo image URI\n          style={styles.promoImage}\n        />\n        <View style={styles.promoTextContainer}>\n          <Text style={styles.promoTitle}>Promo for first purchase</Text>\n          <Text style={styles.promoSubtitle}>Special Offers</Text>\n          <Text style={styles.promoDiscount}>40% Off Prices</Text>\n        </View>\n      </View>\n\n      <View style={styles.productListContainer}>\n        <FlatList\n          data={filteredProducts}\n          numColumns={2}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            \n            <View style={styles.productCard}>\n                <TouchableOpacity onPress={() => router.push(`/products/${item.id}` as never)}>\n              {/* <Image source={{ uri: item.image }} style={styles.productImage} /> */}\n              <Image source={{ uri: AWS_HOLDER_IMAGE }} style={styles.productImage} />\n              <Text style={styles.productPrice}>{item.price}</Text>\n              <Text style={styles.productName}>{item.name}</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n          contentContainerStyle={styles.productContainer}\n          ListEmptyComponent={<Text style={styles.emptyMessage}>No products available</Text>}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default CollectionPageVTwo;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n    paddingHorizontal: 10,\n  },\n  categoryList: {\n    maxHeight: 50, // Limit the height of the category list to prevent it from taking too much space\n  },\n  categoryContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  categoryButton: {\n    marginRight: 8,\n    paddingVertical: 5,\n    paddingHorizontal: 12,\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 30, // Adjusted the height to be more compact\n  },\n  selectedCategoryButton: {\n    backgroundColor: '#000000',\n    borderColor: '#000000',\n  },\n  categoryText: {\n    fontSize: 13, // Slightly smaller font for the text\n    fontWeight: 'bold',\n    color: '#000000',\n  },\n  selectedCategoryText: {\n    color: '#FFFFFF',\n  },\n  promoContainer: {\n    marginVertical: 10, // Reduced margin to bring elements closer\n    borderRadius: 10,\n    overflow: 'hidden', // corner radius\n    backgroundColor: '#F5F5F5',\n  },\n  promoImage: {\n    width: '100%',\n    height: 150, // Slightly reduced height for better fit\n    resizeMode: 'cover',\n  },\n  promoTextContainer: {\n    position: 'absolute',\n    top: 15,\n    left: 20,\n  },\n  promoTitle: {\n    fontSize: 20, // Adjusted font size\n    fontWeight: 'bold',\n    color: '#333333',\n  },\n  promoSubtitle: {\n    fontSize: 14, // Adjusted font size\n    color: '#666666',\n    marginTop: 5,\n  },\n  promoDiscount: {\n    fontSize: 16, // Adjusted font size\n    color: '#FF6347',\n    marginTop: 5,\n  },\n  productListContainer: {\n    flex: 1,\n  },\n  productContainer: {\n    paddingBottom: 20,\n  },\n  productCard: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#FFFFFF',\n    padding: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n  },\n  productImage: {\n    width: width / 2 - 40,\n    height: 120,\n    resizeMode: 'cover',\n    borderRadius: 10,\n    marginBottom: 10,\n  },\n  productPrice: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000',\n  },\n  productName: {\n    fontSize: 14,\n    color: '#333333',\n    marginTop: 5,\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    fontSize: 16,\n    color: '#777777',\n    marginTop: 20,\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { AWS_HOLDER_IMAGE } from '@/utils/api';\n// import React, { useState } from 'react';\n// import { View, Text, Image, StyleSheet, TouchableOpacity, FlatList, Dimensions } from 'react-native';\n\n// const { width, height } = Dimensions.get('window');\n\n// interface ProductProps {\n//   id: number;\n//   name: string;\n//   price: string;\n//   image: string;\n// }\n\n// const products: ProductProps[] = [\n//   { id: 1, name: 'Facet Table Lamp', price: '$284', image: 'https://example.com/lamp.jpg' },\n//   { id: 2, name: 'Carlisle Double', price: '$583', image: 'https://example.com/cabinet.jpg' },\n//   { id: 3, name: 'Sofia Footstool', price: '$495', image: 'https://example.com/footstool.jpg' },\n//   { id: 4, name: 'Theodore', price: '$322', image: 'https://example.com/chair.jpg' },\n//   { id: 5, name: 'Lamp 2', price: '$369', image: 'https://example.com/lamp2.jpg' },\n//   { id: 6, name: 'Chair 2', price: '$423', image: 'https://example.com/chair2.jpg' },\n// ];\n\n// const categories = ['All', 'Chair', 'Table', 'Lighting', 'Decor'];\n\n// const CollectionPageVTwo = () => {\n//   const [selectedCategory, setSelectedCategory] = useState<string>('All');\n\n//   const filteredProducts = selectedCategory === 'All'\n//     ? products\n//     : products.filter(product => product.name.toLowerCase().includes(selectedCategory.toLowerCase()));\n\n//   return (\n//     <View style={styles.container}>\n//       <FlatList\n//         data={categories}\n//         horizontal\n//         showsHorizontalScrollIndicator={false}\n//         keyExtractor={(item) => item}\n//         renderItem={({ item }) => (\n//           <TouchableOpacity\n//             style={[\n//               styles.categoryButton,\n//               item === selectedCategory && styles.selectedCategoryButton\n//             ]}\n//             onPress={() => setSelectedCategory(item)}\n//           >\n//             <Text style={[\n//               styles.categoryText,\n//               item === selectedCategory && styles.selectedCategoryText\n//             ]}>\n//               {item}\n//             </Text>\n//           </TouchableOpacity>\n//         )}\n//         contentContainerStyle={styles.categoryContainer}\n//       />\n\n//       <View style={styles.promoContainer}>\n//         <Image\n//           source={{ uri: AWS_HOLDER_IMAGE }} // Replace with actual promo image URI\n//           style={styles.promoImage}\n//         />\n//         <View style={styles.promoTextContainer}>\n//           <Text style={styles.promoTitle}>Promo for first purchase</Text>\n//           <Text style={styles.promoSubtitle}>Special Offers</Text>\n//           <Text style={styles.promoDiscount}>40% Off Prices</Text>\n//         </View>\n//       </View>\n\n//       <View style={styles.productListContainer}>\n//         <FlatList\n//           data={filteredProducts}\n//           numColumns={2}\n//           keyExtractor={(item) => item.id.toString()}\n//           renderItem={({ item }) => (\n//             <View style={styles.productCard}>\n//               <Image source={{ uri: item.image }} style={styles.productImage} />\n//               <Text style={styles.productPrice}>{item.price}</Text>\n//               <Text style={styles.productName}>{item.name}</Text>\n//             </View>\n//           )}\n//           contentContainerStyle={styles.productContainer}\n//           ListEmptyComponent={<Text style={styles.emptyMessage}>No products available</Text>}\n//         />\n//       </View>\n//     </View>\n//   );\n// };\n\n// export default CollectionPageVTwo;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#FFFFFF',\n//     paddingHorizontal: 10,\n//     // paddingTop: 20,\n//   },\n//   categoryContainer: {\n//     paddingVertical: 10,\n//     height: 40\n//     // alignItems: 'center',\n//   },\n//   categoryButton: {\n//     marginRight: 10,\n//     paddingVertical: 8,\n//     paddingHorizontal: 15,\n//     borderWidth: 1,\n//     borderColor: '#000000',\n//     borderRadius: 15,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     height: 35,\n//   },\n//   selectedCategoryButton: {\n//     backgroundColor: '#000000',\n//     borderColor: '#000000',\n//   },\n//   categoryText: {\n//     fontSize: 14,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   selectedCategoryText: {\n//     color: '#FFFFFF',\n//   },\n//   promoContainer: {\n//     marginVertical: 20,\n//     borderRadius: 10,\n//     overflow: 'hidden', // corner radius\n//     backgroundColor: '#F5F5F5',\n//   },\n//   promoImage: {\n//     width: '100%',\n//     height: 160,\n//     resizeMode: 'cover',\n//   },\n//   promoTextContainer: {\n//     position: 'absolute',\n//     top: 15,\n//     left: 20,\n//   },\n//   promoTitle: {\n//     fontSize: 22,\n//     fontWeight: 'bold',\n//     color: '#333333',\n//   },\n//   promoSubtitle: {\n//     fontSize: 16,\n//     color: '#666666',\n//     marginTop: 5,\n//   },\n//   promoDiscount: {\n//     fontSize: 18,\n//     color: '#FF6347',\n//     marginTop: 5,\n//   },\n//   productListContainer: {\n//     flex: 1,\n//   },\n//   productContainer: {\n//     paddingBottom: 20,\n//   },\n//   productCard: {\n//     flex: 1,\n//     margin: 10,\n//     borderRadius: 10,\n//     backgroundColor: '#FFFFFF',\n//     padding: 10,\n//     alignItems: 'center',\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//   },\n//   productImage: {\n//     width: width / 2 - 40,\n//     height: 120,\n//     resizeMode: 'cover',\n//     borderRadius: 10,\n//     marginBottom: 10,\n//   },\n//   productPrice: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   productName: {\n//     fontSize: 14,\n//     color: '#333333',\n//     marginTop: 5,\n//   },\n//   emptyMessage: {\n//     textAlign: 'center',\n//     fontSize: 16,\n//     color: '#777777',\n//     marginTop: 20,\n//   },\n// });\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import { View, Text, Image, StyleSheet, TouchableOpacity, FlatList, Dimensions } from 'react-native';\n\n// const { width } = Dimensions.get('window');\n\n// interface ProductProps {\n//   id: number;\n//   name: string;\n//   price: string;\n//   image: string;\n// }\n\n// const products: ProductProps[] = [\n//   { id: 1, name: 'Facet Table Lamp', price: '$284', image: 'https://example.com/lamp.jpg' },\n//   { id: 2, name: 'Carlisle Double', price: '$583', image: 'https://example.com/cabinet.jpg' },\n//   { id: 3, name: 'Sofia Footstool', price: '$495', image: 'https://example.com/footstool.jpg' },\n//   { id: 4, name: 'Theodore', price: '$322', image: 'https://example.com/chair.jpg' },\n//   { id: 5, name: 'Lamp 2', price: '$369', image: 'https://example.com/lamp2.jpg' },\n//   { id: 6, name: 'Chair 2', price: '$423', image: 'https://example.com/chair2.jpg' },\n// ];\n\n// const categories = ['All', 'Chair', 'Table', 'Lighting', 'Decor'];\n\n// const CollectionPageVTwo = () => {\n//   return (\n//     <View style={styles.container}>\n//       <FlatList\n//         data={categories}\n//         horizontal\n//         showsHorizontalScrollIndicator={false}\n//         keyExtractor={(item) => item}\n//         renderItem={({ item }) => (\n//           <TouchableOpacity style={styles.categoryButton}>\n//             <Text style={styles.categoryText}>{item}</Text>\n//           </TouchableOpacity>\n//         )}\n//         contentContainerStyle={styles.categoryContainer}\n//       />\n\n//       <View style={styles.promoContainer}>\n//         <Image\n//           source={{ uri: 'https://example.com/promo.jpg' }} // Replace with actual promo image URI\n//           style={styles.promoImage}\n//         />\n//         <View style={styles.promoTextContainer}>\n//           <Text style={styles.promoTitle}>Promo for first purchase</Text>\n//           <Text style={styles.promoSubtitle}>Special Offers</Text>\n//           <Text style={styles.promoDiscount}>40% Off Prices</Text>\n//         </View>\n//       </View>\n\n//       <FlatList\n//         data={products}\n//         numColumns={2}\n//         keyExtractor={(item) => item.id.toString()}\n//         renderItem={({ item }) => (\n//           <View style={styles.productCard}>\n//             <Image source={{ uri: item.image }} style={styles.productImage} />\n//             <Text style={styles.productPrice}>{item.price}</Text>\n//             <Text style={styles.productName}>{item.name}</Text>\n//           </View>\n//         )}\n//         contentContainerStyle={styles.productContainer}\n//       />\n//     </View>\n//   );\n// };\n\n// export default CollectionPageVTwo;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#FFFFFF',\n//     paddingHorizontal: 10,\n//   },\n//   categoryContainer: {\n//     paddingVertical: 10,\n//   },\n//   categoryButton: {\n//     marginRight: 15,\n//     paddingVertical: 5,\n//     paddingHorizontal: 10,\n//     borderWidth: 1,\n//     borderColor: '#000000',\n//     borderRadius: 15,\n//   },\n//   categoryText: {\n//     fontSize: 14,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   promoContainer: {\n//     marginTop: 20,\n//     marginBottom: 20,\n//     borderRadius: 10,\n//     overflow: 'hidden',\n//     backgroundColor: '#F5F5F5',\n//   },\n//   promoImage: {\n//     width: '100%',\n//     height: 120,\n//     resizeMode: 'cover',\n//   },\n//   promoTextContainer: {\n//     position: 'absolute',\n//     top: 10,\n//     left: 15,\n//   },\n//   promoTitle: {\n//     fontSize: 20,\n//     fontWeight: 'bold',\n//     color: '#333333',\n//   },\n//   promoSubtitle: {\n//     fontSize: 14,\n//     color: '#666666',\n//     marginTop: 5,\n//   },\n//   promoDiscount: {\n//     fontSize: 16,\n//     color: '#FF6347',\n//     marginTop: 5,\n//   },\n//   productContainer: {\n//     paddingBottom: 20,\n//   },\n//   productCard: {\n//     flex: 1,\n//     margin: 10,\n//     borderRadius: 10,\n//     backgroundColor: '#FFFFFF',\n//     padding: 10,\n//     alignItems: 'center',\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//   },\n//   productImage: {\n//     width: width / 2 - 40,\n//     height: 100,\n//     resizeMode: 'cover',\n//     borderRadius: 10,\n//     marginBottom: 10,\n//   },\n//   productPrice: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   productName: {\n//     fontSize: 14,\n//     color: '#333333',\n//     marginTop: 5,\n//   },\n// });\n","import { Button, Image, StyleSheet, Text, TextInput, View, Alert , Modal} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { router, SplashScreen, Stack, useNavigation, useRouter } from 'expo-router';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { UserProps } from '@/models/UserProps';\nimport { generateUUID } from '@/hooks/generateUUID';\n\nconst LoginComponentOne = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { onLogin, onRegister, onLogout , authState } = useAuth();\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigation = useNavigation();\n  const [openModal , setOpenModal] = useState(false)\n\n\n\n\n  const showAlert = (message: string) => Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        // Wrap navigation.goBack in a try-catch block\n        try {\n        router.replace('/home')\n\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: '',\n      onboardingQ1: '',\n      onboardingQ2: '',\n      onboardingQ3: '',\n      onboardingQ4: '',\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: '',\n      active: false,\n      role: '',\n      birthday: '',\n      todo_completed: false,\n      tableName: '',\n      username: '',\n      phone_number: '',\n      gender: '',\n      profile_image: '',\n      address_city: '',\n      address_state: '',\n      location_history: [],\n      current_notification: '',\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: '',\n      payment_due_day: '',\n      payment_monthly_amount: 0,\n      device_id: '',\n      device_os_version: '',\n      device_model: '',\n      device_ip_address: '',\n      device_battery_level: '',\n      device_battery_statue: '',\n      device_network_connectio_type: '',\n      loyalty_date: '',\n      payment_history_total: 0,\n      subscription_id: '',\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: '',\n      owner_notify_arn: ''\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        // Call the loginAction after successful registration\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    \n    // <Modal visible={openModal} >\n    <View style={styles.container}>\n            <Stack.Screen  options={{ title: 'Login'  }}  />\n\n      {/* <Modal visible={openModal} transparent={true} animationType='fade' > */}\n      <View style={styles.imgContainer}>\n        <Image source={{ uri: 'https://appsformankind-assets.s3.amazonaws.com/Products/Oak_and_Ivy/Furniture_8.jpg' }} style={styles.img} />\n      </View>\n      <View style={styles.form}>\n        <TextInput style={styles.input} placeholder=\"Name\" onChangeText={setName} value={name} />\n        <TextInput style={styles.input} placeholder=\"Email\" onChangeText={setEmail} value={email} />\n        <TextInput style={styles.input} placeholder=\"Password\" secureTextEntry onChangeText={setPassword} value={password} />\n        <Button onPress={loginAction} title=\"Sign in\" />\n        <Button onPress={registerAction} title=\"Create Account\" />\n        <Button onPress={onLogout} title=\"Logout\" />\n        {/* <Text>{authState?.authenticated ? \"TRUE\": \"FALSE\"}</Text> */}\n\n      </View>\n      {/* </Modal> */}\n    </View>\n   \n    \n  );\n};\n\nexport default LoginComponentOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    width: '100%',\n  },\n  imgContainer: {\n    marginLeft: 8,\n    height: 200,\n    width: 200,\n    borderRadius: 6,\n    paddingTop: 30,\n  },\n  img: {\n    height: 200,\n    width: 200,\n    borderRadius: 100,\n  },\n  form: {\n    paddingTop: 50,\n    gap: 10,\n    width: '60%',\n  },\n  input: {\n    height: 44,\n    borderWidth: 1,\n    borderRadius: 4,\n    padding: 10,\n    backgroundColor: \"#fff\",\n  },\n});\n\n\n\n\n\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Dimensions,\n  StyleSheet,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { COLORS } from \"@/utils/theme\";\nimport { getStore } from \"@/api/storeApi\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport { StoreModelProps } from \"@/models/StoreModelProps\";\nimport useFetchObject from \"@/hooks/useFetchObject\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { router } from \"expo-router\";\n\nconst { width } = Dimensions.get(\"window\");\n\n\nconst UserLoginTextFields = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n  const { onLogin, onRegister, onLogout, authState } = useAuth();\n  // const { data: store } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id))\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/home\");\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n    \n  return (\n    <View>\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Enter your email\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setEmail}\n              value={email}\n              style={styles.input}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Enter your password\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setPassword}\n              value={password}\n              style={styles.input}\n              secureTextEntry={!showPassword} // Ensure this is set to false\n            />\n            <Ionicons name=\"eye-outline\" size={20} color={COLORS.darkGray} />\n          </View>\n\n          <TouchableOpacity>\n            <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.loginButton} onPress={loginAction}>\n            <Text style={styles.loginButtonText}>Login</Text>\n          </TouchableOpacity>\n        </View>\n  )\n}\n\nexport default UserLoginTextFields\n\n\nconst styles = StyleSheet.create({\n    container: {\n      paddingHorizontal: 20,\n      paddingTop: 20,\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n    },\n    logo: {\n      width: 80,\n      height: 80,\n      marginTop: 50,\n      borderRadius: 13,\n    },\n    appName: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n      color: COLORS.primary,\n      marginTop: 10,\n    },\n    welcomeText: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n      color: COLORS.darkGray,\n      marginTop: 20,\n    },\n    descriptionText: {\n      fontSize: 14,\n      color: COLORS.darkGray,\n      textAlign: \"center\",\n      marginVertical: 10,\n    },\n    tabContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n    },\n    tab: {\n      flex: 1,\n      paddingBottom: 5,\n      alignItems: \"center\",\n    },\n    activeTab: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.primary,\n    },\n    tabText: {\n      fontSize: 16,\n      color: COLORS.darkGray,\n    },\n    activeTabText: {\n      color: COLORS.primary,\n    },\n    inputContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: COLORS.lightGray,\n      padding: 15,\n      borderRadius: 5,\n      marginVertical: 10,\n      width: width - 40,\n    },\n    input: {\n      flex: 1,\n      marginLeft: 10,\n      color: COLORS.darkGray,\n    },\n    forgotPasswordText: {\n      alignSelf: \"flex-end\",\n      color: COLORS.primary,\n      marginTop: 10,\n      marginBottom: 20,\n    },\n    loginButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n    },\n    signupButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n      marginTop: 20,\n    },\n    loginButtonText: {\n      fontSize: 18,\n      color: COLORS.white,\n      fontWeight: \"bold\",\n    },\n    termsText: {\n      fontSize: 12,\n      color: COLORS.darkGray,\n      textAlign: \"left\",\n      marginLeft: 10,\n      marginRight: 20,\n    },\n    checkboxContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginVertical: 10,\n    },\n    passwordCriteria: {\n      color: COLORS.darkGray,\n      fontSize: 14,\n      marginTop: 5,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n  });\n  \n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { UserProps } from \"@/models/UserProps\";\nimport { generateUUID } from \"@/hooks/generateUUID\";\nimport { router } from \"expo-router\";\nimport { COLORS } from \"@/utils/theme\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport useFetchObject from \"@/hooks/useFetchObject\";\nimport { StoreModelProps } from \"@/models/StoreModelProps\";\nimport { getStore } from \"@/api/storeApi\";\nimport UserLoginTextFields from \"@/components/views/UserLoginTextFields\";\n// import UserRegisterTextFields from \"@/components/views/UserRegisterTextFields\";\n\nconst { width } = Dimensions.get(\"window\");\nconst UserRegisterTextFields = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  \n    const [activeTabIsLogin, setActiveTabIsLogin] = useState(false);\n    // const { data: store } = useFetchObject<StoreModelProps>(() =>\n    //   getStore(CONSTANTS.store_id)\n    // );\n    const { onLogin, onRegister, onLogout, authState } = useAuth();\n\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/(tabs)\");\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: \"\",\n      onboardingQ1: \"\",\n      onboardingQ2: \"\",\n      onboardingQ3: \"\",\n      onboardingQ4: \"\",\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: \"\",\n      active: false,\n      role: \"\",\n      birthday: \"\",\n      todo_completed: false,\n      tableName: \"\",\n      username: \"\",\n      phone_number: \"\",\n      gender: \"\",\n      profile_image: \"\",\n      address_city: \"\",\n      address_state: \"\",\n      location_history: [],\n      current_notification: \"\",\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: \"\",\n      payment_due_day: \"\",\n      payment_monthly_amount: 0,\n      device_id: \"\",\n      device_os_version: \"\",\n      device_model: \"\",\n      device_ip_address: \"\",\n      device_battery_level: \"\",\n      device_battery_statue: \"\",\n      device_network_connectio_type: \"\",\n      loyalty_date: \"\",\n      payment_history_total: 0,\n      subscription_id: \"\",\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: \"\",\n      owner_notify_arn: \"\",\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    <View>\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"person-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Your name\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setName}\n              value={name}\n              style={styles.input}\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Enter your email\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setEmail}\n              value={email}\n              style={styles.input}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Enter your password\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setPassword}\n              value={password}\n              style={styles.input}\n              secureTextEntry={!showPassword}\n            />\n            <TouchableOpacity\n              onPress={() => setShowPassword((prevState) => !prevState)}\n            >\n              <Ionicons\n                name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n                size={20}\n                color={COLORS.darkGray}\n              />\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Confirm your password\"\n              onChangeText={setConfirmedPassword}\n              value={confirmedpassword}\n              style={styles.input}\n              secureTextEntry={!showConfirmPassword} // Ensure this is set to false\n            />\n\n            <TouchableOpacity\n              onPress={() => setShowConfirmPassword((prevState) => !prevState)}\n            >\n              <Ionicons\n                name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n                size={20}\n                color={COLORS.darkGray}\n              />\n            </TouchableOpacity>\n          </View>\n\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            At least 8 characters\n          </Text>\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            At least 1 number\n          </Text>\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            Both upper and lower case letters\n          </Text>\n\n          <TouchableOpacity\n            style={styles.signupButton}\n            onPress={registerAction}\n          >\n            <Text style={styles.loginButtonText}>Sign Up</Text>\n          </TouchableOpacity>\n        </View>\n  )\n}\n\nexport default UserRegisterTextFields\n\n\nconst styles = StyleSheet.create({\n    container: {\n      paddingHorizontal: 20,\n      paddingTop: 20,\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n    },\n    logo: {\n      width: 80,\n      height: 80,\n      marginTop: 50,\n      borderRadius: 13,\n    },\n    appName: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n      color: COLORS.primary,\n      marginTop: 10,\n    },\n    welcomeText: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n      color: COLORS.darkGray,\n      marginTop: 20,\n    },\n    descriptionText: {\n      fontSize: 14,\n      color: COLORS.darkGray,\n      textAlign: \"center\",\n      marginVertical: 10,\n    },\n    tabContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n    },\n    tab: {\n      flex: 1,\n      paddingBottom: 5,\n      alignItems: \"center\",\n    },\n    activeTab: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.primary,\n    },\n    tabText: {\n      fontSize: 16,\n      color: COLORS.darkGray,\n    },\n    activeTabText: {\n      color: COLORS.primary,\n    },\n    inputContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: COLORS.lightGray,\n      padding: 15,\n      borderRadius: 5,\n      marginVertical: 10,\n      width: width - 40,\n    },\n    input: {\n      flex: 1,\n      marginLeft: 10,\n      color: COLORS.darkGray,\n    },\n    forgotPasswordText: {\n      alignSelf: \"flex-end\",\n      color: COLORS.primary,\n      marginTop: 10,\n      marginBottom: 20,\n    },\n    loginButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n    },\n    signupButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n      marginTop: 20,\n    },\n    loginButtonText: {\n      fontSize: 18,\n      color: COLORS.white,\n      fontWeight: \"bold\",\n    },\n    termsText: {\n      fontSize: 12,\n      color: COLORS.darkGray,\n      textAlign: \"left\",\n      marginLeft: 10,\n      marginRight: 20,\n    },\n    checkboxContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginVertical: 10,\n    },\n    passwordCriteria: {\n      color: COLORS.darkGray,\n      fontSize: 14,\n      marginTop: 5,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n  });\n  ","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { UserProps } from \"@/models/UserProps\";\nimport { generateUUID } from \"@/hooks/generateUUID\";\nimport { router } from \"expo-router\";\nimport { COLORS } from \"@/utils/theme\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport useFetchObject from \"@/hooks/useFetchObject\";\nimport { StoreModelProps } from \"@/models/StoreModelProps\";\nimport { getStore } from \"@/api/storeApi\";\nimport UserLoginTextFields from \"@/components/views/UserLoginTextFields\";\nimport UserRegisterTextFields from \"@/components/views/UserRegisterTextFields\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst LoginComponentTwo = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n  const { onLogin, onRegister, onLogout, authState } = useAuth();\n  // const { data: store } = useFetchObject<StoreModelProps>(() =>\n  //   getStore(CONSTANTS.store_id)\n  // );\n\n  const { store } = useClientStore()\n\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/home\");\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: \"\",\n      onboardingQ1: \"\",\n      onboardingQ2: \"\",\n      onboardingQ3: \"\",\n      onboardingQ4: \"\",\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: \"\",\n      active: false,\n      role: \"\",\n      birthday: \"\",\n      todo_completed: false,\n      tableName: \"\",\n      username: \"\",\n      phone_number: \"\",\n      gender: \"\",\n      profile_image: \"\",\n      address_city: \"\",\n      address_state: \"\",\n      location_history: [],\n      current_notification: \"\",\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: \"\",\n      payment_due_day: \"\",\n      payment_monthly_amount: 0,\n      device_id: \"\",\n      device_os_version: \"\",\n      device_model: \"\",\n      device_ip_address: \"\",\n      device_battery_level: \"\",\n      device_battery_statue: \"\",\n      device_network_connectio_type: \"\",\n      loyalty_date: \"\",\n      payment_history_total: 0,\n      subscription_id: \"\",\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: \"\",\n      owner_notify_arn: \"\",\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n        }}\n        style={styles.logo}\n      />\n      <Text style={styles.welcomeText}>\n        Welcome to {store?.store_name ?? \"\"}\n      </Text>\n      <Text style={styles.descriptionText}>\n        Sign up or login below to manage your project, task, and productivity\n      </Text>\n\n      <View style={styles.tabContainer}>\n        <TouchableOpacity\n          style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(true)}\n        >\n          <Text\n            style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n          >\n            Login\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(false)}\n        >\n          <Text\n            style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n          >\n            Sign Up\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {activeTabIsLogin ? (\n       <UserLoginTextFields />\n      ) : (\n        <UserRegisterTextFields /> \n      )}\n    </View>\n  );\n};\n\nexport default LoginComponentTwo;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    backgroundColor: COLORS.white,\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginTop: 50,\n    borderRadius: 13,\n  },\n  appName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: COLORS.primary,\n    marginTop: 10,\n  },\n  welcomeText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: COLORS.darkGray,\n    marginTop: 20,\n  },\n  descriptionText: {\n    fontSize: 14,\n    color: COLORS.darkGray,\n    textAlign: \"center\",\n    marginVertical: 10,\n  },\n  tabContainer: {\n    flexDirection: \"row\",\n    marginVertical: 20,\n  },\n  tab: {\n    flex: 1,\n    paddingBottom: 5,\n    alignItems: \"center\",\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: COLORS.darkGray,\n  },\n  activeTabText: {\n    color: COLORS.primary,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.lightGray,\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 10,\n    width: width - 40,\n  },\n  input: {\n    flex: 1,\n    marginLeft: 10,\n    color: COLORS.darkGray,\n  },\n  forgotPasswordText: {\n    alignSelf: \"flex-end\",\n    color: COLORS.primary,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n  },\n  signupButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: COLORS.white,\n    fontWeight: \"bold\",\n  },\n  termsText: {\n    fontSize: 12,\n    color: COLORS.darkGray,\n    textAlign: \"left\",\n    marginLeft: 10,\n    marginRight: 20,\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 10,\n  },\n  passwordCriteria: {\n    color: COLORS.darkGray,\n    fontSize: 14,\n    marginTop: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import {\n//   View,\n//   Text,\n//   TextInput,\n//   TouchableOpacity,\n//   StyleSheet,\n//   Image,\n//   Dimensions,\n//   Alert,\n// } from \"react-native\";\n// import { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\n// import { useAuth } from \"@/contexts/AuthContext\";\n// import { UserProps } from \"@/models/UserProps\";\n// import { generateUUID } from \"@/hooks/generateUUID\";\n// import { router } from \"expo-router\";\n// import { COLORS } from \"@/utils/theme\";\n// import { CONSTANTS } from \"@/utils/constants\";\n// import useFetchObject from \"@/hooks/useFetchObject\";\n// import { StoreModelProps } from \"@/models/StoreModelProps\";\n// import { getStore } from \"@/api/storeApi\";\n\n// const { width } = Dimensions.get(\"window\");\n\n// const LoginComponentTwo = () => {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n//   const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n//   const { onLogin, onRegister, onLogout, authState } = useAuth();\n//   const { data: store } = useFetchObject<StoreModelProps>(() =>\n//     getStore(CONSTANTS.store_id)\n//   );\n\n//   const showAlert = (message: string) =>\n//     Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n//   const loginAction = async () => {\n//     try {\n//       const result = await onLogin!(email, password);\n//       if (result.error) {\n//         showAlert(result.msg);\n//       } else {\n//         console.log(\"Login successful\");\n//         try {\n//           router.replace(\"/home\");\n//         } catch (navError) {\n//           console.error(\"Navigation error:\", navError);\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Login error:\", error);\n//       showAlert(\"Login failed. Please try again.\");\n//     }\n//   };\n\n//   const registerAction = async () => {\n//     const user: UserProps = {\n//       id: generateUUID(8),\n//       name,\n//       email,\n//       password,\n//       store_ids: [],\n//       store_owner_id: \"\",\n//       onboardingQ1: \"\",\n//       onboardingQ2: \"\",\n//       onboardingQ3: \"\",\n//       onboardingQ4: \"\",\n//       orders: [],\n//       favoriteItems: [],\n//       cart: [],\n//       affiliate_link: \"\",\n//       active: false,\n//       role: \"\",\n//       birthday: \"\",\n//       todo_completed: false,\n//       tableName: \"\",\n//       username: \"\",\n//       phone_number: \"\",\n//       gender: \"\",\n//       profile_image: \"\",\n//       address_city: \"\",\n//       address_state: \"\",\n//       location_history: [],\n//       current_notification: \"\",\n//       notifications: [],\n//       payment_due: 0,\n//       payment_due_date: \"\",\n//       payment_due_day: \"\",\n//       payment_monthly_amount: 0,\n//       device_id: \"\",\n//       device_os_version: \"\",\n//       device_model: \"\",\n//       device_ip_address: \"\",\n//       device_battery_level: \"\",\n//       device_battery_statue: \"\",\n//       device_network_connectio_type: \"\",\n//       loyalty_date: \"\",\n//       payment_history_total: 0,\n//       subscription_id: \"\",\n//       paid_subscriber: false,\n//       newsletter_subscriber: false,\n//       notification_subscriber: false,\n//       left_review: false,\n//       review_stars: [],\n//       reviews: [],\n//       testimonials: [],\n//       notify_arn: \"\",\n//       owner_notify_arn: \"\",\n//     };\n\n//     try {\n//       const result = await onRegister!(user);\n//       if (result.error) {\n//         showAlert(result);\n//         return;\n//       } else {\n//         console.log(\"Registration successful\");\n//         loginAction();\n//       }\n//     } catch (error) {\n//       console.error(\"Registration error:\", error);\n//       showAlert(\"Registration failed. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Image\n//         source={{\n//           uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n//         }}\n//         style={styles.logo}\n//       />\n//       <Text style={styles.welcomeText}>\n//         Welcome to {store?.store_name ?? \"\"}\n//       </Text>\n//       <Text style={styles.descriptionText}>\n//         Sign up or login below to manage your project, task, and productivity\n//       </Text>\n\n//       <View style={styles.tabContainer}>\n//         <TouchableOpacity\n//           style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n//           onPress={() => setActiveTabIsLogin(true)}\n//         >\n//           <Text\n//             style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n//           >\n//             Login\n//           </Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity\n//           style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n//           onPress={() => setActiveTabIsLogin(false)}\n//         >\n//           <Text\n//             style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n//           >\n//             Sign Up\n//           </Text>\n//         </TouchableOpacity>\n//       </View>\n\n//       {activeTabIsLogin ? (\n//         <View>\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Enter your email\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setEmail}\n//               value={email}\n//               style={styles.input}\n//               keyboardType=\"email-address\"\n//               autoCapitalize=\"none\"\n//               autoComplete=\"email\"\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Enter your password\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setPassword}\n//               value={password}\n//               style={styles.input}\n//               secureTextEntry={!showPassword} // Ensure this is set to false\n//             />\n//             <Ionicons name=\"eye-outline\" size={20} color={COLORS.darkGray} />\n//           </View>\n\n//           <TouchableOpacity>\n//             <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n//           </TouchableOpacity>\n\n//           <TouchableOpacity style={styles.loginButton} onPress={loginAction}>\n//             <Text style={styles.loginButtonText}>Login</Text>\n//           </TouchableOpacity>\n//         </View>\n//       ) : (\n//         <View>\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"person-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Your name\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setName}\n//               value={name}\n//               style={styles.input}\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Enter your email\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setEmail}\n//               value={email}\n//               style={styles.input}\n//               keyboardType=\"email-address\"\n//               autoCapitalize=\"none\"\n//               autoComplete=\"email\"\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Enter your password\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setPassword}\n//               value={password}\n//               style={styles.input}\n//               secureTextEntry={!showPassword}\n//             />\n//             <TouchableOpacity\n//               onPress={() => setShowPassword((prevState) => !prevState)}\n//             >\n//               <Ionicons\n//                 name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n//                 size={20}\n//                 color={COLORS.darkGray}\n//               />\n//             </TouchableOpacity>\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Confirm your password\"\n//               onChangeText={setConfirmedPassword}\n//               value={confirmedpassword}\n//               style={styles.input}\n//               secureTextEntry={!showConfirmPassword} // Ensure this is set to false\n//             />\n\n//             <TouchableOpacity\n//               onPress={() => setShowConfirmPassword((prevState) => !prevState)}\n//             >\n//               <Ionicons\n//                 name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n//                 size={20}\n//                 color={COLORS.darkGray}\n//               />\n//             </TouchableOpacity>\n//           </View>\n\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             At least 8 characters\n//           </Text>\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             At least 1 number\n//           </Text>\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             Both upper and lower case letters\n//           </Text>\n\n//           <TouchableOpacity\n//             style={styles.signupButton}\n//             onPress={registerAction}\n//           >\n//             <Text style={styles.loginButtonText}>Sign Up</Text>\n//           </TouchableOpacity>\n//         </View>\n//       )}\n//     </View>\n//   );\n// };\n\n// export default LoginComponentTwo;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     paddingHorizontal: 20,\n//     paddingTop: 20,\n//     backgroundColor: COLORS.white,\n//     alignItems: \"center\",\n//   },\n//   logo: {\n//     width: 80,\n//     height: 80,\n//     marginTop: 50,\n//     borderRadius: 13,\n//   },\n//   appName: {\n//     fontSize: 24,\n//     fontWeight: \"bold\",\n//     color: COLORS.primary,\n//     marginTop: 10,\n//   },\n//   welcomeText: {\n//     fontSize: 20,\n//     fontWeight: \"bold\",\n//     color: COLORS.darkGray,\n//     marginTop: 20,\n//   },\n//   descriptionText: {\n//     fontSize: 14,\n//     color: COLORS.darkGray,\n//     textAlign: \"center\",\n//     marginVertical: 10,\n//   },\n//   tabContainer: {\n//     flexDirection: \"row\",\n//     marginVertical: 20,\n//   },\n//   tab: {\n//     flex: 1,\n//     paddingBottom: 5,\n//     alignItems: \"center\",\n//   },\n//   activeTab: {\n//     borderBottomWidth: 2,\n//     borderBottomColor: COLORS.primary,\n//   },\n//   tabText: {\n//     fontSize: 16,\n//     color: COLORS.darkGray,\n//   },\n//   activeTabText: {\n//     color: COLORS.primary,\n//   },\n//   inputContainer: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     backgroundColor: COLORS.lightGray,\n//     padding: 15,\n//     borderRadius: 5,\n//     marginVertical: 10,\n//     width: width - 40,\n//   },\n//   input: {\n//     flex: 1,\n//     marginLeft: 10,\n//     color: COLORS.darkGray,\n//   },\n//   forgotPasswordText: {\n//     alignSelf: \"flex-end\",\n//     color: COLORS.primary,\n//     marginTop: 10,\n//     marginBottom: 20,\n//   },\n//   loginButton: {\n//     backgroundColor: COLORS.primary,\n//     padding: 15,\n//     borderRadius: 5,\n//     width: width - 40,\n//     alignItems: \"center\",\n//   },\n//   signupButton: {\n//     backgroundColor: COLORS.primary,\n//     padding: 15,\n//     borderRadius: 5,\n//     width: width - 40,\n//     alignItems: \"center\",\n//     marginTop: 20,\n//   },\n//   loginButtonText: {\n//     fontSize: 18,\n//     color: COLORS.white,\n//     fontWeight: \"bold\",\n//   },\n//   termsText: {\n//     fontSize: 12,\n//     color: COLORS.darkGray,\n//     textAlign: \"left\",\n//     marginLeft: 10,\n//     marginRight: 20,\n//   },\n//   checkboxContainer: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     marginVertical: 10,\n//   },\n//   passwordCriteria: {\n//     color: COLORS.darkGray,\n//     fontSize: 14,\n//     marginTop: 5,\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//   },\n// });\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst OnboardingPageThree = () => {\n  return (\n    <View>\n      <Text>OnboardingPageThree</Text>\n    </View>\n  )\n}\n\nexport default OnboardingPageThree\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst OnboardingPageTwo = () => {\n  return (\n    <View>\n      <Text>OnboardingPageTwo</Text>\n    </View>\n  )\n}\n\nexport default OnboardingPageTwo\n\nconst styles = StyleSheet.create({})","import React, { useRef, useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { View as MotiView } from 'moti';\nimport {\n  SafeAreaView,\n  Image,\n  StyleSheet,\n  FlatList,\n  View,\n  Text,\n  Dimensions,\n  NativeSyntheticEvent,\n  NativeScrollEvent,\n  ListRenderItemInfo,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport { useRouter } from 'expo-router'; \nimport { useAuth } from '@/contexts/AuthContext';\n\nconst { width, height } = Dimensions.get('window');\n\nconst COLORS = { primary: '#282534', white: '#fff' };\n\ninterface SlideData {\n  id: number;\n  image: string;\n  title: string;\n  subtitle: string;\n  imageFrom: any;\n  imageTo: any;  \n  imageTransition: any;\n  textFrom: any;\n  textTo: any;\n  textTransition: any;\n}\n\nconst initialSlides: SlideData[] = [\n  {\n    id: 1,\n    image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/pitch-meeting-2.png\",\n    title: 'Best Digital Solution',\n    subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    imageFrom: { opacity: 0, translateY: 50, scale: 0.85 },\n    imageTo: { opacity: 1, translateY: 0, scale: 1 },\n    imageTransition: {\n      type: 'timing',\n      duration: 600,\n      delay: 300,\n    },\n    textFrom: { opacity: 0, translateX: width }, // Start off-screen to the right\n    textTo: { opacity: 1, translateX: 0 },\n    textTransition: { type: 'timing', duration: 600, delay: 500 },\n  },\n  {\n    id: 2,\n    image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/online-shopping-2.png\",\n    title: 'Achieve Your Goals',\n    subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    imageFrom: { opacity: 0, translateY: 50, scale: 0.85 },\n    imageTo: { opacity: 1, translateY: 0, scale: 1 },\n    imageTransition: {\n      type: 'timing',\n      duration: 600,\n      delay: 300,\n    },\n    textFrom: { opacity: 0, translateX: width }, // Start off-screen to the right\n    textTo: { opacity: 1, translateX: 0 },\n    textTransition: { type: 'timing', duration: 600, delay: 500 },\n  },\n  {\n    id: 3,\n    image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/signin.png\",\n    title: 'Increase Your Value',\n    subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    imageFrom: { opacity: 0, translateY: 50, scale: 0.85 },\n    imageTo: { opacity: 1, translateY: 0, scale: 1 },\n    imageTransition: {\n      type: 'timing',\n      duration: 600,\n      delay: 300,\n    },\n    textFrom: { opacity: 0, translateX: width }, // Start off-screen to the right\n    textTo: { opacity: 1, translateX: 0 },\n    textTransition: { type: 'timing', duration: 600, delay: 500 },\n  },\n];\n\nconst Slide: React.FC<{ item: SlideData; resetKey: number }> = ({ item, resetKey }) => {\n  return (\n\n    \n    <View style={{ alignItems: 'center', width }}>\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n      \n      <MotiView\n        key={`${resetKey}-image`} // Force re-render to reset animation\n        from={item.imageFrom}\n        animate={item.imageTo}\n        transition={item.imageTransition}\n      >\n        <Image source={{ uri: item.image }} style={styles.image} />\n      </MotiView>\n\n      <MotiView\n        key={`${resetKey}-text`} // Force re-render to reset animation\n        from={item.textFrom}\n        animate={item.textTo}\n        transition={item.textTransition}\n      >\n        <View style={styles.textContainer}>\n          <Text style={styles.title}>{item.title}</Text>\n          <Text style={styles.subtitle}>{item.subtitle}</Text>\n        </View>\n      </MotiView>\n    </View>\n  );\n};\n\nconst OnboardingScreen: React.FC = () => {\n  const router = useRouter();\n  const [currentSlideIndex, setCurrentSlideIndex] = useState<number>(0);\n  const [resetKey, setResetKey] = useState<number>(0);\n  const ref = useRef<FlatList<SlideData>>(null);\n  const { authState } = useAuth();\n  const [slides, setSlides] = useState<SlideData[]>(initialSlides);\n\n  const updateCurrentSlideIndex = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n    const contentOffsetX = e.nativeEvent.contentOffset.x;\n    const currentIndex = Math.round(contentOffsetX / width);\n    setCurrentSlideIndex(currentIndex);\n    setResetKey(prevKey => prevKey + 1); // Force reset on slide change\n  };\n\n  const goToNextSlide = () => {\n    const nextSlideIndex = currentSlideIndex + 1;\n    if (nextSlideIndex < slides.length) {\n      const offset = nextSlideIndex * width;\n      ref.current?.scrollToOffset({ offset });\n      setCurrentSlideIndex(nextSlideIndex);\n      setResetKey(prevKey => prevKey + 1); // Force reset on slide change\n    }\n  };\n\n  const skip = () => {\n    const lastSlideIndex = slides.length - 1;\n    const offset = lastSlideIndex * width;\n    ref.current?.scrollToOffset({ offset });\n    setCurrentSlideIndex(lastSlideIndex);\n    setResetKey(prevKey => prevKey + 1); // Force reset on skip\n  };\n\n  const Footer: React.FC = () => {\n    return (\n      <View style={styles.footer}>\n        <View style={styles.indicatorContainer}>\n          {slides.map((_, index) => (\n            <View\n              key={index}\n              style={[\n                styles.indicator,\n                currentSlideIndex === index && {\n                  backgroundColor: COLORS.white,\n                  width: 25,\n                },\n              ]}\n            />\n          ))}\n        </View>\n\n        <View style={styles.buttonContainer}>\n          {currentSlideIndex === 2 ? (\n            <TouchableOpacity\n              style={styles.btn}\n              onPress={() => router.replace('/login')}\n            >\n              <Text style={styles.btnText}>GET STARTED</Text>\n            </TouchableOpacity>\n          ) : (\n            <View style={styles.navigationButtons}>\n              <TouchableOpacity\n                activeOpacity={0.8}\n                style={[styles.btnSkipAndNext, styles.skipButton]}\n                onPress={skip}\n              >\n                <Text style={styles.skipText}>SKIP</Text>\n              </TouchableOpacity>\n              <View style={styles.buttonSpacing} />\n              <TouchableOpacity\n                activeOpacity={0.8}\n                onPress={goToNextSlide}\n                style={styles.btnSkipAndNext}\n              >\n                <Text style={styles.btnText}>NEXT</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar backgroundColor={COLORS.primary} />\n      <FlatList\n        ref={ref}\n        data={slides}\n        horizontal\n        pagingEnabled\n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={styles.flatListContent}\n        renderItem={({ item }: ListRenderItemInfo<SlideData>) => \n          item.id === currentSlideIndex + 1 ? (\n            <Slide item={item} resetKey={resetKey} />\n          ) : (\n            <View/>\n          )\n        }\n        keyExtractor={(item) => item.id.toString()}\n        onMomentumScrollEnd={updateCurrentSlideIndex}\n      />\n      <Footer />\n    </SafeAreaView>\n  );\n}  \n\nexport default OnboardingScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.primary,\n  },\n  flatListContent: {\n    // height: height * 0.75,\n  },\n  image: {\n    marginTop: 100,\n    height: 300,\n    width: width * 0.9,\n    resizeMode: 'contain',\n  },\n  textContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  title: {\n    color: COLORS.white,\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginTop: 10,\n    textAlign: 'center',\n  },\n  subtitle: {\n    color: COLORS.white,\n    fontSize: 14,\n    marginTop: 5,\n    maxWidth: '80%',\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  footer: {\n    height: height * 0.25,\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n  },\n  indicatorContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  indicator: {\n    height: 2.5,\n    width: 10,\n    backgroundColor: 'grey',\n    marginHorizontal: 3,\n    borderRadius: 2,\n  },\n  buttonContainer: {\n    marginBottom: 20,\n  },\n  navigationButtons: {\n    flexDirection: 'row',\n  },\n  skipButton: {\n    borderColor: COLORS.white,\n    borderWidth: 1,\n    backgroundColor: 'transparent',\n  },\n  buttonSpacing: {\n    width: 15,\n  },\n  btnSkipAndNext: {\n    flex: 1,\n    height: 50,\n    borderRadius: 5,\n    backgroundColor: COLORS.white,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  btn: {\n    height: 50,\n    borderRadius: 5,\n    backgroundColor: COLORS.white,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  btnText: {\n    fontWeight: 'bold',\n    fontSize: 15,\n  },\n  skipText: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    color: COLORS.white,\n  },\n});\n\n\n\n\n//// works\n// import React, { useRef, useState, useEffect } from 'react';\n// import { StatusBar } from 'expo-status-bar';\n// import { View as MotiView } from 'moti';\n// import {\n//   SafeAreaView,\n//   Image,\n//   StyleSheet,\n//   FlatList,\n//   View,\n//   Text,\n//   Platform,\n//   TouchableOpacity,\n//   Dimensions,\n//   NativeSyntheticEvent,\n//   NativeScrollEvent,\n//   ListRenderItemInfo,\n// } from 'react-native';\n// import { useRouter } from 'expo-router'; \n// import { useAuth } from '@/contexts/AuthContext';\n\n// const { width, height } = Dimensions.get('window');\n\n// const COLORS = { primary: '#282534', white: '#fff' };\n\n// interface SlideData {\n//   id: string;\n//   image: string;\n//   title: string;\n//   subtitle: string;\n//   imageFrom: any,\n//   imageTo: any,  \n//   imageTransition: any,\n\n//   textFrom: any,\n//   textTo: any,\n//   textTransition: any,\n\n\n//   titleFrom: any,\n//   titleTo: any,\n//   titleTransition: any,\n//   subtitleFrom: any,\n//   subtitleTo: any,\n//   subtitleTransition: any,\n\n\n \n// }\n\n// const initialSlides: SlideData[] = [\n//   {\n//     id: '1',\n//     image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/pitch-meeting-2.png\",\n//     title: 'Best Digital Solution',\n//     subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n//     imageFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     imageTo: { opacity: 1, translateY: 0, scale: 1 },\n//     imageTransition: {\n//       type: 'timing',\n//       duration: 600,\n//       delay: 300,\n//     },\n     \n//     textFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     textTo: { opacity: 1, translateY: 0 },\n//     textTransition: { type: 'timing', duration: 500, delay: 600 },\n\n//     titleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     titleTo: undefined,\n//     titleTransition: undefined,\n//     subtitleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     subtitleTo: undefined,\n//     subtitleTransition: undefined,\n//   },\n//   {\n//     id: '2',\n//     image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/online-shopping-2.png\",\n//     title: 'Achieve Your Goals',\n//     subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n//     imageFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     imageTo: { opacity: 1, translateY: 0, scale: 1 },\n//     imageTransition: {\n//       type: 'timing',\n//       duration: 600,\n//       delay: 300,\n//     },\n      \n//     textFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     textTo: { opacity: 1, translateY: 0 },\n//     textTransition: { type: 'timing', duration: 500, delay: 600 },\n\n\n//     titleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     titleTo: undefined,\n//     titleTransition: undefined,\n//     subtitleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     subtitleTo: undefined,\n//     subtitleTransition: undefined,\n//   },\n//   {\n//     id: '3',\n//     image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/signin.png\",\n//     title: 'Increase Your Value',\n//     subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n//     imageFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     imageTo: { opacity: 9, translateY: 0, scale: 1 },\n//     imageTransition: {\n//       type: 'timing',\n//       duration: 600,\n//       delay: 300,\n//     },\n     \n//     textFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     textTo: { opacity: 1, translateY: 0 },\n//     textTransition: { type: 'timing', duration: 500, delay: 600 },\n\n   \n//     titleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     titleTo: undefined,\n//     titleTransition: undefined,\n//     subtitleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     subtitleTo: undefined,\n//     subtitleTransition: undefined,\n//   },\n// ];\n\n// const Slide: React.FC<{ item: SlideData; resetKey: number }> = ({ item, resetKey }) => {\n//   return (\n//     <View style={{ alignItems: 'center', width }}>\n//       <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n      \n//       <MotiView\n//         key={resetKey} // Force re-render to reset animation\n//         from={item.imageFrom}\n//         animate={item.imageTo}\n//         transition={item.imageTransition}\n//       >\n//         <Image source={{ uri: item.image }} style={styles.image} />\n//       </MotiView>\n\n//       <MotiView\n//         key={resetKey + 1} // Force re-render to reset animation\n//         from={{ opacity: 0, translateY: 20 }}\n//         animate={{ opacity: 1, translateY: 0 }}\n//         transition={{ type: 'timing', duration: 500, delay: 600 }}\n//       >\n//         <View style={styles.textContainer}>\n//           <Text style={styles.title}>{item.title}</Text>\n//           <Text style={styles.subtitle}>{item.subtitle}</Text>\n//         </View>\n//       </MotiView>\n//     </View>\n//   );\n// };\n\n// const OnboardingScreen: React.FC = () => {\n//   const router = useRouter();\n//   const [currentSlideIndex, setCurrentSlideIndex] = useState<number>(0);\n//   const [resetKey, setResetKey] = useState<number>(0);\n//   const ref = useRef<FlatList<SlideData>>(null);\n//   const { authState } = useAuth();\n//   const [slides, setSlides] = useState<SlideData[]>(initialSlides);\n\n//   const updateCurrentSlideIndex = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n//     const contentOffsetX = e.nativeEvent.contentOffset.x;\n//     const currentIndex = Math.round(contentOffsetX / width);\n//     setCurrentSlideIndex(currentIndex);\n//     setResetKey(prevKey => prevKey + 1); // Force reset on slide change\n//   };\n\n//   const goToNextSlide = () => {\n//     const nextSlideIndex = currentSlideIndex + 1;\n//     if (nextSlideIndex < slides.length) {\n//       const offset = nextSlideIndex * width;\n//       ref.current?.scrollToOffset({ offset });\n//       setCurrentSlideIndex(nextSlideIndex);\n//       setResetKey(prevKey => prevKey + 1); // Force reset on slide change\n//     }\n//   };\n\n//   const skip = () => {\n//     const lastSlideIndex = slides.length - 1;\n//     const offset = lastSlideIndex * width;\n//     ref.current?.scrollToOffset({ offset });\n//     setCurrentSlideIndex(lastSlideIndex);\n//     setResetKey(prevKey => prevKey + 1); // Force reset on skip\n//   };\n\n//   const Footer: React.FC = () => {\n//     return (\n//       <View style={styles.footer}>\n//         <View style={styles.indicatorContainer}>\n//           {slides.map((_, index) => (\n//             <View\n//               key={index}\n//               style={[\n//                 styles.indicator,\n//                 currentSlideIndex === index && {\n//                   backgroundColor: COLORS.white,\n//                   width: 25,\n//                 },\n//               ]}\n//             />\n//           ))}\n//         </View>\n\n//         <View style={styles.buttonContainer}>\n//           {currentSlideIndex === 2 ? (\n//             <TouchableOpacity\n//               style={styles.btn}\n//               onPress={() => router.replace('/login')}\n//             >\n//               <Text style={styles.btnText}>GET STARTED</Text>\n//             </TouchableOpacity>\n//           ) : (\n//             <View style={styles.navigationButtons}>\n//               <TouchableOpacity\n//                 activeOpacity={0.8}\n//                 style={[styles.btnSkipAndNext, styles.skipButton]}\n//                 onPress={skip}\n//               >\n//                 <Text style={styles.skipText}>SKIP</Text>\n//               </TouchableOpacity>\n//               <View style={styles.buttonSpacing} />\n//               <TouchableOpacity\n//                 activeOpacity={0.8}\n//                 onPress={goToNextSlide}\n//                 style={styles.btnSkipAndNext}\n//               >\n//                 <Text style={styles.btnText}>NEXT</Text>\n//               </TouchableOpacity>\n//             </View>\n//           )}\n//         </View>\n//       </View>\n//     );\n//   };\n\n//   return (\n//     <SafeAreaView style={styles.container}>\n//       <StatusBar backgroundColor={COLORS.primary} />\n//       <FlatList\n//         ref={ref}\n//         data={slides}\n//         horizontal\n//         pagingEnabled\n//         showsHorizontalScrollIndicator={false}\n//         contentContainerStyle={styles.flatListContent}\n//         renderItem={({ item }: ListRenderItemInfo<SlideData>) => <Slide item={item} resetKey={resetKey} />}\n//         keyExtractor={(item) => item.id}\n//         onMomentumScrollEnd={updateCurrentSlideIndex}\n//       />\n//       <Footer />\n//     </SafeAreaView>\n//   );\n// };\n\n// export default OnboardingScreen;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: COLORS.primary,\n//   },\n//   flatListContent: {\n//     // height: height * 0.75,\n//   },\n//   image: {\n//     marginTop: 100,\n//     height: 300,\n//     width: width * 0.9,\n//     resizeMode: 'contain',\n//   },\n//   textContainer: {\n//     alignItems: 'center',\n//     marginTop: 10,\n//   },\n//   title: {\n//     color: COLORS.white,\n//     fontSize: 22,\n//     fontWeight: 'bold',\n//     marginTop: 10,\n//     textAlign: 'center',\n//   },\n//   subtitle: {\n//     color: COLORS.white,\n//     fontSize: 14,\n//     marginTop: 5,\n//     maxWidth: '80%',\n//     textAlign: 'center',\n//     lineHeight: 20,\n//   },\n//   footer: {\n//     height: height * 0.25,\n//     justifyContent: 'space-between',\n//     paddingHorizontal: 20,\n//   },\n//   indicatorContainer: {\n//     flexDirection: 'row',\n//     justifyContent: 'center',\n//     marginTop: 20,\n//   },\n//   indicator: {\n//     height: 2.5,\n//     width: 10,\n//     backgroundColor: 'grey',\n//     marginHorizontal: 3,\n//     borderRadius: 2,\n//   },\n//   buttonContainer: {\n//     marginBottom: 20,\n//   },\n//   navigationButtons: {\n//     flexDirection: 'row',\n//   },\n//   skipButton: {\n//     borderColor: COLORS.white,\n//     borderWidth: 1,\n//     backgroundColor: 'transparent',\n//   },\n//   buttonSpacing: {\n//     width: 15,\n//   },\n//   btnSkipAndNext: {\n//     flex: 1,\n//     height: 50,\n//     borderRadius: 5,\n//     backgroundColor: COLORS.white,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   btn: {\n//     height: 50,\n//     borderRadius: 5,\n//     backgroundColor: COLORS.white,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   btnText: {\n//     fontWeight: 'bold',\n//     fontSize: 15,\n//   },\n//   skipText: {\n//     fontWeight: 'bold',\n//     fontSize: 15,\n//     color: COLORS.white,\n//   },\n// });\n\n\n\n\n","import React from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity, ScrollView } from 'react-native';\nimport { Stack, useLocalSearchParams } from 'expo-router';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { Ionicons } from '@expo/vector-icons';\nimport { MotiView } from 'moti';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n\nconst ProductDetailsPageVOne = () => {\n  const { id } = useLocalSearchParams<{ id: string }>();\n  const { selectedProduct: product } = useClientProduct();\n\n  // if (!selectedProduct) {\n  //   return (\n  //     <View style={styles.container}>\n  //       <Text>Product not found</Text>\n  //     </View>\n  //   );\n  // }\n\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={{ paddingBottom: SIZES.xLarge }}>\n      <Stack.Screen\n        options={{\n          headerTitle: `${product?.name}`,\n        }}\n      />\n\n      <Image\n        source={{ uri: product?.image || 'https://via.placeholder.com/300' }}\n        style={styles.productImage}\n      />\n\n      <MotiView\n        from={{ opacity: 0, translateY: -10 }}\n        animate={{ opacity: 1, translateY: 0 }}\n        transition={{ type: 'timing', duration: 500 }}\n        style={[styles.detailsContainer, styles.sectionSpacing]}\n      >\n        <Text style={styles.productTitle}>{product?.name}</Text>\n        <Text style={styles.productDescription}>{product?.description}</Text>\n\n        <Text style={styles.productPrice}>{convertToCurrency(product?.price ?? 0)}</Text>\n        {product?.item_type === 'subscription' && (\n          <Text style={styles.subscriptionText}>/ per month</Text>\n        )}\n\n        <TouchableOpacity style={styles.previewButton}>\n          <Ionicons name=\"eye-outline\" size={24} color={COLORS.white} />\n          <Text style={styles.previewButtonText}>Preview</Text>\n        </TouchableOpacity>\n      </MotiView>\n\n      {/* Variant Information Section */}\n      {product?.variants && product?.variants.length > 0 && (\n        <MotiView\n          from={{ opacity: 0, translateY: -10 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{ type: 'timing', duration: 500, delay: 200 }}\n          style={[styles.variantContainer, styles.sectionSpacing]}\n        >\n          <Text style={styles.sectionTitle}>Variants</Text>\n          {product?.variants.map((variant) => (\n            <View key={variant.id} style={styles.variantItem}>\n              <Image\n                source={{ uri: variant.image || 'https://via.placeholder.com/60' }}\n                style={styles.variantImage}\n              />\n              <View style={styles.variantDetails}>\n                <Text style={styles.variantTitle}>{variant.title}</Text>\n                <Text style={styles.variantColor}>Color: {variant.color_code}</Text>\n                <Text style={styles.variantPrice}>{convertToCurrency(variant.price)}</Text>\n                <Text style={styles.variantDescription}>{variant.description}</Text>\n              </View>\n            </View>\n          ))}\n        </MotiView>\n      )}\n\n      {/* Sizing and Inventory Section\n      {product?.sizes && product?.sizes.length > 0 && (\n        <MotiView\n          from={{ opacity: 0, translateY: -10 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{ type: 'timing', duration: 500, delay: 300 }}\n          style={[styles.sizingContainer, styles.sectionSpacing]}\n        >\n          <Text style={styles.sectionTitle}>Sizing & Inventory</Text>\n          {product?.sizes.map((size) => {\n            const variant = product?.variants.find(v => v.title === size);\n            return (\n              <View key={size} style={styles.sizingItem}>\n                <Text style={styles.sizingText}>Size: {size}</Text>\n                <Text style={styles.inventoryText}>Inventory: {variant?.inventory || 'N/A'}</Text>\n                <Text style={styles.sizingPrice}>\n                  {convertToCurrency(variant?.price || product?.price)}\n                </Text>\n              </View>\n            );\n          })}\n        </MotiView>\n      )} */}\n\n      {/* Reviews Section */}\n      {product?.reviews && product?.reviews.length > 0 && (\n        <MotiView\n          from={{ opacity: 0, translateY: -10 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{ type: 'timing', duration: 500, delay: 400 }}\n          style={[styles.reviewsContainer, styles.sectionSpacing]}\n        >\n          <Text style={styles.sectionTitle}>Customer Reviews</Text>\n          {product?.reviews.map((review, index) => (\n            <View key={`review-${index}`} style={styles.reviewItem}>\n              <Text style={styles.reviewUserName}>{review.userName}</Text>\n              <Text style={styles.reviewTitle}>{review.title}</Text>\n              <Text style={styles.reviewComment}>{review.comment}</Text>\n            </View>\n          ))}\n        </MotiView>\n      )}\n\n      {/* Checkout Section */}\n      <MotiView\n        from={{ opacity: 0, translateY: 10 }}\n        animate={{ opacity: 1, translateY: 0 }}\n        transition={{ type: 'timing', duration: 500, delay: 500 }}\n        style={styles.checkoutContainer}\n      >\n        <TouchableOpacity style={styles.checkoutButton} onPress={() => {}}>\n          <Text style={styles.checkoutButtonText}>Go to Checkout</Text>\n          <Ionicons name=\"arrow-forward-outline\" size={24} color={COLORS.white} />\n        </TouchableOpacity>\n      </MotiView>\n    </ScrollView>\n  );\n};\n\nexport default ProductDetailsPageVOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.gray2,\n    padding: SIZES.medium,\n  },\n  productImage: {\n    width: '100%',\n    height: 300,\n    borderRadius: SIZES.small,\n    marginBottom: SIZES.medium,\n    resizeMode: 'cover',\n  },\n  detailsContainer: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  sectionSpacing: {\n    marginBottom: SIZES.xLarge,\n  },\n  productTitle: {\n    fontFamily: 'bold',\n    fontSize: SIZES.large,\n    marginBottom: SIZES.small,\n  },\n  productDescription: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: SIZES.medium,\n  },\n  productPrice: {\n    fontWeight: 'bold',\n    fontSize: SIZES.xLarge,\n    color: COLORS.primary,\n    marginBottom: SIZES.small,\n  },\n  subscriptionText: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n    marginBottom: SIZES.medium,\n  },\n  previewButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: COLORS.primary,\n    padding: SIZES.small,\n    borderRadius: SIZES.small,\n    justifyContent: 'center',\n  },\n  previewButtonText: {\n    color: COLORS.white,\n    fontSize: SIZES.medium,\n    marginLeft: SIZES.small,\n  },\n  sectionTitle: {\n    fontFamily: 'bold',\n    fontSize: SIZES.large,\n    marginBottom: SIZES.medium,\n  },\n  variantContainer: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  variantItem: {\n    flexDirection: 'row',\n    marginBottom: SIZES.medium,\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.gray2,\n    paddingBottom: SIZES.medium,\n  },\n  variantImage: {\n    width: 60,\n    height: 60,\n    borderRadius: SIZES.small,\n    marginRight: SIZES.medium,\n  },\n  variantDetails: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  variantTitle: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  variantColor: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  variantPrice: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: SIZES.small,\n  },\n  variantDescription: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  sizingContainer: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  sizingItem: {\n    marginBottom: SIZES.medium,\n  },\n  sizingText: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  inventoryText: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  sizingPrice: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginTop: SIZES.small,\n  },\n  reviewsContainer: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  reviewItem: {\n    marginBottom: SIZES.medium,\n  },\n  reviewUserName: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  reviewTitle: {\n    fontFamily: 'bold',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  reviewComment: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  checkoutContainer: {\n    alignItems: 'center',\n    marginBottom: SIZES.xLarge,\n  },\n  checkoutButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: COLORS.primary,\n    paddingVertical: SIZES.medium,\n    paddingHorizontal: 100,\n    borderRadius: SIZES.medium,\n    justifyContent: 'center',\n  },\n  checkoutButtonText: {\n    color: COLORS.white,\n    fontSize: SIZES.medium,\n    marginRight: SIZES.small,\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MotiView } from 'moti';\n\ninterface GlowButtonProps {\n  onPress: () => void;\n  buttonText: string;\n}\n\nconst GlowButton: React.FC<GlowButtonProps> = ({ onPress, buttonText }) => {\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    setIsPressed(true);\n    onPress();\n\n    // Reset animation state after some time\n    setTimeout(() => setIsPressed(false), 500);\n  };\n\n  return (\n    <MotiView\n      from={{\n        shadowOpacity: 0,\n      }}\n      animate={{\n        shadowOpacity: isPressed ? 0.8 : 0,\n      }}\n      transition={{\n        type: 'timing',\n        duration: 300,\n      }}\n      style={styles.glow}\n    >\n      <TouchableOpacity\n        style={styles.buyButton}\n        onPress={handlePress}\n      >\n        <Text style={styles.buyButtonText}>{buttonText}</Text>\n      </TouchableOpacity>\n    </MotiView>\n  );\n};\n\nexport default GlowButton;\n\nconst styles = StyleSheet.create({\n  glow: {\n    shadowColor: 'black', // Gold-like color for the glow\n    shadowOffset: { width: 0, height: 0 },\n    shadowRadius: 10,\n  },\n  buyButton: {\n    backgroundColor: '#FFFFFF',\n    borderWidth: 2,\n    borderColor: '#000000',\n    borderRadius: 25,\n    paddingVertical: 15,\n    alignItems: 'center',\n    marginTop: 20,\n    // width: 200, // Adjust the width as needed\n\n   \n  },\n  buyButtonText: {\n    color: '#000000',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n","import React, { FC, useContext, useState } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { CartContext } from '@/contexts/CartContext';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { MotiView } from 'moti';\nimport GlitterButton from '@/components/buttons/GlitterButtom';\n\nconst ProductDetailsPageVThree: FC<ProductModelProps> = (props) => {\n  const [selectedColor, setSelectedColor] = useState<string | null>(null);\n  const [selectedSize, setSelectedSize] = useState<string | null>(null);\n  const { addToCart } = useContext(CartContext);\n  const { selectedProduct } = useClientProduct();\n\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    if (selectedProduct) {\n      addToCart(selectedProduct);\n      setIsPressed(true);\n\n      // Reset animation state after some time\n      setTimeout(() => setIsPressed(false), 500);\n    }\n  };\n\n  const description = selectedProduct?.description ?? \"\";\n\n  return (\n    <View style={{ backgroundColor: 'white' }}>\n      <ScrollView contentContainerStyle={styles.container}>\n        <View style={styles.imageContainer}>\n          <Image \n            source={{ uri: selectedProduct?.images[0] }} // Replace with actual image URI\n            style={styles.productImage}\n          />\n          <View style={styles.textOverlay}>\n            <Text style={styles.overlayTitle}>{selectedProduct?.name}</Text>\n            <Text style={styles.overlaySubtitle}>{description}</Text>\n          </View>\n        </View>\n        \n        <View style={styles.section}>\n         <View style={styles.productInfo}>\n           <Text style={styles.productTitle}>{selectedProduct?.name}</Text>\n           <Text style={styles.productSubtitle}>{description.length > 11 ? description.slice(0, 11) + '...' : description}\n           </Text>\n         </View>\n       </View>\n\n        <View style={styles.section}>\n          <View style={styles.priceSection}>\n            <Text style={styles.priceLabel}>Price</Text>\n            <Text style={styles.divider}>|</Text>\n            <View style={styles.priceInfo}>\n              <Text style={styles.price}>{convertToCurrency(selectedProduct?.price ?? 10000)}</Text>\n              <Text style={styles.description}>\n                {description}\n              </Text>\n            </View>\n          </View>\n        </View>\n\n\n        <GlitterButton onPress={handlePress} buttonText={'Add To Cart'} />\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default ProductDetailsPageVThree;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n  },\n  imageContainer: {\n    position: 'relative',\n  },\n  productImage: {\n    width: '100%',\n    height: 400,\n    borderRadius: 10,\n    marginBottom: 20,\n  },\n  textOverlay: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    right: 20,\n  },\n\n  productInfo: {\n    marginBottom: 20,\n  },\n  productTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#000000',\n  },\n  productSubtitle: {\n    fontSize: 16,\n    color: '#7D7D7D',\n    marginTop: 5,\n  },\n  overlayTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 5,\n  },\n  overlaySubtitle: {\n    fontSize: 16,\n    color: '#FFFFFF',\n  },\n  section: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 10,\n    padding: 16,\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginBottom: 10,\n  },\n  colorOptions: {\n    flexDirection: 'row',\n  },\n  colorCircle: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n  },\n  selectedColorCircle: {\n    borderWidth: 2,\n    borderColor: '#000000',\n  },\n  priceSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  priceLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginRight: 10, // Added margin to separate label from price\n  },\n  divider: {\n    fontSize: 16,\n    color: '#E0E0E0',\n    marginHorizontal: 10, // Divider spacing\n  },\n  priceInfo: {\n    flex: 1,\n  },\n  price: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginBottom: 5,\n  },\n  description: {\n    fontSize: 14,\n    color: '#7D7D7D',\n    flexWrap: 'wrap',\n  },\n  buyButton: {\n    backgroundColor: '#FFFFFF',\n    borderWidth: 2,\n    borderColor: '#000000',\n    borderRadius: 25,\n    paddingVertical: 15,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  buyButtonText: {\n    color: '#000000',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\n\n\n\n\n\n// import React, { FC, useContext, useState } from 'react';\n// import { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { COLORS, SIZES } from '@/utils/theme'; // Adjust based on your theme structure\n// import { CartContext } from '@/contexts/CartContext';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n// // import SizesView from '@/components/card/SizesView';\n// import ProductColorPickerView from '@/components/views/ProductColorPickerView';\n// import SizesView from '@/components/views/SizesView';\n// import { ProductModelProps } from '@/models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';\n\n// const ProductDetailsPageVThree: FC<ProductModelProps> = (props) => {\n//   const [selectedColor, setSelectedColor] = useState<string | null>(null);\n//   const [selectedSize, setSelectedSize] = useState<string | null>(null);\n//   const { addToCart } = useContext(CartContext);\n//   const { selectedProduct } = useClientProduct();\n\n//   const colors = ['#F5F5DC', '#000000', '#A0522D'];\n//   const sizes = ['S', 'M', 'L', 'XL', 'XXL'];\n\n//   const description = selectedProduct?.description ?? \"\"\n//   return (\n//     <View style={{backgroundColor: \"white\"}}>\n//     <ScrollView contentContainerStyle={styles.container}>\n//       <Image \n//         source={{ uri: selectedProduct?.images[0] }} // Replace with actual image URI\n//         style={styles.productImage}\n//       />\n      \n//       <View style={styles.section}>\n//         <View style={styles.productInfo}>\n//           <Text style={styles.productTitle}>{selectedProduct?.name}</Text>\n//           <Text style={styles.productSubtitle}>{description.length > 11 ? description.slice(0, 11) + '...' : description}\n//           </Text>\n//         </View>\n//       </View>\n\n\n\n\n// {/* Variants  */}\n// {/* <ProductColorPickerView colors={colors} selectedColor={selectedColor} onColorSelect={setSelectedColor} /> */}    \n// {/* <SizesView sizes={sizes} selectedSize={selectedSize} onSizeSelect={setSelectedSize} /> */}\n\n\n//       <View style={styles.section}>\n//       <View style={styles.priceSection}>\n//         <Text style={styles.priceLabel}>Price</Text>\n\n//         <Text style={styles.divider}>|</Text>\n//         <View style={styles.priceInfo}>\n//         <Text style={styles.price}>{ convertToCurrency(selectedProduct?.price ?? 10000) }</Text>\n\n//           <Text style={styles.description}>\n//             {selectedProduct?.description ?? \"\"}\n//           </Text>\n//         </View>\n//       </View>\n//     </View>\n//       <TouchableOpacity style={styles.buyButton} onPress={() => {\n//           if (selectedProduct) {\n//             addToCart(selectedProduct);\n\n//           }\n//       }}>\n//         <Text style={styles.buyButtonText}>Add To Cart</Text>\n//       </TouchableOpacity>\n//     </ScrollView>\n//     </View>\n//   );\n// };\n\n// export default ProductDetailsPageVThree;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flexGrow: 1,\n//     backgroundColor: '#FFFFFF',\n//     padding: 16,\n//   },\n//    divider: {\n//     fontSize: 16,\n//     color: '#E0E0E0',\n//     marginHorizontal: 10, // Divider spacing\n//   },\n//   productImage: {\n//     width: '100%',\n//     height: 400,\n//     borderRadius: 10,\n//     marginBottom: 20,\n//   },\n//   section: {\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//     borderRadius: 10,\n//     padding: 16,\n//     marginBottom: 20,\n//   },\n//   productInfo: {\n//     marginBottom: 20,\n//   },\n//   productTitle: {\n//     fontSize: 22,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   productSubtitle: {\n//     fontSize: 16,\n//     color: '#7D7D7D',\n//     marginTop: 5,\n//   },\n//   sectionTitle: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//     marginBottom: 10,\n//   },\n//   colorOptions: {\n//     flexDirection: 'row',\n//   },\n//   colorCircle: {\n//     width: 30,\n//     height: 30,\n//     borderRadius: 15,\n//     marginRight: 10,\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//   },\n//   selectedColorCircle: {\n//     borderWidth: 2,\n//     borderColor: '#000000',\n//   },\n//   sizeOptions: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//   },\n//   sizeButton: {\n//     paddingVertical: 8,\n//     paddingHorizontal: 16,\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//     borderRadius: 5,\n//   },\n//   selectedSizeButton: {\n//     backgroundColor: '#000000',\n//   },\n//   sizeText: {\n//     fontSize: 14,\n//     color: '#000000',\n//   },\n//   selectedSizeText: {\n//     color: '#FFFFFF',\n//   },\n//   priceSection: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     justifyContent: 'space-between',\n//   },\n//   priceLabel: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   priceInfo: {\n//     flex: 1, // Allows priceInfo to take up remaining space\n//   },\n//   price: {\n//     fontSize: 28,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//     marginRight: 10,\n//   },\n//   descriptionContainer: {\n//     flex: 1,\n//   },\n//   description: {\n//     fontSize: 14,\n//     color: '#7D7D7D',\n//     flexWrap: 'wrap', // Allows text to wrap within the container\n//   },\n//   buyButton: {\n//     backgroundColor: '#FFFFFF',\n//     borderWidth: 2,\n//     borderColor: '#000000',\n//     borderRadius: 25,\n//     paddingVertical: 15,\n//     alignItems: 'center',\n//     marginTop: 20, // Added margin to ensure it's visible\n//   },\n//   buyButtonText: {\n//     color: '#000000',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n// });\n","import React, { FC, useContext } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TouchableOpacity,\n  StyleSheet,\n  Dimensions,\n  ScrollView,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Link } from \"expo-router\";\nimport { CartContext } from \"@/contexts/CartContext\";\n// import { useClientProduct } from \"@/contexts/ClientProductContext\";\nimport { ProductModelProps } from \"@/models/ProductModelProps\";\nimport { useClientProduct } from \"@/contexts/ClientProductContext\";\n\nconst { width } = Dimensions.get(\"window\");\n\n// const ProductDetailsPageVTwo: React.FC = () => {\n\nexport const ProductDetailsPageVTwo: FC<ProductModelProps> = () => {\n  const { addToCart } = useContext(CartContext);\n  const { selectedProduct } = useClientProduct();\n\n  // Static image URLs\n  const images = [\n    \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/rock.jpg\",\n    \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/gel.jpg\",\n    \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/waterfall.jpg\",\n  ];\n\n  return (\n    <View style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollViewContent}>\n        {/* Product Images */}\n        <ScrollView\n          horizontal\n          pagingEnabled\n          showsHorizontalScrollIndicator={false}\n          style={styles.imageCarousel}\n        >\n          {images.map((image, index) => (\n            <Image\n              key={index}\n              source={{ uri: image }}\n              style={styles.productImage}\n            />\n          ))}\n        </ScrollView>\n\n        {/* Product Info */}\n        <View style={styles.productInfo}>\n          <Text style={styles.productName}>Sample Sea Moss Product</Text>\n          <Text style={styles.productDescription}>\n            This is a sample product description that highlights key features\n            and benefits of Sea Moss products.\n          </Text>\n          <Text style={styles.productPrice}>\n            <Text style={styles.salePrice}>$149.99</Text>{\" \"}\n            <Text style={styles.originalPrice}>$199.99</Text>\n          </Text>\n\n          {/* Features */}\n          <View style={styles.featuresContainer}>\n            <Text style={styles.sectionTitle}>Features:</Text>\n            <Text style={styles.featureItem}>\n              - Rich in essential minerals and vitamins\n            </Text>\n            <Text style={styles.featureItem}>\n              - Supports overall health and wellness\n            </Text>\n            <Text style={styles.featureItem}>\n              - Can be used in various recipes and remedies\n            </Text>\n          </View>\n\n          {/* Sea Moss Benefits */}\n          <View style={styles.benefitsContainer}>\n            <Text style={styles.sectionTitle}>Benefits of Sea Moss:</Text>\n            <Text style={styles.benefitItem}>\n              - Boosts immune system and overall health\n            </Text>\n            <Text style={styles.benefitItem}>\n              - Improves digestion and gut health\n            </Text>\n            <Text style={styles.benefitItem}>\n              - Supports skin health and promotes a healthy complexion\n            </Text>\n            <Text style={styles.benefitItem}>\n              - Provides a natural source of iodine, aiding in thyroid function\n            </Text>\n            <Text style={styles.benefitItem}>\n              - Rich in Omega-3 fatty acids, which support heart health\n            </Text>\n          </View>\n\n          {/* Variants\n          <View style={styles.variantsContainer}>\n            <Text style={styles.sectionTitle}>Available Variants:</Text>\n            <View style={styles.variantItem}>\n              <Text style={styles.variantTitle}>Sea Moss Gel</Text>\n              <Text style={styles.variantDescription}>\n                A convenient, ready-to-use Sea Moss gel, perfect for adding to\n                smoothies or skincare routines.\n              </Text>\n              <Image\n                source={{\n                  uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/gel.jpg\",\n                }}\n                style={styles.variantImage}\n                resizeMode=\"cover\"\n              />\n              <Text style={styles.variantPrice}>\n                <Text style={styles.salePrice}>$129.99</Text>{\" \"}\n                <Text style={styles.originalPrice}>$149.99</Text>\n              </Text>\n            </View>\n            <View style={styles.variantItem}>\n              <Text style={styles.variantTitle}>Raw Sea Moss</Text>\n              <Text style={styles.variantDescription}>\n                Raw, organic Sea Moss, ideal for those who prefer to prepare it\n                themselves.\n              </Text>\n              <Image\n                source={{\n                  uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/rock.jpg\",\n                }}\n                style={styles.variantImage}\n                resizeMode=\"cover\"\n              />\n              <Text style={styles.variantPrice}>\n                <Text style={styles.salePrice}>$109.99</Text>{\" \"}\n                <Text style={styles.originalPrice}>$129.99</Text>\n              </Text>\n            </View>\n          </View> */}\n\n          {/* Reviews */}\n          <View style={styles.reviewsContainer}>\n            <Text style={styles.sectionTitle}>Customer Reviews:</Text>\n            <ScrollView\n              horizontal\n              showsHorizontalScrollIndicator={false}\n              style={styles.reviewsScrollView}\n            >\n              <View style={styles.reviewItem}>\n                <Text style={styles.reviewUserName}>John Doe</Text>\n                <Text style={styles.reviewTitle}>Great product!</Text>\n                <Text style={styles.reviewComment}>\n                  I really enjoyed using this Sea Moss product. Highly recommend\n                  it!\n                </Text>\n              </View>\n              <View style={styles.reviewItem}>\n                <Text style={styles.reviewUserName}>Jane Smith</Text>\n                <Text style={styles.reviewTitle}>Good value for money</Text>\n                <Text style={styles.reviewComment}>\n                  This Sea Moss offers great value for the price.\n                </Text>\n              </View>\n            </ScrollView>\n          </View>\n        </View>\n      </ScrollView>\n\n      {/* Add to Cart Button - Fixed at the Bottom */}\n\n      <TouchableOpacity\n        style={styles.addToCartButton}\n        onPress={() => {\n          if (selectedProduct) {\n            addToCart(selectedProduct);\n          }\n        }}\n      >\n        <Text style={styles.addToCartButtonText}>Add to cart</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n// Styles definition\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFF\",\n  },\n  scrollViewContent: {\n    paddingBottom: 100, // Space for the fixed button at the bottom\n  },\n  imageCarousel: {\n    height: width, // Ensure the carousel height matches the width for a square aspect ratio\n  },\n  productImage: {\n    width: width, // Full width of the screen\n    height: width, // Full width of the screen to maintain aspect ratio\n    resizeMode: \"cover\", // Cover the entire space, cropping if necessary\n  },\n  productInfo: {\n    padding: 16,\n  },\n  productName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: 8,\n  },\n  productDescription: {\n    fontSize: 16,\n    color: \"#555\",\n    marginBottom: 8,\n  },\n  productPrice: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: 16,\n  },\n  salePrice: {\n    color: \"red\",\n    fontWeight: \"bold\",\n  },\n  originalPrice: {\n    textDecorationLine: \"line-through\",\n    color: \"#888\",\n  },\n  featuresContainer: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: 8,\n  },\n  featureItem: {\n    fontSize: 14,\n    color: \"#333\",\n    marginBottom: 4,\n  },\n  benefitsContainer: {\n    marginBottom: 16,\n    padding: 16,\n    backgroundColor: \"#f0f0f0\",\n    borderRadius: 8,\n  },\n  benefitItem: {\n    fontSize: 14,\n    color: \"#333\",\n    marginBottom: 4,\n  },\n  variantsContainer: {\n    marginBottom: 16,\n  },\n  variantItem: {\n    marginBottom: 16,\n  },\n  variantTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#000\",\n  },\n  variantDescription: {\n    fontSize: 14,\n    color: \"#555\",\n    marginBottom: 4,\n  },\n  variantImage: {\n    width: width - 32,\n    height: width - 32,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  variantPrice: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#000\",\n  },\n  reviewsContainer: {\n    marginBottom: 16,\n  },\n  reviewsScrollView: {\n    flexDirection: \"row\",\n  },\n  reviewItem: {\n    width: width * 0.8, // Each review takes up 80% of the screen width\n    marginRight: 16,\n    padding: 16,\n    backgroundColor: \"#f9f9f9\",\n    borderRadius: 8,\n    // shadowColor: '#000',\n    // shadowOpacißty: 0.1,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 8,\n    elevation: 4, // For Android shadow\n  },\n  reviewUserName: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: 4,\n  },\n  reviewTitle: {\n    fontSize: 14,\n    color: \"#555\",\n    marginBottom: 4,\n  },\n  reviewComment: {\n    fontSize: 14,\n    color: \"#333\",\n  },\n  addToCartButton: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"#000\",\n    paddingVertical: 16,\n    borderRadius: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  addToCartButtonText: {\n    fontSize: 18,\n    color: \"#FFF\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default ProductDetailsPageVTwo;\n\n// import React, { useState } from 'react';\n// import {\n//   View,\n//   Text,\n//   Image,\n//   TouchableOpacity,\n//   StyleSheet,\n//   Dimensions,\n//   ScrollView,\n// } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { Link } from 'expo-router';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n\n// const { width } = Dimensions.get('window');\n\n// const ProductDetailsPageVTwo = () => {\n//   const { selectedProduct: product } = useClientProduct();\n\n//   return (\n//     <ScrollView style={styles.container}>\n//       {/* Product Images */}\n//       <ScrollView\n//         horizontal\n//         pagingEnabled\n//         showsHorizontalScrollIndicator={false}\n//         style={styles.imageCarousel}\n//       >\n//         {product?.images.map((image, index) => (\n//           <Image key={index} source={{ uri: image }} style={styles.productImage} />\n//         ))}\n//       </ScrollView>\n\n//       {/* Product Info */}\n//       <View style={styles.productInfo}>\n//         <Text style={styles.productName}>{product?.name}</Text>\n//         <Text style={styles.productDescription}>{product?.description}</Text>\n//         <Text style={styles.productPrice}>{product?.price}</Text>\n\n//         {/* Product Details */}\n//         <View style={styles.productDetails}>\n//           <Text style={styles.productDetailText}><Text style={styles.boldText}>Material: </Text>{product?.description}</Text>\n//         </View>\n\n//         {/* Add to Cart Button */}\n//         <Link href=\"/cart\" asChild>\n//           <TouchableOpacity style={styles.addToCartButton}>\n//             <Text style={styles.addToCartButtonText}>Add to cart</Text>\n//           </TouchableOpacity>\n//         </Link>\n//       </View>\n\n//       {/* Bottom Navigation Bar */}\n//       <View style={styles.bottomNavBar}>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>home</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>search</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>favourites</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>cart</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>account</Text>\n//         </TouchableOpacity>\n//       </View>\n//     </ScrollView>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#FFF',\n//   },\n//   imageCarousel: {\n//     height: width, // Ensure the carousel height matches the width for a square aspect ratio\n//   },\n//   productImage: {\n//     width: width, // Full width of the screen\n//     height: width, // Full width of the screen to maintain aspect ratio\n//     resizeMode: 'cover', // Cover the entire space, cropping if necessary\n//   },\n//   productInfo: {\n//     padding: 16,\n//   },\n//   productName: {\n//     fontSize: 24,\n//     fontWeight: 'bold',\n//     color: '#000',\n//     marginBottom: 8,\n//   },\n//   productDescription: {\n//     fontSize: 16,\n//     color: '#555',\n//     marginBottom: 8,\n//   },\n//   productPrice: {\n//     fontSize: 20,\n//     fontWeight: 'bold',\n//     color: '#000',\n//     marginBottom: 16,\n//   },\n//   productDetails: {\n//     marginBottom: 16,\n//   },\n//   productDetailText: {\n//     fontSize: 14,\n//     color: '#333',\n//     marginBottom: 8,\n//   },\n//   boldText: {\n//     fontWeight: 'bold',\n//   },\n//   addToCartButton: {\n//     backgroundColor: '#000',\n//     paddingVertical: 16,\n//     borderRadius: 8,\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     marginBottom: 16,\n//   },\n//   addToCartButtonText: {\n//     fontSize: 18,\n//     color: '#FFF',\n//     fontWeight: 'bold',\n//   },\n//   bottomNavBar: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//     paddingVertical: 16,\n//     paddingHorizontal: 32,\n//     backgroundColor: '#000',\n//   },\n//   navButton: {\n//     alignItems: 'center',\n//   },\n//   navButtonText: {\n//     fontSize: 14,\n//     color: '#FFF',\n//   },\n// });\n\n// export default ProductDetailsPageVTwo;\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { UserProps } from \"@/models/UserProps\";\nimport { generateUUID } from \"@/hooks/generateUUID\";\nimport { router } from \"expo-router\";\nimport { COLORS } from \"@/utils/theme\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport useFetchObject from \"@/hooks/useFetchObject\";\nimport { StoreModelProps } from \"@/models/StoreModelProps\";\nimport { getStore } from \"@/api/storeApi\";\nimport UserLoginTextFields from \"@/components/views/UserLoginTextFields\";\nimport UserRegisterTextFields from \"@/components/views/UserRegisterTextFields\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst RegisterComponentTwo = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(false);\n  // const { data: store } = useFetchObject<StoreModelProps>(() =>\n  //   getStore(CONSTANTS.store_id)\n  // );\n\n  const { store } = useClientStore()\n\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n        }}\n        style={styles.logo}\n      />\n      <Text style={styles.welcomeText}>\n        Welcome to {store?.store_name ?? \"\"}\n      </Text>\n      <Text style={styles.descriptionText}>\n        Sign up or login below to manage your project, task, and productivity\n      </Text>\n\n      <View style={styles.tabContainer}>\n        <TouchableOpacity\n          style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(true)}\n        >\n          <Text\n            style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n          >\n            Login\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(false)}\n        >\n          <Text\n            style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n          >\n            Sign Up\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {activeTabIsLogin ? (\n       <UserLoginTextFields />\n      ) : (\n       <UserRegisterTextFields />\n      )}\n    </View>\n  );\n};\n\nexport default RegisterComponentTwo;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    backgroundColor: COLORS.white,\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginTop: 50,\n    borderRadius: 13,\n  },\n  appName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: COLORS.primary,\n    marginTop: 10,\n  },\n  welcomeText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: COLORS.darkGray,\n    marginTop: 20,\n  },\n  descriptionText: {\n    fontSize: 14,\n    color: COLORS.darkGray,\n    textAlign: \"center\",\n    marginVertical: 10,\n  },\n  tabContainer: {\n    flexDirection: \"row\",\n    marginVertical: 20,\n  },\n  tab: {\n    flex: 1,\n    paddingBottom: 5,\n    alignItems: \"center\",\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: COLORS.darkGray,\n  },\n  activeTabText: {\n    color: COLORS.primary,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.lightGray,\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 10,\n    width: width - 40,\n  },\n  input: {\n    flex: 1,\n    marginLeft: 10,\n    color: COLORS.darkGray,\n  },\n  forgotPasswordText: {\n    alignSelf: \"flex-end\",\n    color: COLORS.primary,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n  },\n  signupButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: COLORS.white,\n    fontWeight: \"bold\",\n  },\n  termsText: {\n    fontSize: 12,\n    color: COLORS.darkGray,\n    textAlign: \"left\",\n    marginLeft: 10,\n    marginRight: 20,\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 10,\n  },\n  passwordCriteria: {\n    color: COLORS.darkGray,\n    fontSize: 14,\n    marginTop: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';\nimport { Ionicons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { Link, router, Stack } from 'expo-router';\nimport BannerVOne from '@/components/banner/BannerVOne';\nimport { useAuth } from '@/contexts/AuthContext';\nimport MyButton from '@/components/buttons/MyButton';\n// import CustomButton from '@/components/buttons/WhiteButton';\n// import MyButton from '@/components/buttons/WhiteButton';\n\nconst SettingsPage = () => {\n  const insets = useSafeAreaInsets();\n\n  const { authState , onLogout } = useAuth()\n\n  const handleLogOut = async () => {\n    if (onLogout) {\n      try {\n        await onLogout();\n        router.replace('/welcome'); // Navigate to the welcome screen after logout\n      } catch (error) {\n        console.error('Logout failed:', error);\n      }\n    } else {\n      console.error('Logout function is not defined');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* <Stack.Screen options={{headerShown: false}} /> */}\n     <View  style={styles.upperSection}>\n      {/* <View style={styles.divider}/> */}\n     {/* <View style={{paddingBottom: 20}}/> */}\n     </View>\n     <ScrollView contentContainerStyle={styles.content}>\n     <Text style={styles.title}>Settings</Text>\n\n      <BannerVOne />\n     \n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>General</Text>\n          \n          <Link href={'/profile' as never} asChild>\n            <TouchableOpacity style={styles.option}>\n              <FontAwesome5 name=\"user\" size={20} color=\"black\" />\n              <Text style={styles.optionText}>Profile information</Text>\n              <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n            </TouchableOpacity>\n          </Link>\n\n{/* \n          <Link href={'settings/profile-information' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <MaterialIcons name=\"payment\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Payment methods</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link> */}\n\n          <Link href={'/appearance' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"color-palette-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Appearance</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/favorites' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"color-palette-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Favorites</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n{/* \n          <Link href={'settings/profile-information' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"notifications-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Notifications</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link> */}\n\n        </View>\n\n        {/* <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Support</Text>\n          <Link href={'/report-an-issue' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"alert-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Report an issue</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/faq' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"help-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>term</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n\n          </Link>\n\n        </View> */}\n\n\n\n<View style={styles.section}>\n          <Text style={styles.sectionTitle}>Application</Text>\n          <Link href={'/privacy-policy'} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"alert-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Privacy Policy</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/terms-of-use' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"help-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Terms of use</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          \n          </Link>\n\n        </View>\n        <MyButton\n        title=\"Log out\"\n        onPress={handleLogOut}\n        buttonStyle={styles.logoutButton}\n        textStyle={styles.logoutText}\n      />\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  upperSection: {\n  \n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#EAEAEA',\n    // paddingBottom: 20\n    // marginBottom: 20,\n  },\n\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'left',\n    marginVertical: 20,\n    marginLeft: 16,\n    paddingBottom: 20,\n  },\n  content: {\n    paddingHorizontal: 20,\n    paddingBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 4, // for Android shadow\n    marginTop: 12,\n\n  },\n  section: {\n    marginBottom: 30,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 10,\n  },\n  option: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#EAEAEA',\n  },\n  optionText: {\n    flex: 1,\n    fontSize: 16,\n    color: '#000',\n    marginLeft: 10,\n  },\n  logoutButton: {\n    backgroundColor: '#FFFFFF',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#000',\n    marginTop: 20,\n  },\n  logoutText: {\n    color: '#000',\n    fontSize: 16,\n  },\n});\n\nexport default SettingsPage;\n","import { StyleSheet, Text, View } from 'react-native';\nimport React from 'react';\nimport Head from 'expo-router/head';\n\ntype SEOHeaderProps = {\n  title: string;\n  content: string;\n};\n\n// Apply to every page\nconst SEOHeader: React.FC<SEOHeaderProps> = ({ title, content }) => {\n  return (\n    <Head>\n      <title>{title}</title>\n      <meta name=\"description\" content={content} />\n    </Head>\n  );\n};\n\nexport default SEOHeader;\n\nconst styles = StyleSheet.create({});","import React from 'react';\nimport { Pressable, StyleProp, Text, TextStyle, ViewStyle } from 'react-native';\nimport { Link } from 'expo-router';\n\ntype CustomLinkProps = {\n  url: string;\n  title: string;\n  style?: StyleProp<ViewStyle | TextStyle>; // Style prop for flexibility\n  replace?: boolean;\n  asChild?: boolean;\n};\n\nexport const CustomLink: React.FC<CustomLinkProps> = ({ url, title, style, replace, asChild }) => {\n  if (asChild) {\n    return (\n      <Link href={url as never} replace={replace}>\n        <Text style={style}>{title}</Text>\n      </Link>\n    );\n  }\n\n  return (\n    <Link href={url as never} replace={replace} asChild>\n      <Pressable>\n        <Text style={style}>{title}</Text>\n      </Pressable>\n    </Link>\n  );\n};\n\nexport default CustomLink;","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n// import CustomLink from '../../CustomLink'\nimport Head from 'expo-router/head'\nimport SEOHeader from '@/components/SEOHeader'\nimport CustomLink from '@/components/CustomLink'\n// import SEOHeader from '../../SEOHeader'\n\nconst SettingsPageWeb = () => {\n  return (\n    <>\n    {/* <Head>\n        <title>Settings</title>\n        <meta name='description' content='Change your settings' />\n    </Head> */}\n\n    <SEOHeader title={'Settings'} content={'Change your settings'} />\n      <h2>settings</h2>\n      <CustomLink url={'/'} title={'sign out'} replace />\n    </>\n  )\n}\n\nexport default SettingsPageWeb\n\nconst styles = StyleSheet.create({})","import React from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useClientStore } from '@/contexts/ClientStoreContext';\n\nexport default function WelcomePageOne() {\n\n  const {store} = useClientStore()\n  return (\n    <LinearGradient\n      colors={['#FF6B6B', '#FFD93D']}\n      style={styles.container}\n    >\n      <View style={styles.logoContainer}>\n        <Image\n          source={require('../../../../src/assets/images/logo.png')} // Replace with your logo path\n          style={styles.logo}\n          resizeMode=\"cover\"\n        />\n        <Text style={styles.title}>Welcome to {store?.store_name}</Text>\n      </View>\n      \n      <View style={styles.textContainer}>\n        <Text style={styles.subtitle}>Your gateway to a world of possibilities.</Text>\n        <Text style={styles.description}>Sign in to explore amazing features tailored just for you.</Text>\n      </View>\n\n      <TouchableOpacity style={styles.button} onPress={() => {}}>\n        <Text style={styles.buttonText}>Get Started</Text>\n        <Ionicons name=\"arrow-forward\" size={24} color=\"white\" />\n      </TouchableOpacity>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 50,\n  },\n  logo: {\n    width: 150,\n    height: 150,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginTop: 20,\n  },\n  textContainer: {\n    marginHorizontal: 40,\n    alignItems: 'center',\n  },\n  subtitle: {\n    fontSize: 20,\n    color: '#fff',\n    marginBottom: 10,\n  },\n  description: {\n    fontSize: 16,\n    color: '#fff',\n    textAlign: 'center',\n    lineHeight: 22,\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FF6B6B',\n    paddingVertical: 12,\n    paddingHorizontal: 30,\n    borderRadius: 25,\n    marginTop: 30,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginRight: 10,\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  TouchableOpacity,\n  StatusBar,\n  Modal,\n  Dimensions,\n  ActivityIndicator,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getStore } from \"@/api/storeApi\";\nimport LoginComponentOne from \"../login/LoginComponentOne\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport {\n  ClientStoreProvider,\n  useClientStore,\n} from \"@/contexts/ClientStoreContext\";\nimport { router } from \"expo-router\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\nconst { width, height } = Dimensions.get(\"screen\");\n\nexport default function WelcomePageTwo() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const { store } = useClientStore();\n  const { authState } = useAuth();\n\n  // const welcomeImage = store?.images?.welcome_image ?? \"\";\n\n  return (\n    <View style={styles.container}>\n      <StatusBar\n        barStyle=\"dark-content\"\n        translucent\n        backgroundColor=\"transparent\"\n      />\n\n      <ImageBackground\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/waterfall.jpg\",\n        }}\n        style={styles.backgroundImage}\n        resizeMode=\"cover\"\n      >\n        <View style={styles.overlay}>\n          <View style={styles.header}>\n            <Text style={styles.logoText}>{store?.store_name}</Text>\n            <Text style={styles.tagline}>\n              Nature's Superfood, Your Ultimate Wellness Companion.\n            </Text>\n          </View>\n\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={styles.buttonPrimary}\n              onPress={() => {\n                console.log(authState?.authenticated);\n                router.push(\"/login\");\n              }}\n            >\n              <Ionicons name=\"log-in-outline\" size={20} color=\"black\" />\n              <Text style={styles.buttonPrimaryText}>Proceed to Login</Text>\n              <Ionicons name=\"arrow-forward\" size={20} color=\"black\" />\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={styles.buttonSecondary}\n              onPress={() => router.push(\"/register\")}\n            >\n              <Ionicons name=\"person-add-outline\" size={20} color=\"white\" />\n              <Text style={styles.buttonSecondaryText}>New User? Sign Up</Text>\n              <Ionicons name=\"arrow-forward\" size={20} color=\"white\" />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ImageBackground>\n\n      {/* Modal for Login */}\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <TouchableOpacity\n              style={styles.closeButton}\n              onPress={() => setModalVisible(false)}\n            >\n              <Ionicons name=\"close-outline\" size={24} color=\"black\" />\n            </TouchableOpacity>\n            <LoginComponentOne />\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5F5F5\",\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5F5F5\",\n  },\n  backgroundImage: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  overlay: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.3)\", // Dark overlay for text visibility\n    paddingTop: 60,\n    paddingBottom: 40,\n    width: width,\n  },\n  header: {\n    alignItems: \"center\",\n  },\n  logoText: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  tagline: {\n    fontSize: 16,\n    color: \"white\",\n    textAlign: \"center\",\n    paddingHorizontal: 20,\n    marginTop: 10,\n  },\n  buttonContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  buttonPrimary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 30,\n    width: \"90%\",\n    justifyContent: \"space-between\",\n    marginBottom: 15,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5,\n  },\n  buttonPrimaryText: {\n    color: \"black\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  buttonSecondary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 30,\n    width: \"90%\",\n    justifyContent: \"space-between\",\n  },\n  buttonSecondaryText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  noImageContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  noImageText: {\n    fontSize: 16,\n    color: \"gray\",\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Semi-transparent background\n  },\n  modalContent: {\n    width: \"90%\",\n    padding: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    elevation: 10,\n  },\n  closeButton: {\n    alignSelf: \"flex-end\",\n  },\n});\n\n// import React from 'react';\n// import { View, Text, StyleSheet, ImageBackground, TouchableOpacity, StatusBar, Dimensions } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n\n// const { width, height } = Dimensions.get(\"screen\");\n\n// export default function WelcomePageTwo() {\n\n//   const { store } = useClientStore();\n\n//   const welcomeImage = store?.images?.welcome_image ?? \"\";\n\n//   return (\n//     <View style={styles.container}>\n//       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\n\n//       {welcomeImage ? (\n//         <ImageBackground\n//           source={{ uri: welcomeImage }}\n//           style={styles.backgroundImage}\n//           resizeMode=\"cover\"\n//         >\n//           <View style={styles.overlay}>\n//             <View style={styles.header}>\n//               <Text style={styles.logoText}>{store?.store_name}</Text>\n//               <Text style={styles.tagline}>Nature's Superfood, Your Ultimate Wellness Companion.</Text>\n//             </View>\n\n//             <View style={styles.buttonContainer}>\n//               <TouchableOpacity style={styles.buttonPrimary} onPress={() => {}}>\n//                 <Ionicons name=\"log-in-outline\" size={20} color=\"black\" />\n//                 <Text style={styles.buttonPrimaryText}>Proceed to Login</Text>\n//                 <Ionicons name=\"arrow-forward\" size={20} color=\"black\" />\n//               </TouchableOpacity>\n\n//               <TouchableOpacity style={styles.buttonSecondary} onPress={() => {}}>\n//                 <Ionicons name=\"person-add-outline\" size={20} color=\"white\" />\n//                 <Text style={styles.buttonSecondaryText}>New User? Sign Up</Text>\n//                 <Ionicons name=\"arrow-forward\" size={20} color=\"white\" />\n//               </TouchableOpacity>\n//             </View>\n//           </View>\n//         </ImageBackground>\n//       ) : (\n//         <View style={styles.noImageContainer}>\n//           <Text style={styles.noImageText}>No image available</Text>\n//         </View>\n//       )}\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     backgroundColor: '#F5F5F5',\n//   },\n//   backgroundImage: {\n//     flex: 1,\n//     width: '100%',\n//     height: '100%',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   overlay: {\n//     flex: 1,\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     backgroundColor: 'rgba(0, 0, 0, 0.3)', // Dark overlay for text visibility\n//     paddingTop: 60,\n//     paddingBottom: 40,\n//     width: width\n//   },\n//   header: {\n//     alignItems: 'center',\n//   },\n//   logoText: {\n//     fontSize: 40,\n//     fontWeight: 'bold',\n//     color: 'white',\n//   },\n//   tagline: {\n//     fontSize: 16,\n//     color: 'white',\n//     textAlign: 'center',\n//     paddingHorizontal: 20,\n//     marginTop: 10,\n//   },\n//   buttonContainer: {\n//     width: '100%',\n//     alignItems: 'center',\n//   },\n//   buttonPrimary: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     backgroundColor: 'white',\n//     paddingVertical: 15,\n//     paddingHorizontal: 30,\n//     borderRadius: 30,\n//     width: '90%',\n//     justifyContent: 'space-between',\n//     marginBottom: 15,\n//     shadowColor: '#000',\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.2,\n//     shadowRadius: 5,\n//     elevation: 5,\n//   },\n//   buttonPrimaryText: {\n//     color: 'black',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   buttonSecondary: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     backgroundColor: 'black',\n//     paddingVertical: 15,\n//     paddingHorizontal: 30,\n//     borderRadius: 30,\n//     width: '90%',\n//     justifyContent: 'space-between',\n//   },\n//   buttonSecondaryText: {\n//     color: 'white',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   noImageContainer: {\n//     flex: 1,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   noImageText: {\n//     fontSize: 16,\n//     color: 'gray',\n//   },\n// });\n"],"names":["VERSION","STORE_TYPE","ecom","blog","subscription","appointment","API_ID","BASE_URL","AWS_BASE_IMAGE","process","env","VITE_S3_ASSET_BUCKET_NAME","AWS_HOLDER_IMAGE","AWS_BASE_URL","AWS_BASE_URL_2","VITE_API_ID_2","VITE_REGION","AWS_VERIFY","VITE_API_ID","AWS_LOGIN_URL","AWS_ORDERS_URL","AWS_SUBSCRIBER_URL","CONSTANTS","appName","holderImageWelcome","holderImageProductCard","holderImageCollectionCard","holderImageOrderCard","holderUserImage","holderCarouselImageOne","holderCarouselImageTwo","holderCarouselImageThree","holderImage","mankind_store_id","store_id","merchant_id","publishableKeyLive","publishableKeyTest","TOKEN_KEY","USER_KEY","AUTHENTICATED_KEY","AuthContext","createContext","undefined","useAuth","context","useContext","Error","AuthProvider","children","authState","setAuthState","useState","user","token","authenticated","useEffect","async","SecureStore","getItemAsync","userString","JSON","parse","axios","defaults","headers","common","error","console","loadUserData","updateUserProfile","updatedUser","put","id","Authorization","updatedUserData","setItemAsync","stringify","log","response","data","msg","_jsx","Provider","value","onRegister","userData","uuid","v4","toString","post","onLogin","email","password","result","onLogout","deleteItemAsync","AsyncStorage","removeItem","addToFavorites","itemId","updatedFavorites","favoriteItems","removeFromFavorites","filter","fav","isFavorite","includes","productsApi","create","baseURL","params","tableName","showFilteredItems","ClientProductContext","useClientProduct","ClientProductProvider","products","setProducts","selectedProduct","setSelectedProduct","isLoading","setIsLoading","setError","getClientProducts","updateClientProduct","product","prevProducts","map","o","message","store_owner_id","storeID","get","getProducts","fetchedProducts","addClientProduct","postProduct","router","push","removeClientProduct","productId","delete","deleteProduct","selectProduct","CartContext","carts","addToCart","decreaseFromCart","totalSum","totalTax","totalShipping","grandTotal","deleteItemFromCart","quantity","clearData","CartProvider","setCarts","setTotalSum","setTotalShipping","setQuantity","loadCartItems","storedCarts","getItem","parsedCarts","calculateTotalSum","calculateGrandTotal","total","reduce","sum","item","price","calculateShipping","itemExistIndex","findIndex","cart","updatedCarts","setItem","newCartItem","newCartItems","AppUserContext","storesApi","ClientStoreContext","useClientStore","ClientStoreProvider","store","setStore","selectedStore","setSelectedStore","getClientStore","getStore","addStore","newStore","removeStore","selectStore","collectionsApi","CollectionContext","useClientCollection","CollectionProvider","collections","setCollections","selectedCollection","setSelectedCollection","updateCollection","collection","prevCollections","addCollection","postCollection","removeCollection","collectionId","deleteCollection","getClientCollections","getCollections","fetchedCollections","selectCollection","ordersApi","OrderContext","useClientOrder","OrderProvider","orders","setOrders","selectedOrder","setSelectedOrder","updateOrder","order","prevOrders","addOrder","postOrder","removeOrder","orderId","deleteOrder","getClientOrders","getOrders","fetchedOrders","selectOrder","ThemeContext","useTheme","ThemeProvider","systemColorScheme","useColorScheme","theme","setTheme","isDarkMode","CURRENCY_FORMATTER","Intl","NumberFormat","currency","style","convertToCurrency","number","format","formatPhoneNumber","phoneNumberString","cleanedPhoneNumber","replace","formattedPhoneNumber","length","ExternalLink","props","Link","target","href","onPress","e","Platform","OS","preventDefault","WebBrowser","openBrowserAsync","generateUUID","idLength","characters","i","charAt","Math","floor","random","stripeConverter","amountInCents","useClientOnlyValue","server","client","SAMPLE_ORDER_ITEMS","sku","title","color","size","image","total_price","width","height","weight","weight_unit","distance_unit","description","net_weight","value_amount","value_currency","origin_country","eccn_ear99","SAMPLE_ORDER_HISTORY","orderPlaced","orderEmailSent","orderPaymentReceived","inventoryCheck","orderProcessed","orderPackaged","orderShippingLabelGenerated","orderShipped","shippedDate","trackingNumber","deliveryConfirmed","orderDeliveryDate","orderReturned","orderReturnLabelGenerated","status","note","SAMPLE_FULL_ADDRESS","name","streetOne","streetTwo","city","state","zip","country","phone","is_residential","SAMPLE_PARCEL","mass_unit","metadata","test","SAMPLE_ORDER","stripe_id","index","order_status","items","userId","order_history","net_total","courier","shipping_label","return_label","from_address","to_address","parcel","type","coupon_code","referred_by","statement_descriptor","budget","order_placed_date","order_started_date","order_created_date","order_completed_date","tax","stripe_fee","afm_fee","shipping_cost","discount_amount","SAMPLE_PRODUCT","createdOn","active","on_sale","sale_price","slug","icon_name","category","images","included","materials","tags","brand","views","likes","isLiked","gender","color_code","condition","features","variant_type","variant_selected","variants","inventory","value_price","product_id","variantInfo","last_updated","item_type","ingredients","reviews","userName","comment","rating","sizes","year_made","ROUTES","onboarding_Page","login","register","saveSecurely","key","jsonValue","fetchSecurely","Dimensions","COLORS","light","text","background","tint","tabIconDefault","tabIconSelected","cardBackground","cardText","cardSecondaryText","cardPrice","cardBorder","dark","primary","secondary","tertiary","darkGray","green","forestGreen","lightGray","gray","gray2","gray3","offwhite","white","black","blue","red","orange","lightWhite","backgroundLight","backgroundMedium","backgroundDark","SIZES","xSmall","small","medium","large","xLarge","xxLarge","SHADOWS","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","BannerVOne","View","styles","container","_jsxs","bannerSection","Text","bannerTitle","bannerSubtitle","TouchableOpacity","flexDirection","editPreferences","Ionicons","arrow","StyleSheet","backgroundColor","borderRadius","padding","marginBottom","fontSize","fontWeight","marginLeft","marginTop","Divider","divider","PromoBannerCard","header","statusIcons","content","subtitleContainer","subtitle","arrowIcon","button","buttonText","Image","source","uri","footer","footerText","footerStats","flex","paddingHorizontal","justifyContent","time","alignItems","MyPressable","android_ripple","touchOpacity","restOfProps","Pressable","pressed","MyButton","buttonStyle","textStyle","ProductCardV2","imageContainer","details","numberOfLines","supplier","addBtn","marginEnd","overflow","aspectRatio","resizeMode","fontFamily","position","bottom","right","ProductCardView","useNavigation","asChild","borderWidth","borderColor","TalentCard","talentCard","profileImage","talentInfo","talentName","talentTitle","socialIcons","socialIcon","recommendation","experienceSection","experienceLabel","experienceValue","openToSection","openToLabel","openToValue","skillsSection","skill","chatButton","chatButtonText","scrollViewContent","paddingTop","headerTitle","searchSection","paddingVertical","searchInput","filterIcon","talentCount","marginRight","OrderCrudCard","navigation","navigate","orderImg","textContainer","orderTitle","alignContent","marginHorizontal","DeleteSectionView","deleteContainer","deleteLabel","deleteDescription","deleteButton","deleteButtonText","textAlign","SearchBarVOne","TextInput","placeholder","placeholderTextColor","filterSection","paddingLeft","paddingRight","ExtractSettings","ScrollView","contentContainerStyle","ProductRow","ActivityIndicator","errorContainer","errorText","_Fragment","FlatList","keyExtractor","renderItem","horizontal","columnGap","selectedProductContainer","selectedProductText","TopSectionHeaderV1","line1","store_name","line2","line3","welcomeTxtStyle","Carousel","animatedValue","useRef","Animated","Value","current","mankindStore","storeImages","about_object_image","doubleImageHero_left_image","profile_image","topContainer","showsHorizontalScrollIndicator","onScroll","event","nativeEvent","contentOffset","x","useNativeDriver","pagingEnabled","_","bottomContainer","inputRange","dotScale","interpolate","outputRange","extrapolate","dotContainer","borderStartColor","PagingDot","scale","pagingDot","transform","SectionHeader","store_type","HomeDesignOne","showsVerticalScrollIndicator","paddingBottom","appBarWrapper","appBar","location","cartCount","zIndex","cartNumber","SearchBarVOneButton","path","useRouter","Feather","searchIcon","TopHomeSeaction","isMenuVisible","setIsMenuVisible","MotiView","from","opacity","translateY","animate","transition","duration","delay","headerText","menuIcon","prev","titleContainer","mainTitle","subTitle","productList","productItem","welcome_image","translateX","shopNowButton","shopNowButtonText","lineHeight","top","letterSpacing","textTransform","HomeDesignTwo","card","marginVertical","healthTip","fontStyle","MyAlert","cancelText","updateText","onCancelPress","onUpdatePress","cancelable","React","Alert","alert","AuthLayout","Stack","screenOptions","headerShown","Screen","options","presentation","CoreLayout","AppProviders","RootLayout","colorScheme","DarkTheme","DefaultTheme","TabBarIcon","FontAwesome","TabLayout","Tabs","tabBarActiveTintColor","tabBarIcon","SettingsItemLink","iconName","label","option","FontAwesome5","optionText","upperSection","section","sectionTitle","borderBottomWidth","borderBottomColor","logoutButton","logoutText","generalStyles","center","CartCard","img","cardContent","SimpleLineIcons","ratingText","circleSizeContainer","circle","sizeCircle","sizeText","paymentApi","PaymentPayScreen","ready","setReady","clientSecret","setClientSecret","isPlatformPaySupported","confirmPlatformPayPayment","usePlatformPay","useFocusEffect","useCallback","setup","paymentData","amount","shipping_fee","shippingAmount","app_name","paymentJsonProps","createPaymentIntent","StripeProvider","publishableKey","merchantIdentifier","PlatformPayButton","applePay","cartItems","String","paymentType","PlatformPay","PaymentType","Immediate","merchantCountryCode","currencyCode","googlePay","testEnv","merchantName","billingAddressConfig","BillingAddressFormat","Full","isPhoneNumberRequired","isRequired","code","disabled","payButton","ButtonType","Buy","CartPageVOne","triggerValueChange","setTriggerValueChange","ListHeaderComponent","delteItemFromCart","ListFooterComponent","priceContainer","priceAndTitle","headerContainer","checkoutContainer","NoOrdersView","require","ClientOrderCard","setStatus","body","icon","date","statusContainer","getStatusStyle","fulfillOrderStatus","markAsShippedStatus","shippedStatus","defaultStatus","OrderDetailsPage","orderDetails","setOrderDetails","setTotal","address","setAddress","addressZip","setAddressZip","addressState","setAddressState","addressCity","setAddressCity","phoneNumber","setPhoneNumber","orderPlacedDate","setOrderPlacedDate","orderCompletedDate","setOrderCompletedDate","sectionHeader","Button","Linking","openURL","ClientOrdersView","headerRight","list","detailsLink","detailsLinkText","textDecorationLine","searchContainer","searchWrapper","searchBtn","FormInput","onChangeText","keyboardType","multiline","input","textArea","CreateClientOrderView","setTitle","setNote","to_address_name","setTo_address_name","to_address_streetOne","setTo_address_streetOne","to_address_streetTwo","setTo_address_streetTwo","to_address_city","setTo_address_city","to_address_state","setTo_address_state","to_address_zip","setTo_address_zip","to_address_country","setTo_address_country","to_address_phone","setTo_address_phone","to_address_email","setTo_address_email","formContainer","submitButton","newOrder","parseFloat","Date","toISOString","submitButtonText","textAlignVertical","ClientProductCard","activeStatus","inactiveStatus","ClientProductDetailsPage","productDetails","setProductDetails","ClientProductsView","CreateClientProductView","setPrice","setBrand","setCategory","setSku","newProduct","parseInt","CollectionPageVOne","cardImage","cardDetails","cardTitle","cardArtist","collectionsList","categories","CollectionPageVTwo","selectedCategory","setSelectedCategory","filteredProducts","toLowerCase","categoryButton","selectedCategoryButton","categoryText","selectedCategoryText","categoryContainer","categoryList","promoContainer","promoImage","promoTextContainer","promoTitle","promoSubtitle","promoDiscount","productListContainer","numColumns","productCard","productImage","productPrice","productName","productContainer","ListEmptyComponent","emptyMessage","maxHeight","left","margin","LoginComponentOne","setName","setEmail","setPassword","showAlert","loginAction","navError","imgContainer","form","secureTextEntry","store_ids","onboardingQ1","onboardingQ2","onboardingQ3","onboardingQ4","affiliate_link","role","birthday","todo_completed","username","phone_number","address_city","address_state","location_history","current_notification","notifications","payment_due","payment_due_date","payment_due_day","payment_monthly_amount","device_id","device_os_version","device_model","device_ip_address","device_battery_level","device_battery_statue","device_network_connectio_type","loyalty_date","payment_history_total","subscription_id","paid_subscriber","newsletter_subscriber","notification_subscriber","left_review","review_stars","testimonials","notify_arn","owner_notify_arn","gap","UserLoginTextFields","showPassword","setShowPassword","inputContainer","autoCapitalize","autoComplete","forgotPasswordText","loginButton","loginButtonText","logo","welcomeText","descriptionText","tabContainer","tab","activeTab","tabText","activeTabText","alignSelf","signupButton","termsText","checkboxContainer","passwordCriteria","UserRegisterTextFields","confirmedpassword","setConfirmedPassword","showConfirmPassword","setShowConfirmPassword","prevState","LoginComponentTwo","activeTabIsLogin","setActiveTabIsLogin","OnboardingPageThree","OnboardingPageTwo","initialSlides","imageFrom","imageTo","imageTransition","textFrom","textTo","textTransition","Slide","resetKey","StatusBar","OnboardingScreen","currentSlideIndex","setCurrentSlideIndex","setResetKey","ref","slides","setSlides","goToNextSlide","nextSlideIndex","offset","scrollToOffset","prevKey","skip","lastSlideIndex","SafeAreaView","flatListContent","onMomentumScrollEnd","contentOffsetX","currentIndex","round","indicatorContainer","indicator","buttonContainer","btn","btnText","navigationButtons","activeOpacity","btnSkipAndNext","skipButton","skipText","buttonSpacing","maxWidth","ProductDetailsPageVOne","useLocalSearchParams","detailsContainer","sectionSpacing","productTitle","productDescription","subscriptionText","previewButton","previewButtonText","variantContainer","variant","variantItem","variantImage","variantDetails","variantTitle","variantColor","variantPrice","variantDescription","reviewsContainer","review","reviewItem","reviewUserName","reviewTitle","reviewComment","checkoutButton","checkoutButtonText","sizingContainer","sizingItem","sizingText","inventoryText","sizingPrice","GlowButton","isPressed","setIsPressed","glow","buyButton","setTimeout","buyButtonText","ProductDetailsPageVThree","textOverlay","overlayTitle","overlaySubtitle","productInfo","productSubtitle","slice","priceSection","priceLabel","priceInfo","GlitterButton","flexGrow","colorOptions","colorCircle","selectedColorCircle","flexWrap","ProductDetailsPageVTwo","imageCarousel","salePrice","originalPrice","featuresContainer","featureItem","benefitsContainer","benefitItem","reviewsScrollView","addToCartButton","addToCartButtonText","variantsContainer","RegisterComponentTwo","SettingsPage","useSafeAreaInsets","SEOHeader","Head","CustomLink","url","SettingsPageWeb","WelcomePageOne","LinearGradient","colors","logoContainer","WelcomePageTwo","modalVisible","setModalVisible","barStyle","translucent","ImageBackground","backgroundImage","overlay","logoText","tagline","buttonPrimary","buttonPrimaryText","buttonSecondary","buttonSecondaryText","Modal","animationType","transparent","visible","onRequestClose","modalContainer","modalContent","closeButton","loadingContainer","noImageContainer","noImageText"],"mappings":"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"}