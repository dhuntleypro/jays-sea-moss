{"version":3,"file":"index.cjs.js","sources":["../src/utils/api.tsx","../src/utils/constants.tsx","../src/contexts/AuthContext.tsx","../src/api/productsApi.tsx","../src/contexts/ClientProductContext.tsx","../src/contexts/CartContext.tsx","../src/api/ordersApi.tsx","../src/contexts/OrderContext.tsx","../src/api/mankindProductApi.tsx","../src/contexts/MankindProductContext.tsx","../src/api/collectionsApi.tsx","../src/contexts/CollectionContext.tsx","../src/api/storeApi.tsx","../src/contexts/ClientStoreContext.tsx","../src/api/authorization.tsx","../src/contexts/AppUserContext.ts","../src/contexts/ThemeContext.tsx","../src/hooks/convertToCurrency.ts","../src/hooks/generateUUID.tsx","../src/hooks/stripeConverter.tsx","../src/hooks/useClientOnlyValue.ts","../src/utils/Routes.tsx","../src/utils/theme.tsx","../src/components/banner/BannerVOne.tsx","../src/components/divider/Divider.tsx","../src/components/banner/PromoBannerCard.tsx","../src/components/buttons/WhiteButton.tsx","../src/components/card/ProductCardV2.tsx","../src/components/card/ProductCardView.tsx","../src/components/card/TalentCard.tsx","../src/components/delete/DeleteSectionView.tsx","../src/components/search/SearchBarVOne.tsx","../src/components/extract/ExtractSetting.tsx","../src/components/other/cards/other/ProductRow.tsx","../src/components/pages/home/TopSectionHeader.tsx","../src/components/pages/home/Carousel.tsx","../src/components/pages/home/Headings.tsx","../src/components/home/HomeDesignOne.tsx","../src/components/search/SearchBarVOneButton.tsx","../src/components/home/TopHomeSeaction.tsx","../src/components/home/HomeDesignTwo.tsx","../src/components/layouts/AuthLayout.tsx","../src/components/layouts/CoreLayout.tsx","../src/components/layouts/RootLayout.tsx","../src/components/layouts/TabLayout.tsx","../src/components/link/SettingsItemLink.tsx","../src/components/other/general/Styles.tsx","../src/components/other/cart/CartCard.tsx","../src/api/paymentApi.tsx","../src/components/pages/cart/PaymentPayScreen.tsx","../src/components/pages/cart/CartPageVOne.tsx","../src/components/pages/client-order/ClientNoOrdersView.tsx","../src/components/pages/client-order/ClientOrderCard.tsx","../src/components/pages/client-order/ClientOrderDetails.tsx","../src/components/pages/client-order/ClientOrdersView.tsx","../src/models/OrderModelProps.ts","../src/components/pages/client-order/CreateClientOrderView.tsx","../src/components/pages/client-product/ClientProductCard.tsx","../src/components/pages/client-product/ClientProductDetails.tsx","../src/components/pages/client-product/ClientProductsView.tsx","../src/components/interfaces/FormImport.tsx","../src/components/pages/client-product/CreateClientProductView.tsx","../src/components/pages/collections/CollectionPageVOne.tsx","../src/components/pages/collections/CollectionPageVTwo.tsx","../src/components/pages/login/LoginComponentOne.tsx","../src/components/views/UserLoginTextFields.tsx","../src/components/views/UserRegisterTextFields.tsx","../src/components/pages/login/LoginComponentTwo.tsx","../src/components/pages/onboarding/OnboardingPageThree.tsx","../src/components/pages/onboarding/OnboardingPageTwo.tsx","../src/components/pages/onboarding/OnboardingScreen.tsx","../src/components/pages/product-details/ProductDetailsPageVOne.tsx","../src/components/buttons/GlitterButtom.tsx","../src/components/pages/product-details/ProductDetailsPageVThree.tsx","../src/components/pages/product-details/ProductDetailsPageVTwo.tsx","../src/components/pages/register/RegisterComponentTwo.tsx","../src/components/pages/settings/SettingsPage.tsx","../src/components/SEOHeader.tsx","../src/components/CustomLink.tsx","../src/components/pages/settings/SettingsPage.web.tsx","../src/components/pages/welcome/WelcomePageOne.tsx","../src/components/pages/welcome/WelcomePageTwo.tsx","../src/hooks/ExternalLink.tsx","../src/components/interfaces/MyAlert.tsx","../src/components/buttons/MyPressable.tsx","../src/hooks/formatPhoneNumber.ts"],"sourcesContent":["export const VERSION = 0.01;\n\nexport const STORE_TYPE = {\n  ecom: 'ecom',\n  blog: 'blog',\n  subscription: 'subscription',\n  appointment: 'appointment',\n};\n\n// AWS \n\nexport const API_ID = \"yiiuqhh3a3\"\nexport const BASE_URL =  `https://${API_ID}.execute-api.us-east-1.amazonaws.com/prod`\n\n\nexport const AWS_BASE_IMAGE = `https://${process.env.VITE_S3_ASSET_BUCKET_NAME}.s3.amazonaws.com`;\nexport const AWS_HOLDER_IMAGE = `https://appsformankind-assets.s3.amazonaws.com/Products/appoint/Flowers.png`\nexport const AWS_BASE_URL = `https://yiiuqhh3a3.execute-api.us-east-1.amazonaws.com/prod`;\n\nexport const AWS_BASE_URL_2 = `https://${process.env.VITE_API_ID_2}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod`;\n\n\nexport const AWS_VERIFY = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/verify`;\n\nexport const AWS_LOGIN_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/login`;\n\n\nexport const AWS_ORDERS_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/login`;\n\nexport const AWS_SUBSCRIBER_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/subscriber`;\n\n","\n\n\n\nexport const CONSTANTS = {\n    appName: \"\",\n    holderImageWelcome: 'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_1.jpg', \n    holderImageProductCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/boil-sea-moss.jpg', \n    holderImageCollectionCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/gel.jpg', \n    holderImageOrderCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/Irish_Sea_Moss.jpeg', \n    holderUserImage: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/moss.jpg', \n    \n    holderCarouselImageOne: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/rock.jpg', \n    holderCarouselImageTwo: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/seaweed.jpg', \n    holderCarouselImageThree:'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/waterfall.jpg', \n    holderImage: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/seamoss.jpg', \n    \n    mankind_store_id: \"DF6598F7\",\n    store_id: \"DF6598F7\", // \"P5V8A9ZE\",  \n    merchant_id: `merchant.com.dhuntleyinc.DevelopingAppsForMankind`,\n    publishableKeyLive: \"pk_live_51NVCh3JEHBX7gOQA7dW8kmXYPiToufrHpDzRZQ1vhxtUoNXrYXPWtMpELdWetWJhm6Wohk8PXc2ZF1UGfaBOFJl100GZWU6atY\",\n    publishableKeyTest: \"pk_test_51NVCh3JEHBX7gOQAjIjvMGNaHPmbWJov3iFEoLLOUS8oKf9wXowSES3piwS8AB57ml3ejDE1ZNf2tGyzMj7D0GlE007Ms2N4me\"\n         \n}\n\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as SecureStore from 'expo-secure-store';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport uuid from 'react-native-uuid';\nimport { BASE_URL } from \"../utils/api\";\nimport { CONSTANTS } from \"../utils/constants\";\nimport { UserProps } from \"../models/UserProps\";\n\ninterface AuthState {\n  user: UserProps | null;\n  token: string | null;\n  authenticated: boolean;\n}\n\ninterface AuthContextType {\n  authState: AuthState;\n  onRegister: (user: UserProps) => Promise<any>;\n  onLogin: (email: string, password: string) => Promise<any>;\n  onLogout: () => Promise<void>;\n  updateUserProfile: (updatedUser: Partial<UserProps>) => Promise<void>;\n  addToFavorites: (itemId: string) => Promise<void>;\n  removeFromFavorites: (itemId: string) => Promise<void>;\n  isFavorite: (itemId: string) => boolean;\n}\n\nexport const TOKEN_KEY = 'your_token_key_here';\nconst USER_KEY = 'your_user_key_here';\nconst AUTHENTICATED_KEY = 'authenticated_key_here';\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    token: null,\n    authenticated: false,\n  });\n\n  useEffect(() => {\n    const loadUserData = async () => {\n      try {\n        const token = await SecureStore.getItemAsync(TOKEN_KEY);\n        const userString = await SecureStore.getItemAsync(USER_KEY);\n        const authenticated = await SecureStore.getItemAsync(AUTHENTICATED_KEY);\n\n        if (token && userString && authenticated === 'true') {\n          const user = JSON.parse(userString);\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          setAuthState({\n            user,\n            token,\n            authenticated: true,\n          });\n        } else {\n          setAuthState({\n            user: null,\n            token: null,\n            authenticated: false,\n          });\n        }\n      } catch (error) {\n        console.error(\"Error loading user data:\", error);\n        setAuthState({\n          user: null,\n          token: null,\n          authenticated: false,\n        });\n      }\n    };\n\n    loadUserData();\n  }, []);\n\n  const onRegister = async (userData: UserProps): Promise<any> => {\n    userData.id = uuid.v4().toString();\n\n    try {\n      const result = await axios.post(\n        `${BASE_URL}/register?store_id=${CONSTANTS.store_id}&tableName=prof-website-user-table`,\n        userData\n      );\n      return result;\n    } catch (error: any) {\n      console.error(\"Registration error:\", error.data);\n      throw new Error(\n        error.response?.data?.msg || \"Registration failed. Please try again.\"\n      );\n    }\n  };\n\n  const onLogin = async (email: string, password: string): Promise<any> => {\n    try {\n      const result = await axios.post(\n        `${BASE_URL}/login?store_id=${CONSTANTS.store_id}&tableName=prof-website-user-table`,\n        { email, password }\n      );\n\n      const { user, token } = result.data;\n      await SecureStore.setItemAsync(TOKEN_KEY, token);\n      await SecureStore.setItemAsync(USER_KEY, JSON.stringify(user));\n      await SecureStore.setItemAsync(AUTHENTICATED_KEY, 'true');\n\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setAuthState({\n        user,\n        token,\n        authenticated: true,\n      });\n\n      return result;\n    } catch (error: any) {\n      console.error(\"Login error:\", error);\n      throw new Error(\n        error.response?.data?.msg || \"Login failed. Please try again.\"\n      );\n    }\n  };\n\n  const onLogout = async (): Promise<void> => {\n    try {\n      await SecureStore.deleteItemAsync(TOKEN_KEY);\n      await SecureStore.deleteItemAsync(USER_KEY);\n      await SecureStore.deleteItemAsync(AUTHENTICATED_KEY);\n      axios.defaults.headers.common['Authorization'] = '';\n      setAuthState({\n        user: null,\n        token: null,\n        authenticated: false,\n      });\n      await AsyncStorage.removeItem(\"carts\");\n      console.log(\"User logged out successfully.\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n      throw new Error(\"Logout failed. Please try again.\");\n    }\n  };\n\n  const updateUserProfile = async (updatedUser: Partial<UserProps>) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n\n      const result = await axios.put(\n        `${BASE_URL}/users/${authState.user.id}`,\n        updatedUser,\n        {\n          headers: {\n            Authorization: `Bearer ${authState.token}`,\n          },\n        }\n      );\n\n      const updatedUserData = { ...(authState.user as UserProps), ...updatedUser };\n      await SecureStore.setItemAsync(USER_KEY, JSON.stringify(updatedUserData));\n\n      setAuthState({\n        ...authState,\n        user: updatedUserData,\n      });\n\n      console.log(\"User profile updated successfully:\", updatedUserData);\n    } catch (error: any) {\n      console.error(\"Failed to update user profile:\", error);\n      throw new Error(\n        error.response?.data?.msg || \"Failed to update user profile.\"\n      );\n    }\n  };\n\n  // Favorites Management\n  const addToFavorites = async (itemId: string) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n      \n      const updatedFavorites = [...(authState.user.favoriteItems || []), itemId];\n      await updateUserProfile({ favoriteItems: updatedFavorites });\n    } catch (error) {\n      console.error(\"Failed to add to favorites:\", error);\n      throw new Error(\"Failed to add to favorites.\");\n    }\n  };\n\n  const removeFromFavorites = async (itemId: string) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n      \n      const updatedFavorites = (authState.user.favoriteItems || []).filter(fav => fav !== itemId);\n      await updateUserProfile({ favoriteItems: updatedFavorites });\n    } catch (error) {\n      console.error(\"Failed to remove from favorites:\", error);\n      throw new Error(\"Failed to remove from favorites.\");\n    }\n  };\n\n  const isFavorite = (itemId: string): boolean => {\n    return authState.user?.favoriteItems?.includes(itemId) || false;\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ \n        authState, \n        onRegister, \n        onLogin, \n        onLogout, \n        updateUserProfile, \n        addToFavorites, \n        removeFromFavorites, \n        isFavorite \n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n\n\n\n\n\n\n\n// Working...\n// import React, { createContext, useContext, useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import * as SecureStore from 'expo-secure-store';\n// import AsyncStorage from \"@react-native-async-storage/async-storage\";\n// import uuid from 'react-native-uuid';\n// import { BASE_URL } from \"../utils/api\";\n// import { CONSTANTS } from \"../utils/constants\";\n// import { UserProps } from \"../models/UserProps\";\n\n// interface AuthState {\n//   user: UserProps | null;\n//   token: string | null;\n//   authenticated: boolean;\n// }\n\n// interface AuthContextType {\n//   authState: AuthState;\n//   onRegister: (user: UserProps) => Promise<any>;\n//   onLogin: (email: string, password: string) => Promise<any>;\n//   onLogout: () => Promise<void>;\n//   updateUserProfile: (updatedUser: Partial<UserProps>) => Promise<void>;\n// }\n\n// export const TOKEN_KEY = 'your_token_key_here';\n// const USER_KEY = 'your_user_key_here';\n// const AUTHENTICATED_KEY = 'authenticated_key_here';\n\n// const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// export const useAuth = (): AuthContextType => {\n//   const context = useContext(AuthContext);\n//   if (!context) {\n//     throw new Error(\"useAuth must be used within an AuthProvider\");\n//   }\n//   return context;\n// };\n\n// export const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n//   const [authState, setAuthState] = useState<AuthState>({\n//     user: null,\n//     token: null,\n//     authenticated: false,\n//   });\n\n//   useEffect(() => {\n//     const loadUserData = async () => {\n//       try {\n//         const token = await SecureStore.getItemAsync(TOKEN_KEY);\n//         const userString = await SecureStore.getItemAsync(USER_KEY);\n//         const authenticated = await SecureStore.getItemAsync(AUTHENTICATED_KEY);\n\n//         if (token && userString && authenticated === 'true') {\n//           const user = JSON.parse(userString);\n//           axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n//           setAuthState({\n//             user,\n//             token,\n//             authenticated: true,\n//           });\n//         } else {\n//           setAuthState({\n//             user: null,\n//             token: null,\n//             authenticated: false,\n//           });\n//         }\n//       } catch (error) {\n//         console.error(\"Error loading user data:\", error);\n//         setAuthState({\n//           user: null,\n//           token: null,\n//           authenticated: false,\n//         });\n//       }\n//     };\n\n//     loadUserData();\n//   }, []);\n\n//   const onRegister = async (userData: UserProps): Promise<any> => {\n//     userData.id = uuid.v4().toString();\n\n//     try {\n//       const result = await axios.post(\n//         `${BASE_URL}/register?store_id=${CONSTANTS.store_id}&tableName=prof-website-user-table`,\n//         userData\n//       );\n//       return result;\n//     } catch (error: any) {\n//       console.error(\"Registration error:\", error.data);\n//       throw new Error(\n//         error.response?.data?.msg || \"Registration failed. Please try again.\"\n//       );\n//     }\n//   };\n\n//   const onLogin = async (email: string, password: string): Promise<any> => {\n//     try {\n//       const result = await axios.post(\n//         `${BASE_URL}/login?store_id=${CONSTANTS.store_id}&tableName=prof-website-user-table`,\n//         { email, password }\n//       );\n\n//       const { user, token } = result.data;\n//       await SecureStore.setItemAsync(TOKEN_KEY, token);\n//       await SecureStore.setItemAsync(USER_KEY, JSON.stringify(user));\n//       await SecureStore.setItemAsync(AUTHENTICATED_KEY, 'true');\n\n//       axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n//       setAuthState({\n//         user,\n//         token,\n//         authenticated: true,\n//       });\n\n//       return result;\n//     } catch (error: any) {\n//       console.error(\"Login error:\", error);\n//       throw new Error(\n//         error.response?.data?.msg || \"Login failed. Please try again.\"\n//       );\n//     }\n//   };\n\n//   const onLogout = async (): Promise<void> => {\n//     try {\n//       await SecureStore.deleteItemAsync(TOKEN_KEY);\n//       await SecureStore.deleteItemAsync(USER_KEY);\n//       await SecureStore.deleteItemAsync(AUTHENTICATED_KEY);\n//       axios.defaults.headers.common['Authorization'] = '';\n//       setAuthState({\n//         user: null,\n//         token: null,\n//         authenticated: false,\n//       });\n//       await AsyncStorage.removeItem(\"carts\");\n//       console.log(\"User logged out successfully.\");\n//     } catch (error) {\n//       console.error(\"Error logging out:\", error);\n//       throw new Error(\"Logout failed. Please try again.\");\n//     }\n//   };\n\n//   const updateUserProfile = async (updatedUser: Partial<UserProps>) => {\n//     try {\n//       if (!authState.user) throw new Error(\"No user to update\");\n\n//       const result = await axios.put(\n//         `${BASE_URL}/users/${authState.user.id}`,\n//         updatedUser,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authState.token}`,\n//           },\n//         }\n//       );\n\n//       const updatedUserData = { ...(authState.user as UserProps), ...updatedUser };\n//       await SecureStore.setItemAsync(USER_KEY, JSON.stringify(updatedUserData));\n\n//       setAuthState({\n//         ...authState,\n//         user: updatedUserData,\n//       });\n\n//       console.log(\"User profile updated successfully:\", updatedUserData);\n//     } catch (error: any) {\n//       console.error(\"Failed to update user profile:\", error);\n//       throw new Error(\n//         error.response?.data?.msg || \"Failed to update user profile.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <AuthContext.Provider\n//       value={{ authState, onRegister, onLogin, onLogout, updateUserProfile }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n","import axios, { AxiosError } from 'axios';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\nimport { ProductModelProps } from '../models/ProductModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { UserProps } from '../models/UserProps';\nimport { BASE_URL } from '../utils/api';\nimport { CONSTANTS } from '../utils/constants';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// import { ProductModelProps } from '../models/ProductModelProps';\n\n\n  const productsApi = axios.create({\n    baseURL: BASE_URL,\n    // headers: {\n    //    // Authorization: TOKEN_KEY,\n    //     'Content-Type': 'application/json',\n    // },\n    params: {\n      store_id: CONSTANTS.store_id,\n      // email: \"\", // user?.email ?? \"\",\n      tableName: 'prof-website-product-table', \n      showFilteredItems: true\n    },\n  });\n\n\n// GET\n  export const getProducts = async (storeID: string, email: string) => {\n    return await productsApi.get(`/products`, {\n      params: { \n        store_id: storeID, // CONSTANTS.store_id,// storeID,\n        email: email,\n      },\n      headers: { \n        Authorization: TOKEN_KEY ,\n        'Content-Type': 'application/json',\n\n      \n      },\n\n    });\n   \n  };\n  \n\nexport const getProduct = async (id: any) => {\n  return await productsApi.get(`/product?id=${id}`);\n};\n\n\n\nexport const postProduct = async (product: ProductModelProps, storeID: string, email: string, token: string) => {\n  console.log(`email:::::::: ${email}`)\n  \n  return await productsApi.post(`/product`, product, {\n    params: { \n      store_id: storeID, // The store ID as a query parameter\n      email: email,      // The email as a query parameter\n    },\n    headers: { \n      Authorization: token ,\n      'Content-Type': 'application/json',\n\n    \n    },\n});\n};\n\n\n\nexport const updateProduct = async (product: ProductModelProps) => {\n  return await productsApi.patch(`/product?id=${product.id}`, product);\n};\n\nexport const deleteProduct = async ({ id }: { id: any }) => {\n  console.log(id);\n  return await productsApi.delete(`/product?id=${id}`, id);\n};\n\n\nexport default productsApi;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const getProducts = async () => {\n//     return await productsApi.get(`/products`);\n//   };\n\n\n\n\n\n// export const getClientProducts = async (storeID: string, email: string) => {\n//   return await productsApi.get(`/products`, {\n//     params: {\n//       store_id: storeID, // CONSTANTS.store_id,// storeID,\n//       email: email,\n//     },\n\n//   });\n// };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import axios, { AxiosError } from 'axios';\n// import { ProductModelProps } from '../models/ProductModelProps';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n\n//   const productsApi = axios.create({\n//     baseURL: BASE_URL,\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n//     params: {\n//       tableName: 'prof-website-product-table', \n//       showFilteredItems: true\n//     },\n//   });\n\n\n//     // GET\n// export const getProducts = async (storeID: string, email: string) => {\n//   return await productsApi.get(`/products`, {\n//     params: {\n//       store_id: storeID, // CONSTANTS.store_id,// storeID,\n//       email: email,\n//     },\n\n//   });\n// };\n\n// // POST\n// export const postClientProduct = async (product: ProductModelProps) => {\n//   return await productsApi.post(`/product`, product, {\n//     params: {\n//       store_id: product.store_id,\n//       // email: \"\", // user?.email ?? \"\",\n//     }\n//   });\n// };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // UPDATE\n\n  // export const updateCLientProduct = async (product: ProductModelProps) => {\n//   return await productsApi.patch(`/product?id=${product.id}`, product);\n// };\n\n\n\n\n\n\n  // DELETE\n\n\n\n// export const getProducts = async (storeID: string, email: string) => {\n//   return await productsApi.get(`/products`, {\n//     params: {\n//       store_id: CONSTANTS.store_id,// storeID,\n//       email: email,\n//       tableName: 'prof-website-product-table', \n//       showFilteredItems: true\n//     },\n\n//   });\n// };\n\n\n\n\n\n\n\n\n\n\n\n// export const getProducts = async () => {\n//   const response = await productsApi.get('/products');\n//   console.log('Products:', response.data);\n\n//   return response.data;\n// };\n\n \n// export const getProducts = async () => {\n//   try {\n//     const response = await productsApi.get('/products');\n//     console.log('Products:', response.data);\n//     return response.data;\n//   } catch (error) {\n//     if (axios.isAxiosError(error)) {\n//       const axiosError = error as AxiosError;\n//       if (axiosError.response) {\n//         // The request was made, and the server responded with a status code outside of the 2xx range\n//         console.error('Status Code:', axiosError.response.status);\n//         console.error('Response Data:', axiosError.response.data);\n//       } else if (axiosError.request) {\n//         // The request was made, but no response was received\n//         console.error('No response received');\n//       }\n//     } else {\n//       // Handle non-Axios errors here\n//       // console.error('Non-Axios error:', error.message);\n//     }\n\n//   }\n// };\n\n\n\n\n\n\n\n// export const getProducts = async () => {\n//   const response = await productsApi.get('/products', {\n//     // params: { category: 'electronics' },\n//     // headers: { Authorization: 'Bearer token' },\n//   });\n//   return response;\n// };\n\n\n// export const getMankindProducts = async () => {\n//   return await productsApi.get(`/products`);\n// };\n\n\n\n// // export const getProducts = async () => {\n// //   return await productsApi.get(`/products`);\n// // };\n\n\n// export const getProducts = async (storeID: string, email: string) => {\n//   return await productsApi.get(`/products`, {\n//     params: {\n//       store_id: CONSTANTS.store_id,// storeID,\n//       email: email,\n//       tableName: 'prof-website-product-table', \n//       showFilteredItems: true\n//     },\n\n//   });\n// };\n\n// export const getClientProducts = async (storeID: string, email: string) => {\n//   const {authState } = useAuth()\n\n  \n//   return await productsApi.get(`/products`, {\n//     params: {\n//       store_id: authState?.user?.store_owner_id, // CONSTANTS.store_id,// storeID,\n//       email: email,\n//       tableName: 'prof-website-product-table', \n//       showFilteredItems: true\n//     },\n\n//   });\n// };\n\n// export const getClientProduct = async (id: any) => {\n//   return await productsApi.get(`/product?id=${id}`);\n// };\n\n// export const postClientProduct = async (product: ProductModelProps) => {\n//   return await productsApi.post(`/product`, product);\n// };\n\n// export const updateCLientProduct = async (product: ProductModelProps) => {\n//   return await productsApi.patch(`/product?id=${product.id}`, product);\n// };\n\n\n// // export const getProducts = async (storeID: string, email: string) => {\n// //   const response = await productsApi.get('/products', {\n// //     params: { \n// //       store_id: storeID, // user?.store_owner_id ?? \"\", // CONSTANTS.store_id,\n// //       email: email, // user?.email ?? \"\",\n// //       tableName: 'prof-website-product-table', \n// //       showFilteredItems: true\n// //     },\n// //     headers: { Authorization: TOKEN_KEY },\n// //   });\n\n// //   console.log(response)\n// //   return response;\n// // };\n\n\n\n\n\n// export const getProductsAttributes = async () => {\n//     const response = await productsApi.get('/products');\n//       const attributeNames = Object.keys(response.data[0]);\n  \n//     return attributeNames;\n//   };\n  \n\n// export const getProduct = async (id: any) => {\n//   return await productsApi.get(`/product?id=${id}`);\n// };\n\n// export const postProduct = async (product: ProductModelProps) => {\n//   return await productsApi.post(`/product`, product);\n// };\n\n// export const updateProduct = async (product: ProductModelProps) => {\n//   return await productsApi.patch(`/product?id=${product.id}`, product);\n// };\n\n// export const deleteProduct = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await productsApi.delete(`/product?id=${id}`, id);\n// };\n\n\n// export default productsApi;\n\n\n\n// import axios, { AxiosError } from 'axios';\n// import { ProductModelProps } from '../models/ProductModelProps';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// import { UserProps } from '../models/UserProps';\n// import { TOKEN_KEY, useAuth } from '../contexts/AuthContext';\n\n\n// const { authState } = useAuth();\n\n// // MANKIND\n//   const productsApi = axios.create({\n//     baseURL: BASE_URL,\n//     headers: {\n//         Authorization: \"token\",\n//         'Content-Type': 'application/json',\n//     },\n//     params: {\n//       store_id: CONSTANTS.store_id,\n//       // email: \"\", // user?.email ?? \"\",\n//       tableName: 'prof-website-product-table', \n//       showFilteredItems: true\n//     },\n//   });\n\n// // CLIENT\n//   const productsClientApi = axios.create({\n//     baseURL: BASE_URL,\n//     headers: {\n//         Authorization: authState?.token,\n//         'Content-Type': 'application/json',\n//     },\n//     params: {\n//       store_id: authState?.user?.store_owner_id ?? \"\", \n//       email: authState?.user?.email ?? \"\",\n//       tableName: 'prof-website-product-table', \n//       showFilteredItems: true\n//     },\n//   });\n\n\n// // GET\n//   export const getClientProducts = async () => {\n//     return await productsClientApi.get(`/products`)\n//   };\n\n// // POST\n// export const postClientProduct = async (product: ProductModelProps) => {\n//   return await productsClientApi.post(`/product`, product);\n// };\n\n\n// export const getClientProduct = async (id: any) => {\n//   return await productsClientApi.get(`/product?id=${id}`);\n// };\n\n\n\n// export const updateCLientProduct = async (product: ProductModelProps) => {\n//   return await productsClientApi.patch(`/product?id=${product.id}`, product);\n// };\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n// // export const getProducts = async () => {\n// //   const response = await productsApi.get('/products');\n// //   console.log('Products:', response.data);\n\n// //   return response.data;\n// // };\n\n \n// // export const getProducts = async () => {\n// //   try {\n// //     const response = await productsApi.get('/products');\n// //     console.log('Products:', response.data);\n// //     return response.data;\n// //   } catch (error) {\n// //     if (axios.isAxiosError(error)) {\n// //       const axiosError = error as AxiosError;\n// //       if (axiosError.response) {\n// //         // The request was made, and the server responded with a status code outside of the 2xx range\n// //         console.error('Status Code:', axiosError.response.status);\n// //         console.error('Response Data:', axiosError.response.data);\n// //       } else if (axiosError.request) {\n// //         // The request was made, but no response was received\n// //         console.error('No response received');\n// //       }\n// //     } else {\n// //       // Handle non-Axios errors here\n// //       // console.error('Non-Axios error:', error.message);\n// //     }\n\n// //   }\n// // };\n\n\n\n\n\n\n\n// // export const getProducts = async () => {\n// //   const response = await productsApi.get('/products', {\n// //     // params: { category: 'electronics' },\n// //     // headers: { Authorization: 'Bearer token' },\n// //   });\n// //   return response;\n// // };\n\n\n// export const getMankindProducts = async () => {\n//   return await productsApi.get(`/products`);\n// };\n\n\n\n// // export const getProducts = async () => {\n// //   return await productsApi.get(`/products`);\n// // };\n\n\n// export const getProducts = async (storeID: string, email: string) => {\n//   return await productsApi.get(`/products`, {\n//     params: {\n//       store_id: CONSTANTS.store_id,// storeID,\n//       email: email,\n//       tableName: 'prof-website-product-table', \n//       showFilteredItems: true\n//     },\n\n//   });\n// };\n\n\n// // export const getProducts = async (storeID: string, email: string) => {\n// //   const response = await productsApi.get('/products', {\n// //     params: { \n// //       store_id: storeID, // user?.store_owner_id ?? \"\", // CONSTANTS.store_id,\n// //       email: email, // user?.email ?? \"\",\n// //       tableName: 'prof-website-product-table', \n// //       showFilteredItems: true\n// //     },\n// //     headers: { Authorization: TOKEN_KEY },\n// //   });\n\n// //   console.log(response)\n// //   return response;\n// // };\n\n\n\n\n\n// export const getProductsAttributes = async () => {\n//     const response = await productsApi.get('/products');\n//       const attributeNames = Object.keys(response.data[0]);\n  \n//     return attributeNames;\n//   };\n  \n\n// export const getProduct = async (id: any) => {\n//   return await productsApi.get(`/product?id=${id}`);\n// };\n\n// export const postProduct = async (product: ProductModelProps) => {\n//   return await productsApi.post(`/product`, product);\n// };\n\n// export const updateProduct = async (product: ProductModelProps) => {\n//   return await productsApi.patch(`/product?id=${product.id}`, product);\n// };\n\n// export const deleteProduct = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await productsApi.delete(`/product?id=${id}`, id);\n// };\n\n\n// export default productsApi;\n\n\n\n\n\n// // export const getClientProducts = async () => {\n// //   return await productsApi.get(`/products`, {\n// //     params: {\n// //       store_id: authState?.user?.store_owner_id, // CONSTANTS.store_id,// storeID,\n// //       email: email,\n// //       tableName: 'prof-website-product-table', \n// //       showFilteredItems: true\n// //     },\n\n// //   });\n// // };\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { ProductModelProps } from \"../models/ProductModelProps\";\nimport { getProducts, postProduct, deleteProduct } from \"../api/productsApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"../components/interfaces/MyAlert\";\nimport { CONSTANTS } from \"../utils/constants\";\n\ninterface ProductContextProps {\n  products: ProductModelProps[];\n  addClientProduct: (product: ProductModelProps) => Promise<void>;\n  removeClientProduct: (productId: string) => Promise<void>;\n  updateClientProduct: (product: ProductModelProps) => Promise<void>;\n  getClientProducts: () => void;\n  selectedProduct: ProductModelProps | null;\n  selectProduct: (product: ProductModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const ClientProductContext = createContext<ProductContextProps | undefined>(undefined);\n\nexport const useClientProduct = () => {\n  const context = useContext(ClientProductContext);\n  if (!context) {\n    throw new Error(\"useClientProduct must be used within an ClientProductProvider\");\n  }\n  return context;\n}\n\nexport const ClientProductProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [products, setProducts] = useState<ProductModelProps[]>([]);\n  const [selectedProduct, setSelectedProduct] = useState<ProductModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // if (authState?.token) {\n    console.log(\"Getting store products...\")\n      getClientProducts(); // Initial load of products\n    // }\n  }, []);\n\n  const addClientProduct = async (product: ProductModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postProduct(product, storeID, email, token );\n      setProducts((prevProducts) => [...prevProducts, product]);\n      console.log(\"product added\", product );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add product:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Product not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeClientProduct = async (productId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteProduct({ id: productId });\n      setProducts((prevProducts) => prevProducts.filter(product => product.id !== productId));\n    } catch (error: any) {\n      console.error(\"Failed to remove product:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateClientProduct = async (product: ProductModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateClientProduct(product);\n      setProducts((prevProducts) => prevProducts.map(o => o.id === product.id ? product : o));\n    } catch (error: any) {\n      console.error(\"Failed to update product:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientProducts = async () => {\n    // if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = '';\n      const store_owner_id = CONSTANTS.store_id // authState.user.store_owner_id || '';\n\n      const response = await getProducts(store_owner_id, email);\n      const fetchedProducts = response.data;\n      setProducts(fetchedProducts);\n      console.log(\"Products Fetched !!\")\n    } catch (error: any) {\n      console.error(\"Failed to fetch products:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch products. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectProduct = (product: ProductModelProps) => {\n    setSelectedProduct(product);\n  };\n\n  return (\n    <ClientProductContext.Provider \n      value={{ \n        products, \n        addClientProduct, \n        removeClientProduct, \n        updateClientProduct, \n        getClientProducts, \n        selectedProduct, \n        selectProduct, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </ClientProductContext.Provider>\n  );\n};\n\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from \"@react-navigation/native\";\n\n// Define the interface for cart items\ninterface CartItem {\n  id: string;\n  price: number; // Add price property\n  quantity: number\n  // Add any other properties as needed\n}\n\n// Define the context type\ninterface CartContextType {\n  carts: CartItem[];\n  addToCart: (item: CartItem) => void;  \n  decreaseFromCart: (item: CartItem) => void;\n  totalSum: number;\n  totalTax:  number;\n  totalShipping :  number;\n  grandTotal:  number;\n  quantity: number;\n  \n  deleteItemFromCart: (item: CartItem) => void;\n  clearData: (item: CartItem) => void;\n}\n\n// Create the context with initial value\nexport const CartContext = createContext<CartContextType>({\n  carts: [],\n  addToCart: () => {}, // Placeholder function\n  decreaseFromCart: () => {},\n  totalSum: 0, // Initial total sum\n  totalTax: 0, \n  totalShipping : 0,\n  grandTotal: 0,\n  deleteItemFromCart:  () => {},\n  quantity: 0,\n  clearData:  () => {},\n});\n\n// Define the CartProvider component\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Initialize state for carts and totalSum\n  const [carts, setCarts] = useState<CartItem[]>([]);\n  const [totalSum, setTotalSum] = useState(0);\n  // const [totalTax, setTotalTax] = useState(0);\n  const [totalShipping, setTotalShipping] = useState(10);\n  // const [grandTotal, setGrandTotal] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n\n  const totalTax = (totalSum  + totalShipping ) / ( 8.875 )\n  const grandTotal = totalTax + totalSum\n\n  useEffect(() => {\n    loadCartItems(); // Load cart items on component mount\n\n    // if (quantity <= 0    ){ // || carts.length <= 0\n    //   setQuantity(0)\n    // }\n  }, []); // Empty dependency array ensures it only runs once on mount\n\n \n  // Function to load cart items from AsyncStorage\n  const loadCartItems = async () => {\n    try {\n      const storedCarts = await AsyncStorage.getItem(\"carts\");\n      if (storedCarts) {\n        const parsedCarts: CartItem[] = JSON.parse(storedCarts);\n        setCarts(parsedCarts);\n        calculateTotalSum(parsedCarts); // Calculate total sum\n        calculateGrandTotal(parsedCarts); // Calculate grand total\n        // calculateTax(parsedCarts);\n      \n      }\n    } catch (error) {\n      console.error(\"Error loading cart items:\", error);\n    }\n  };\n\n  // Function to add an item to the cart\n  const addToCart = async (item: CartItem) => {\n    try {\n      const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n\n      if (itemExistIndex !== -1) {\n        // Item already exists in the cart, update its quantity\n        const updatedCarts = [...carts];\n        updatedCarts[itemExistIndex] = {\n          ...updatedCarts[itemExistIndex],\n          quantity: updatedCarts[itemExistIndex].quantity + 1 // Increment quantity\n        };\n\n        await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n        setCarts(updatedCarts);\n\n        calculateTotalSum(updatedCarts); // Calculate total sum\n        calculateGrandTotal(updatedCarts); // Calculate grand total\n        // calculateTax(updatedCarts);\n\n\n      // Refetch payment intent (TEST)\n      // const paymentData = {\n      //   amount: stripeConverter(props.amount), // Example value, replace with your actual data\n      //   currency: \"USD\", // Example value, replace with your actual data\n      //   shipping_fee: stripeConverter(props.shippingAmount), // Example value, replace with your actual data\n      //   // (FIX) - USE STORE.STRIPE\n      //   stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n      //   app_name: CONSTANTS.appName // Example value, replace with your actual data\n      // };\n      \n      // const response = await createPaymentIntent(paymentData);\n      // console.log(response)\n \n\n\n\n\n  // };\n\n\n\n\n\n\n\n\n\n      } else {\n        // Item does not exist in the cart, add it as a new item\n        const newCartItem = { ...item, quantity: 1, price: item.price }; // Set quantity and price\n        const newCartItems = [...carts, newCartItem];\n        await AsyncStorage.setItem(\"carts\", JSON.stringify(newCartItems));\n        setCarts(newCartItems);\n\n        calculateTotalSum(newCartItems); // Calculate total sum\n        calculateGrandTotal(newCartItems); // Calculate grand total\n        calculateShipping(newCartItems); // Calculate shipping\n        // calculateTax(newCartItems);\n      }\n\n      // Update Quantity\n      setQuantity(quantity + 1);\n\n      // if (quantity <=0) {\n      //   setQuantity(0)\n      //   }\n\n    } catch (error) {\n      console.error(\"Error adding item to cart:\", error);\n    }\n  };\n\n\n    // // Function to add an item to the cart\n    // const decreaseFromCart = async (item: CartItem) => {\n    //   try {\n    //     const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n    //     if (itemExistIndex !== -1) {\n    //       // Item already exists in the cart, update its quantity\n    //       const updatedCarts = [...carts];\n    //       updatedCarts[itemExistIndex] = {\n    //         ...updatedCarts[itemExistIndex],\n    //         quantity: updatedCarts[itemExistIndex].quantity - 1 // Increment quantity\n    //       };\n  \n    //       await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n    //       setCarts(updatedCarts);\n  \n    //       calculateTotalSum(updatedCarts); // Calculate total sum\n    //       calculateGrandTotal(updatedCarts); // Calculate grand total\n    //       // calculateTax(updatedCarts);\n    //     }\n    //     // Update Quantity\n    //    //setQuantity(quantity - 1);\n    //   } catch (error) {\n    //     console.error(\"Error adding item to cart:\", error);\n    //   }\n    // };\n   // Function to add an item to the cart\n  //  const decreaseFromCart = async (item: CartItem) => {\n  //   try {\n  //     const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n  //     if (itemExistIndex !== -1) {\n  //       // Item already exists in the cart, update its quantity\n  //       const updatedCarts = [...carts];\n  //       if (updatedCarts[itemExistIndex].quantity > 1) {\n  //         // Decrement quantity only if it's greater than 1\n  //         updatedCarts[itemExistIndex] = {\n  //           ...updatedCarts[itemExistIndex],\n  //           quantity: updatedCarts[itemExistIndex].quantity - 1\n  //         };\n  //       }\n  \n  //       await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n  //       setCarts(updatedCarts);\n  \n  //       calculateTotalSum(updatedCarts); // Calculate total sum\n  //       calculateGrandTotal(updatedCarts); // Calculate grand total\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error decreasing item from cart:\", error);\n  //   }\n  // };\n  \n  const decreaseFromCart = async (item: CartItem) => {\n    try {\n\n     \n      const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n      if (itemExistIndex !== -1) {\n        // Item already exists in the cart, update its quantity\n        const updatedCarts = [...carts];\n        // if (updatedCarts[itemExistIndex].quantity > 1) {\n        //   // Decrement quantity only if it's greater than 1\n          updatedCarts[itemExistIndex] = {\n            ...updatedCarts[itemExistIndex],\n            quantity: updatedCarts[itemExistIndex].quantity - 1\n          };\n        // }\n        setQuantity(quantity - 1)\n  \n        await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n        setCarts(updatedCarts);\n  \n        calculateTotalSum(updatedCarts); // Calculate total sum\n        calculateGrandTotal(updatedCarts); // Calculate grand total\n      }\n      // if (quantity <=0) {\n      // setQuantity(0)\n      // }\n\n    } catch (error) {\n      console.error(\"Error decreasing item from cart:\", error);\n    }\n  };\n  \n// Function to delete an item from the cart\nconst deleteItemFromCart = async (item: CartItem) => {\n  try {\n    // Filter out the item from the carts array\n    const updatedCarts = carts.filter((cart) => cart.id !== item.id);\n\n    // Update AsyncStorage and state with the updated carts array\n    await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n    setCarts(updatedCarts);\n\n    // Recalculate total sum\n    calculateTotalSum(updatedCarts);\n    calculateGrandTotal(updatedCarts);\n    calculateShipping(updatedCarts);\n    // calculateTax(updatedCarts);\n\n    await AsyncStorage.removeItem(\"carts\");\n\n    setQuantity(quantity - item.quantity);\n    if (quantity <=0) {\n      setQuantity(0)\n      }\n    console.log(\"Item removed\");\n\n\n  } catch (error) {\n    console.error(\"Error deleting item from cart:\", error);\n  }\n};\n  // Function to clear all data from the cart\n  const clearData = async () => {\n    try {\n      setQuantity(0);\n      await AsyncStorage.removeItem(\"carts\");\n      setCarts([]);\n      setTotalSum(0);\n      // setTotalTax(0);\n      setTotalShipping(10);\n      // setGrandTotal(0);\n      setQuantity(0)\n    } catch (error) {\n      console.error(\"Error clearing data:\", error);\n    }\n  };\n\n  // Function to calculate the total sum of cart items\n  const calculateTotalSum = (carts: CartItem[]) => {\n    const total = carts.reduce((sum, item) => sum + item.price * item.quantity , 0);\n    setTotalSum(total);\n  };\n\n  // Function to calculate the total sum of cart items\n  const calculateGrandTotal = (carts: CartItem[]) => {\n    const grandTotal = carts.reduce((sum, item) => sum + totalSum + totalTax + totalShipping , 0);\n    // setGrandTotal(grandTotal);\n  };\n\n  // Function to calculate the total sum of cart items\n  // const calculateTax = (carts: CartItem[]) => {\n  //   const totalTax = carts.reduce((sum, item) => sum + item.price, 0);\n  //   setTotalSum(totalTax);\n  // };\n\n  // const calculateTax = (carts: CartItem[]) => {\n  //   // const totalTax = carts.reduce((sum, item) => sum + item.price, 0);\n  //   const totalTax = (totalSum  + totalShipping ) / ( 8.875 * 100 )\n  //   setTotalTax(totalTax);\n  // };\n\n  // Function to calculate the total sum of cart items\n  const calculateShipping = (carts: CartItem[]) => {\n    // const totalShipping = carts.reduce((sum, item) => sum + item.price , 0);\n    // setTotalSum(totalShipping);\n  };\n\n\n  // Create the value object to be passed to the context provider\n  const value: CartContextType = {\n    carts,\n    addToCart,\n    decreaseFromCart,\n    quantity,\n    totalSum,\n    totalTax,\n    totalShipping,\n    grandTotal,\n    deleteItemFromCart,\n    clearData\n  };\n\n  // Render the context provider with children\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n","import axios, { AxiosError } from 'axios';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\nimport { OrderModelProps } from '../models/OrderModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { UserProps } from '../models/UserProps';\nimport { BASE_URL } from '../utils/api';\nimport { CONSTANTS } from '../utils/constants';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// import { OrderModelProps } from '../models/OrderModelProps';\n\n\n  const ordersApi = axios.create({\n    baseURL: BASE_URL,\n    // headers: {\n    //    // Authorization: TOKEN_KEY,\n    //     'Content-Type': 'application/json',\n    // },\n    params: {\n      store_id: CONSTANTS.store_id,\n      // email: \"\", // user?.email ?? \"\",\n      tableName: 'prof-website-order-table', \n      showFilteredItems: true\n    },\n  });\n\n\n\n  export const getOrders = async (storeID: string, email: string) => {\n    return await ordersApi.get(`/orders`, {\n      params: { \n        store_id: storeID, // CONSTANTS.store_id,// storeID,\n        email: email,\n      },\n      headers: { \n        Authorization: TOKEN_KEY ,\n        'Content-Type': 'application/json',\n\n      \n      },\n\n    });\n   \n  };\n  \n\nexport const getOrder = async (id: any) => {\n  return await ordersApi.get(`/order?id=${id}`);\n};\n\n\n// export const getOrders = async () => {\n//     return await ordersApi.get(`/orders`);\n//   };\n\n\n\n\n\n// export const getClientOrders = async (storeID: string, email: string) => {\n//   return await ordersApi.get(`/orders`, {\n//     params: {\n//       store_id: storeID, // CONSTANTS.store_id,// storeID,\n//       email: email,\n//     },\n\n//   });\n// };\n\n\n\n\n\n\nexport const postOrder = async (order: OrderModelProps, storeID: string, email: string, token: string) => {\n  console.log(`email:::::::: ${email}`)\n  \n  return await ordersApi.post(`/order`, order, {\n    params: { \n      store_id: storeID, // The store ID as a query parameter\n      email: email,      // The email as a query parameter\n    },\n    headers: { \n      Authorization: token ,\n      'Content-Type': 'application/json',\n\n    \n    },\n});\n};\n\n\n\nexport const updateOrder = async (order: OrderModelProps) => {\n  return await ordersApi.patch(`/order?id=${order.id}`, order);\n};\n\nexport const deleteOrder = async ({ id }: { id: any }) => {\n  console.log(id);\n  return await ordersApi.delete(`/order?id=${id}`, id);\n};\n\n\nexport default ordersApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { OrderModelProps } from \"../models/OrderModelProps\";\nimport { getOrders, postOrder, updateOrder, deleteOrder } from \"../api/ordersApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"@/components/interfaces/MyAlert\";\n\ninterface OrderContextProps {\n  orders: OrderModelProps[];\n  addOrder: (order: OrderModelProps) => Promise<void>;\n  removeOrder: (orderId: string) => Promise<void>;\n  updateOrder: (order: OrderModelProps) => Promise<void>;\n  getClientOrders: () => void;\n  selectedOrder: OrderModelProps | null;\n  selectOrder: (order: OrderModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const OrderContext = createContext<OrderContextProps | undefined>(undefined);\n\nexport const useClientOrder = () => {\n  const context = useContext(OrderContext);\n  if (!context) {\n    throw new Error(\"useClientOrder must be used within an OrderProvider\");\n  }\n  return context;\n};\n\nexport const OrderProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [orders, setOrders] = useState<OrderModelProps[]>([]);\n  const [selectedOrder, setSelectedOrder] = useState<OrderModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // useEffect(() => {\n  //   if (authState?.token) {\n  //     getClientOrders(); // Initial load of orders\n  //   }\n  // }, [authState?.token]);\n\n  const addOrder = async (order: OrderModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postOrder(order, storeID, email, token );\n      setOrders((prevOrders) => [...prevOrders, order]);\n      console.log(\"order added\", order );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add order:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Order not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeOrder = async (orderId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteOrder({ id: orderId });\n      setOrders((prevOrders) => prevOrders.filter(order => order.id !== orderId));\n    } catch (error: any) {\n      console.error(\"Failed to remove order:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateOrder = async (order: OrderModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateOrder(order);\n      setOrders((prevOrders) => prevOrders.map(o => o.id === order.id ? order : o));\n    } catch (error: any) {\n      console.error(\"Failed to update order:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientOrders = async () => {\n    if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = authState.user.email || '';\n      const store_owner_id = authState.user.store_owner_id || '';\n\n      const response = await getOrders(store_owner_id, email);\n      const fetchedOrders = response.data;\n      setOrders(fetchedOrders);\n    } catch (error: any) {\n      console.error(\"Failed to fetch client orders:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch orders. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectOrder = (order: OrderModelProps) => {\n    setSelectedOrder(order);\n  };\n\n  return (\n    <OrderContext.Provider \n      value={{ \n        orders, \n        addOrder, \n        removeOrder, \n        updateOrder, \n        getClientOrders, \n        selectedOrder, \n        selectOrder, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </OrderContext.Provider>\n  );\n};\n","import axios, { AxiosError } from 'axios';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\nimport { ProductModelProps } from '../models/ProductModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { UserProps } from '../models/UserProps';\nimport { BASE_URL } from '../utils/api';\nimport { CONSTANTS } from '../utils/constants';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// import { ProductModelProps } from '../models/ProductModelProps';\n\n\n  const mankindProductsApi = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n    },\n    params: {\n      store_id: CONSTANTS.store_id,\n      // email: \"\", // user?.email ?? \"\",\n      tableName: 'prof-website-product-table', \n      showFilteredItems: true\n    },\n  });\n\n\n\n  export const getMankindProducts = async (storeID: string, email: string) => {\n    return await mankindProductsApi.get(`/products`, {\n      params: { \n        store_id: storeID, // CONSTANTS.store_id,// storeID,\n        email: email,\n      },\n      headers: { Authorization: TOKEN_KEY },\n    });\n   \n  };\n  \n\nexport const getProduct = async (id: any) => {\n  return await mankindProductsApi.get(`/product?id=${id}`);\n};\n\n\n\nexport const postProduct = async (product: ProductModelProps) => {\n  return await mankindProductsApi.post(`/product`, product);\n};\n\nexport const updateProduct = async (product: ProductModelProps) => {\n  return await mankindProductsApi.patch(`/product?id=${product.id}`, product);\n};\n\nexport const deleteProduct = async ({ id }: { id: any }) => {\n  console.log(id);\n  return await mankindProductsApi.delete(`/product?id=${id}`, id);\n};\n\n\nexport default mankindProductsApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { ProductModelProps } from \"../models/ProductModelProps\";\nimport { getMankindProducts as gmP } from \"../api/mankindProductApi\";\nimport { CONSTANTS } from \"../utils/constants\";\n\ninterface ProductContextProps {\n  products: ProductModelProps[];\n  addProduct: (product: ProductModelProps) => void;\n  removeProduct: (productId: string) => void;\n  getMankindProducts: () => void;\n  selectedProduct: ProductModelProps | null;\n  selectProduct: (product: ProductModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const MankindProductContext = createContext<ProductContextProps | undefined>(undefined);\n\nexport const useMankindProduct = () => {\n  const context = useContext(MankindProductContext);\n  if (!context) {\n    throw new Error(\"useMankindProduct must be used within a MankindProductProvider\");\n  }\n  return context;\n};\n\nexport const MankindProductProvider = ({ children }: { children: ReactNode }) => {\n  const [products, setProducts] = useState<ProductModelProps[]>([]);\n  const [selectedProduct, setSelectedProduct] = useState<ProductModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    getMankindProducts(); // Initial load of products\n  }, []);\n\n  const addProduct = (product: ProductModelProps) => {\n    setProducts((prevProducts) => [...prevProducts, product]);\n  };\n\n  const removeProduct = (productId: string) => {\n    setProducts((prevProducts) => prevProducts.filter(product => product.id !== productId));\n  };\n\n  const getMankindProducts = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = \"\"; // Replace with logic to get the current user's email\n      const response = await gmP(CONSTANTS.mankind_store_id, email);\n      const fetchedProducts = response.data; // Extract the data from the Axios response\n      setProducts(fetchedProducts);\n    } catch (error) {\n      console.error(\"Failed to fetch mankind products:\", error);\n      setError(\"Failed to fetch products. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectProduct = (product: ProductModelProps) => {\n    setSelectedProduct(product);\n  };\n\n  return (\n    <MankindProductContext.Provider \n      value={{ \n        products, \n        addProduct, \n        removeProduct, \n        getMankindProducts, \n        selectedProduct, \n        selectProduct, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </MankindProductContext.Provider>\n  );\n};\n","import axios, { AxiosError } from 'axios';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\nimport { CollectionModelProps } from '../models/CollectionModelProps';\nimport { BASE_URL } from '../utils/api';\n// import { CollectionModelProps } from '../models/CollectionModelProps';\n\n\n  const collectionsApi = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n        Authorization: \"token\",\n        'Content-Type': 'application/json',\n    },\n    params: {\n      tableName: 'prof-website-collection-table', \n      showFilteredItems: true\n    },\n  });\n\n\n\n  export const getCollections = async (storeID: string, email: string) => {\n    return await collectionsApi.get(`/collections`, {\n      params: {\n        store_id: storeID,\n        email: email // \"\", // user?.email ?? \"\",\n    \n      },\n    });\n  };\n\n\n  \n    \n  // export const getClientProducts = async (storeID: string, email: string) => {\n  //   return await productsApi.get(`/products`, {\n  //     params: {\n  //       store_id: storeID, // CONSTANTS.store_id,// storeID,\n  //       email: email,\n  //     },\n  \n  //   });\n  // };\n  \n\n\nexport const getCollection = async (id: any) => {\n  return await collectionsApi.get(`/collection?id=${id}`);\n};\n\n\n\n\n\n// export const postCollection = async (collection: CollectionModelProps) => {\n//   return await collectionsApi.post(`/collection`, collection);\n// };\n\n\nexport const postCollection = async (collection: CollectionModelProps, storeID: string, email: string, token: string) => {\n  console.log(`email:::::::: ${email}`)\n  \n  return await collectionsApi.post(`/collection`, collection, {\n    params: { \n      store_id: storeID, // The store ID as a query parameter\n      email: email,      // The email as a query parameter\n    },\n    headers: { \n      Authorization: token ,\n      'Content-Type': 'application/json',\n\n    \n    },\n});\n};\n\n\n\nexport const postClientCollection = async (collection: CollectionModelProps) => {\n  return await collectionsApi.post(`/collection`, collection, {\n    params: {\n      store_id: collection.store_id,\n      // email: \"\", // user?.email ?? \"\",\n    }\n  });\n\n};\n\n\n\n\nexport const updateCollection = async (collection: CollectionModelProps) => {\n  return await collectionsApi.patch(`/collection?id=${collection.id}`, collection);\n};\n\nexport const deleteCollection = async ({ id }: { id: any }) => {\n  console.log(id);\n  return await collectionsApi.delete(`/collection?id=${id}`, id);\n};\n\n\nexport default collectionsApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { CollectionModelProps } from \"../models/CollectionModelProps\";\nimport { getCollections, postCollection, updateCollection, deleteCollection } from \"../api/collectionsApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"@/components/interfaces/MyAlert\";\n\ninterface CollectionContextProps {\n  collections: CollectionModelProps[];\n  addCollection: (collection: CollectionModelProps) => Promise<void>;\n  removeCollection: (collectionId: string) => Promise<void>;\n  updateCollection: (collection: CollectionModelProps) => Promise<void>;\n  getClientCollections: () => void;\n  selectedCollection: CollectionModelProps | null;\n  selectCollection: (collection: CollectionModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const CollectionContext = createContext<CollectionContextProps | undefined>(undefined);\n\nexport const useClientCollection = () => {\n  const context = useContext(CollectionContext);\n  if (!context) {\n    throw new Error(\"useClientCollection must be used within an CollectionProvider\");\n  }\n  return context;\n};\n\n\nexport const CollectionProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [collections, setCollections] = useState<CollectionModelProps[]>([]);\n  const [selectedCollection, setSelectedCollection] = useState<CollectionModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n\n  const addCollection = async (collection: CollectionModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postCollection(collection, storeID, email, token );\n      setCollections((prevCollections) => [...prevCollections, collection]);\n      console.log(\"collection added\", collection );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add collection:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Collection not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeCollection = async (collectionId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteCollection({ id: collectionId });\n      setCollections((prevCollections) => prevCollections.filter(collection => collection.id !== collectionId));\n    } catch (error: any) {\n      console.error(\"Failed to remove collection:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateCollection = async (collection: CollectionModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateCollection(collection);\n      setCollections((prevCollections) => prevCollections.map(o => o.id === collection.id ? collection : o));\n    } catch (error: any) {\n      console.error(\"Failed to update collection:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientCollections = async () => {\n    if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = authState.user.email || '';\n      const store_owner_id = authState.user.store_owner_id || '';\n\n      const response = await getCollections(store_owner_id, email);\n      const fetchedCollections = response.data;\n      setCollections(fetchedCollections);\n    } catch (error: any) {\n      console.error(\"Failed to fetch client collections:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch collections. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectCollection = (collection: CollectionModelProps) => {\n    setSelectedCollection(collection);\n  };\n\n  return (\n    <CollectionContext.Provider \n      value={{ \n        collections, \n        addCollection, \n        removeCollection, \n        updateCollection, \n        getClientCollections, \n        selectedCollection, \n        selectCollection, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </CollectionContext.Provider>\n  );\n};\n\n\n","import axios from 'axios';\nimport { StoreModelProps } from '../models/StoreModelProps';\nimport { BASE_URL } from '../utils/api';\n\n// Configure Axios Instance\nconst storesApi = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    Authorization: 'token', // Replace with actual token logic if needed\n    'Content-Type': 'application/json',\n  },\n  params: {\n    tableName: 'prof-website-store-table',\n    showFilteredItems: true,\n  },\n});\n\n// -------------\n// GET STORE ATTRIBUTES\n// -------------\nexport const getStoreAttributes = async (): Promise<string[]> => {\n  try {\n    const response = await storesApi.get('/stores');\n    const attributeNames = Object.keys(response.data[0]);\n    return attributeNames;\n  } catch (error) {\n    console.error('Error fetching store attributes:', error);\n    throw error;\n  }\n};\n\n// -----------------\n// GET SINGLE STORE\n// -----------------\n\n\n\n\nexport const getStore = async (id: string) => {\n  try {\n    const response = await storesApi.get(`/store`, {\n      params: { id },\n    });\n    const store = response.data;\n    console.log('Store Fetched !!');\n\n    return store ? store : null;\n  } catch (error) {\n    console.error('Error fetching store:', error);\n    throw error;\n  }\n};\n\n// -------------\n// GET ALL STORES\n// -------------\nexport const getStores = async (): Promise<StoreModelProps[]> => {\n  try {\n    const response = await storesApi.get('/stores');\n    return response.data as StoreModelProps[];\n  } catch (error) {\n    console.error('Error fetching stores:', error);\n    throw error;\n  }\n};\n\n\n\n\n// -------------\n// CREATE STORE (POST)\n// -------------\nexport const postStore = async (store: StoreModelProps): Promise<StoreModelProps> => {\n  try {\n    const response = await storesApi.post('/store', store);\n    return response.data as StoreModelProps;\n  } catch (error) {\n    console.error('Error creating store:', error);\n    throw error;\n  }\n};\n\n// -------------\n// UPDATE STORE (PATCH)\n// -------------\n// Update store information (PATCH request)\nexport const updateStore = async (store: StoreModelProps, updateKey: string , updateValue: string): Promise<StoreModelProps> => {\n  try {\n    const response = await storesApi.patch(`/store`, {\n      id: store.id, // Ensure the ID is passed in the body\n      tableName: 'prof-website-store-table', // Add the required table name\n      updateKey: updateKey, // 'store_name', // This is an example; adjust based on your needs\n      updateValue: updateValue, // store.store_name, // Example; modify as needed for your updates\n    });\n    return response.data as StoreModelProps;\n  } catch (error) {\n    console.error('Error updating store:', error);\n    throw error;\n  }\n};\n\n// -------------\n// DELETE STORE\n// -------------\nexport const deleteStore = async (id: string): Promise<void> => {\n  try {\n    await storesApi.delete(`/store`, {\n      params: { id },\n    });\n  } catch (error) {\n    console.error('Error deleting store:', error);\n    throw error;\n  }\n};\n\nexport default storesApi;\n","\nimport React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport { StoreModelProps } from \"../models/StoreModelProps\";\nimport { getStore } from \"../api/storeApi\";\nimport { CONSTANTS } from \"../utils/constants\";\n\ninterface ClientStoreContextProps {\n  store: StoreModelProps | null;\n  addStore: (store: StoreModelProps) => void;\n  removeStore: (storeId: string) => void;\n  getClientStore: () => void;\n  selectedStore: StoreModelProps | null;\n  selectStore: (store: StoreModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\nexport const useClientStore = () => {\n  const context = useContext(ClientStoreContext);\n  if (!context) {\n    throw new Error(\"useClientStore must be used within a ClientStoreProvider\");\n  }\n  return context;\n};\n\nexport const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [store, setStore] = useState<StoreModelProps | null>(null);\n  const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // useEffect(() => {\n  //   if (authState?.token) {\n  //     getClientStore(); // Initial load of the store\n  //     console.log(\"Auth:::::::\")\n  //     console.log(authState?.token)\n  //   }\n  // }, [authState?.token]);\n\n\n  useEffect(() => {\n    // if (authState?.token) {\n    console.log(\"Getting store ...\")\n    getClientStore(); // Initial load of products\n    // }\n  }, []);\n\n\n  const addStore = (newStore: StoreModelProps) => {\n    setStore(newStore);\n  };\n\n  const removeStore = () => {\n    setStore(null);\n  };\n\n  const getClientStore = async () => {\n    // if (!authState) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const store_owner_id = CONSTANTS.store_id //  authState?.user?.store_owner_id || '';\n      const response = await getStore(store_owner_id);\n     // const fetchedStore = response?.data ; // Assuming the API returns a single store object\n      setStore(response);\n    } catch (error: any) {\n      console.error(\"Failed to fetch client store:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch store. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectStore = (store: StoreModelProps) => {\n    setSelectedStore(store);\n  };\n\n  return (\n    <ClientStoreContext.Provider \n      value={{ \n        store, \n        addStore, \n        removeStore, \n        getClientStore, \n        selectedStore, \n        selectStore, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </ClientStoreContext.Provider>\n  );\n};\n\n\n\n\n\n\n\n\n\n\n// import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\n// // import { StoreProps } from \"@/models/StoreModelProps\";\n// // import { getStores } from \"../api/storesApi\";\n// import { CONSTANTS } from \"@/utils/constants\";\n// import { useAuth } from \"./AuthContext\";\n// import { StoreModelProps } from \"../models/StoreModelProps\";\n// import { getStore } from \"../api/storeApi\";\n\n// interface StoreContextProps {\n//   stores: StoreModelProps[];\n//   addStore: (store: StoreModelProps) => void;\n//   removeStore: (storeId: string) => void;\n//   getClientStore: () => void;\n//   selectedStore: StoreModelProps | null;\n//   selectStore: (store: StoreModelProps) => void;\n//   isLoading: boolean;\n//   error: string | null;\n// }\n\n// const StoreContext = createContext<StoreContextProps | undefined>(undefined);\n\n// export const useClientStore = () => {\n//   const context = useContext(StoreContext);\n//   if (!context) {\n//     throw new Error(\"useClientStore must be used within an StoreProvider\");\n//   }\n//   return context;\n// };\n\n// export const StoreProvider = ({ children }: { children: ReactNode }) => {\n//   const { authState } = useAuth(); // Access authState from the AuthContext\n//   const [stores, setStores] = useState<StoreModelProps[]>([]);\n//   const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n//   const [isLoading, setIsLoading] = useState<boolean>(false);\n//   const [error, setError] = useState<string | null>(null);\n\n//   useEffect(() => {\n//     if (authState?.token) {\n//       getClientStore(); // Initial load of stores\n//     }\n//   }, [authState?.token]);\n\n//   const addStore = (store: StoreModelProps) => {\n//     setStores((prevStores) => [...prevStores, store]);\n//   };\n\n//   const removeStore = (storeId: string) => {\n//     setStores((prevStores) => prevStores.filter(store => store.id !== storeId));\n//   };\n\n//   const getClientStore = async () => {\n//     if (!authState) return;\n  \n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const store_owner_id = authState?.user?.store_owner_id || '';\n  \n//       console.log(`store_owner_id : ${store_owner_id}`);\n//       const response = await getStore(store_owner_id);\n  \n//       // Ensure the response and data are valid before setting state\n//       const fetchedStores = response?.data || []; \n//       setStores(Array.isArray(fetchedStores) ? fetchedStores : [fetchedStores]);\n//     } catch (error: any) {\n//       console.error(\"Failed to fetch stores:\", error.response?.data?.message || error.message);\n//       setError(error.response?.data?.message || \"Failed to fetch stores. Please try again later.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n  \n//   const selectStore = (store: StoreModelProps) => {\n//     setSelectedStore(store);\n//   };\n\n//   return (\n//     <StoreContext.Provider \n//       value={{ \n//         stores, \n//         addStore, \n//         removeStore, \n//         getClientStore, \n//         selectedStore, \n//         selectStore, \n//         isLoading, \n//         error \n//       }}\n//     >\n//       {children}\n//     </StoreContext.Provider>\n//   );\n// };\n","import axios from \"axios\";\nimport { UserProps } from \"../models/UserProps\";\nimport { BASE_URL } from \"../utils/api\";\n\nexport const authApi = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n      Authorization: \"token\",\n      'Content-Type': 'application/json',\n  },\n  params: {\n  \n    tableName: 'prof-website-user-table', \n    showFilteredItems: true\n  },\n});\n     \n\n// export const register = async (user: any) => {\n//     return await authApi.post('/register', user);\n// };\n\n// export const register = async (user: any) => {\n//   try {\n//     const result =  await authApi.post('/register', user);\n//     if (result) {\n//       login\n//     }\n//   } catch (error) {\n//     {/* @ts-ignore */}\n//     console.error(\"Error registering user:\",  error.response.data);\n//     {/* @ts-ignore */}\n//     return (error.response.data)\n//   }\n  \n// };\n\n\n\n  export const verify = async (user: any) => {\n    return await authApi.post('/verify', user);\n  };\n  \n  export const login = async (user: any) => {\n    return await authApi.post('/login', user);\n  };\n  \n  \n\n  \nexport const getUsers = async () => {\n  return await authApi.get(`/users`);\n};\n  \n\nexport const getClientUsers = async (storeID: string, email: string) => {\n  try {      \n    const response = await authApi.get(`/users`, {\n      params: {\n        store_id: storeID,\n        email: email, // Pass the email parameter here\n       \n      },\n    });\n\n    console.log(response.data)\n    return response.data; // Return the data from the response\n  } catch (error) {  \n    console.error(\"Error fetching client users:\", error);\n    throw error; // Rethrow the error after logging it\n  }\n};\n\n\n\nexport const updateUser = async (user: UserProps) => {\nreturn await authApi.patch(`/user?id=${user.id}`, user);\n};\n\nexport const deleteUser = async ({ id }: { id: any }) => {\nconsole.log(id);\nreturn await authApi.delete(`/user?id=${id}`, id);\n};\n\n","import { createContext } from \"react\";\n\ninterface UserContextType {\n  // Define your context properties and their types here\n}\n\nexport const AppUserContext = createContext<UserContextType | undefined>(undefined);\n ","import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { useColorScheme } from 'react-native';\n\ntype ThemeMode = 'light' | 'dark' | 'system';\n\ninterface ThemeContextProps {\n  theme: ThemeMode;\n  setTheme: (mode: ThemeMode) => void;\n  isDarkMode: boolean;\n}\n\nexport const ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const systemColorScheme = useColorScheme();\n  const [theme, setTheme] = useState<ThemeMode>('system');\n\n  const isDarkMode = theme === 'system' ? systemColorScheme === 'dark' : theme === 'dark';\n\n  useEffect(() => {\n    setTheme(isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, isDarkMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","const CURRENCY_FORMATTER = new Intl.NumberFormat(undefined, {\n    currency: 'USD',\n    style: 'currency'\n});\n\nexport function convertToCurrency(number: number) {\n    return CURRENCY_FORMATTER.format(number);\n}\n\nexport default convertToCurrency;","// import { v4 as uuidv4 } from 'uuid';\n// const uuid = uuidv4(); // Generate the UUID\n\n// generateUUID.ts\nexport const generateUUID = (idLength: number): string => {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < idLength; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};","\n export const stripeConverter = (amountInCents: number) => {\n    // Convert dollars to cents\n    const amount = amountInCents * 100;\n    \n    // Return the amount\n    return amount;\n};\n    ","// This function is web-only as native doesn't currently support server (or build-time) rendering.\nexport function useClientOnlyValue<S, C>(server: S, client: C): S | C {\n  return client;\n}\n","// import register from \"@/app/(auth)/register\";\n\nexport const ROUTES = {\n    onboarding_Page: \"/onboarding\",\n    login: \"/login\",\n    register: \"/register\",\n    products: \"/products\"\n\n\n}","import { Dimensions } from \"react-native\";\nconst { height , width } = Dimensions.get('window')\n\nconst tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\n\nconst COLORS = {\n  light: {\n    text: '#000000',\n    background: '#FFFFFF',\n    tint: '#0504aa', // Royal blue\n    tabIconDefault: '#CCCCCC',\n    tabIconSelected: '#0504aa',\n    cardBackground: '#FFFFFF',\n    cardText: '#000000',\n    cardSecondaryText: '#83829A',  // Gray\n    cardPrice: '#000000',\n    cardBorder: '#E0E0E0',\n  },\n  dark: {\n    text: '#FFFFFF',\n    background: '#000000',\n    tint: '#FFFFFF',\n    tabIconDefault: '#CCCCCC',\n    tabIconSelected: '#FFFFFF',\n    cardBackground: '#1C1C1E',  // Darker shade for cards in dark mode\n    cardText: '#FFFFFF',\n    cardSecondaryText: '#B0B0B0',  // Lighter gray\n    cardPrice: '#FFFFFF',\n    cardBorder: '#444444',  // Darker border for dark mode\n  },\n  primary: \"#3f5a36\",\n  secondary: \"#DDF0FF\",\n  tertiary: \"#FF7754\",\n  darkGray: '#333333',\n  green: '#8BC34A',\n  forestGreen: '#3f5a36',\n  lightGray: \"#F5F5F5\",\n  gray: \"#83829A\",\n  gray2: \"#C1C0C8\",\n  gray3: \"#d3d3d3\",\n  offwhite: \"#F3F4F8\",\n  white: \"#FFFFFF\",\n  black: \"#000000\",\n  blue: \"#0504aa\",  // Royal blue\n  red: \"#E81E4D\",\n  orange: \"#FF5733\",\n  lightWhite: \"#FAFAFC\",\n  backgroundLight: \"#F0F0F3\",\n  backgroundMedium: \"#B9B9B9\",\n  backgroundDark: \"#77777\",\n};\n\n\n\n\nconst SIZES = {\n    xSmall: 10,\n    small: 12,\n    medium: 16,\n    large: 20,\n    xLarge: 24,\n    xxLarge: 44,\n    height,\n    width\n}\n\nconst SHADOWS = {\n    small: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 2\n    },\n    medium: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 5.84,\n        elevation: 5\n    }\n}\n\nexport { COLORS, SIZES, SHADOWS }","import { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\n// import { COLORS } from '@/utils/theme'\nimport { Ionicons } from '@expo/vector-icons';\nimport { router } from 'expo-router';\nimport { COLORS } from '@/utils/theme';\n\n{/* Banner Section */}\n\nconst BannerVOne = () => {\n  return (\n    <View style={styles.container}>\n        <View style={styles.bannerSection}>\n          <Text style={styles.bannerTitle}>Customize Your Experience</Text>\n          <Text style={styles.bannerSubtitle}>\n          Manage your preferences, update account settings, and explore options to tailor your experience to your needs, even things like dark mode.\n          </Text>\n          <TouchableOpacity style={{ flexDirection: 'row',}} onPress={() => router.push('/appearance')}>\n          <Text style={styles.editPreferences}>Dark Mode</Text>\n          <Ionicons name=\"arrow-forward\" size={15} color=\"white\" style={styles.arrow} />\n          </TouchableOpacity>\n        </View>\n        </View>\n  )\n}\n\nexport default BannerVOne\n\nconst styles = StyleSheet.create({\n    container: {\n        // padding:16\n    },\n    bannerSection: {\n      backgroundColor: '#1C1C1E',\n      borderRadius: 15,\n      padding: 20,\n      marginBottom: 20,\n    },\n    bannerTitle: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: '#FFFFFF',\n      marginBottom: 10,\n    },\n  \n    bannerSubtitle: {\n      fontSize: 14,\n      color: COLORS.gray3,\n      marginBottom: 20,\n    },\n  \n    editPreferences: {\n      fontSize: 14,\n      color: COLORS.white,\n      fontWeight: 'bold',\n    },\n    \n    arrow : {\n      marginLeft: 10,\n      marginTop: 3,\n    },\n  });\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst Divider = () => {\n  return (\n    <View style={styles.divider}/>\n  )\n}\n\nexport default Divider\n\nconst styles = StyleSheet.create({\n\n    divider: {\n        height: 1,\n        backgroundColor:  '#EAEAEA',\n        marginTop: 10,\n        marginBottom: 10\n    }\n})","import React from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\nimport Divider from '@/components/divider/Divider';\n\nconst PromoBannerCard = () => {\n  const isDecider = true; // Assuming the condition is met. Replace with actual condition logic.\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <View style={styles.statusIcons}>\n          {/* Add status icons here */}\n        </View>\n      </View>\n      \n      <View style={styles.content}>\n        <Text style={styles.title}>Making —</Text>\n        <Text style={styles.title}>Days ` Better *</Text>\n        <View style={styles.subtitleContainer}>\n          <Text style={styles.subtitle}>Creating Economic - For Everyone.</Text>\n          {isDecider && (\n            <Ionicons name=\"arrow-forward\" size={24} color=\"#000\" style={styles.arrowIcon} />\n          )}\n        </View>\n        \n        <TouchableOpacity style={styles.button}>\n          <Text style={styles.buttonText}>Apply Now</Text>\n        </TouchableOpacity>\n        \n        <Image \n          source={{ uri: AWS_HOLDER_IMAGE }}\n          style={styles.image}\n        />\n      </View>\n     \n      <View style={styles.footer}>\n        <Text style={styles.footerText}>Active From 2018</Text>\n        <Divider />\n        <Text style={styles.footerStats}>1.2B</Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10,\n  },\n  time: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  statusIcons: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  content: {\n    marginTop: 30,\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n  },\n  subtitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  subtitle: {\n    fontSize: 16,\n  },\n  arrowIcon: {\n    marginLeft: 5,\n  },\n  button: {\n    backgroundColor: '#000',\n    padding: 15,\n    marginTop: 20,\n    borderRadius: 30,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n  },\n  image: {\n    width: '100%',\n    height: 200,\n    borderRadius: 15,\n    marginTop: 20,\n  },\n  footer: {\n    marginTop: 20,\n    // flexDirection: 'row',\n    // justifyContent: 'space-between',\n  },\n  footerText: {\n    fontSize: 20,\n  },\n  footerStats: {\n    fontSize: 48,\n    fontWeight: 'bold',\n  },\n});\n\nexport default PromoBannerCard;\n","import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet, ViewStyle, TextStyle } from 'react-native';\nimport {  MyButtonProps } from '../interfaces/MyButtonProps';\n\n\n\nconst MyButton: React.FC<MyButtonProps> = ({ onPress, title, buttonStyle, textStyle }) => {\n  return (\n    <TouchableOpacity style={[styles.button, buttonStyle]} onPress={onPress}>\n      <Text style={[styles.text, textStyle]}>{title}</Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default MyButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#FF6F61',\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: '#FFF',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n","import React, { FC, useContext } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\n// import { COLORS, SIZES } from '@/utils/theme';\nimport { Ionicons } from '@expo/vector-icons';\n// import { useNavigation } from '@react-navigation/native';\n// import { ProductModelProps } from '../../../models/ProductModelProps';\nimport { CartContext } from '@/contexts/CartContext';\n// import convertToCurrency from '../../../hook/convertToCurrency';\nimport { COLORS, SIZES } from '@/utils/theme';\n// import { Constants } from '@stripe/stripe-react-native';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Link } from 'expo-router';\n// import { ProductModelProps } from '@/app/models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport convertToCurrency from '@/hooks/convertToCurrency';\n// import { ProductModelProps } from '../../models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';;\n// import { CartContext } from '../../contexts/CartContext';\n\n export const ProductCardV2: FC<ProductModelProps> = (item) => {\n  // const navigation = useNavigation();\n  const { addToCart} = useContext(CartContext)\n\n  // const holderImage: string =  '../assets/images/adaptive-icon.png' ;\n\n  return ( \n    <View>\n      {/* @ts-ignore */}\n      <Link href={\"settings/\"}>\n    <TouchableOpacity onPress={() => {}}>\n    {/* <TouchableOpacity onPress={() => navigation.navigate(\"ProductDetails\", { item } as never)}> */}\n\n    {/* <TouchableOpacity onPressIn={() => navigation.navigate(\"ProductDetails\" as never)} >  */}\n\n      <View style={styles.container}>\n        {/* Image */}\n        <View style={styles.imageContainer}>\n          <Image style={styles.image} source={{ uri: item.image ? item.image : CONSTANTS.holderImageProductCard }} />\n        </View>\n\n        {/* Details */}\n        <View style={styles.details}>\n          <Text style={styles.title} numberOfLines={2}>{item.name}</Text>\n          <Text style={styles.supplier} numberOfLines={1}>{item.color_code}</Text>\n          <Text style={styles.price}>{convertToCurrency(item.price)}</Text>\n        </View>\n\n        {/* Button */}\n        <TouchableOpacity style={styles.addBtn} onPress={() => {addToCart(item)}}>\n          <Ionicons name='add-circle' size={35} color={COLORS.primary} />\n        </TouchableOpacity>\n      </View>\n    </TouchableOpacity>\n    </Link>\n   \n    </View>\n  );\n};\n\nexport default ProductCardV2;\n\n\n// export default ProductCardView; \n\nconst styles = StyleSheet.create({\n    container: {\n        width: 182,\n        height: 240,\n        marginEnd: 22,\n        borderRadius: SIZES.medium,\n        backgroundColor: COLORS.secondary,\n        // remove\n    },\n    imageContainer: {\n        flex: 1,\n        width: 170,\n        marginLeft: SIZES.small/2,\n        marginTop: SIZES.small/2,\n        borderRadius: SIZES.small,\n        overflow: \"hidden\"\n    },\n    image: {\n        aspectRatio: 1,\n        resizeMode: 'cover'\n    },\n    details: {\n        padding: SIZES.small,\n        \n \n    },\n    title: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.small ,\n        marginBottom: 2,\n        height: 35\n\n    },\n    supplier: {\n        fontFamily: \"regular\",\n        fontSize: SIZES.small,\n        color: COLORS.gray\n\n    },\n    price: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.medium,\n       \n    },\n    addBtn: {\n        position:\"absolute\",\n        bottom: SIZES.xSmall,\n        right: SIZES.xSmall,\n        \n\n\n    }\n\n})\n\n","import React, { FC, useContext } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image, Dimensions } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { CartContext } from '@/contexts/CartContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Link } from 'expo-router';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n\nconst { width } = Dimensions.get('window');\n\nconst ProductCardView: FC<{ product: ProductModelProps }> = ({ product }) => {\n  const navigation = useNavigation();\n  const { addToCart } = useContext(CartContext);\n  const { selectProduct } = useClientProduct();\n\n  const handleProductPress = () => {\n    selectProduct(product);\n  };\n\n  return (\n    <View>\n     <Link \n      href={`/products/${product.id}` as never}  \n      asChild\n     >\n        <TouchableOpacity onPress={handleProductPress}>\n          <View style={styles.container}>\n            {/* Image */}\n            <View style={styles.imageContainer}>\n              <Image \n                style={styles.image} \n                source={{ uri: product.images[0]}} \n              />\n            </View>\n\n            {/* Details */}\n            <View style={styles.details}>\n              <Text style={styles.title} numberOfLines={2}>{product.name}</Text>\n              <Text style={styles.supplier} numberOfLines={1}>{product.color_code}</Text>\n              <Text style={styles.price}>{convertToCurrency(product.price)}</Text>\n              {product.item_type === \"subscription\" && (\n                <Text style={{ fontSize: 10 }}>/per month</Text>\n              )}\n            </View>\n\n            {/* Button */}\n            <TouchableOpacity style={styles.addBtn} onPress={() => addToCart(product)}>\n              <Ionicons \n                name={product.item_type === \"subscription\" ? \"arrow-forward-circle-outline\" : 'add-circle'} \n                size={35} \n                color={COLORS.primary} \n              />\n            </TouchableOpacity>\n          </View>\n        </TouchableOpacity>\n      </Link>\n    </View>\n  );\n};\n\nexport default ProductCardView;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 162,\n    height: 240,\n    marginEnd: 22,\n    borderRadius: SIZES.medium,\n    backgroundColor: COLORS.secondary,\n    borderWidth: 2,\n    borderColor: 'black',\n  },\n  imageContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: SIZES.medium,\n    overflow: \"hidden\",\n    marginTop: SIZES.small / 2,\n  },\n  image: {\n    width: 142,\n    height: 142,\n    borderRadius: SIZES.small,\n    resizeMode: 'cover',\n    shadowOpacity: 400,\n    shadowColor: 'black',\n  },\n  details: {\n    padding: SIZES.small,\n  },\n  title: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.small,\n    marginBottom: 2,\n    height: 35,\n  },\n  supplier: {\n    fontFamily: \"regular\",\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  price: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.medium,\n  },\n  addBtn: {\n    position: \"absolute\",\n    bottom: SIZES.xSmall,\n    right: SIZES.xSmall,\n  }\n});\n","import { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\nimport { COLORS } from '@/utils/theme'\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\n\nconst TalentCard = () => {\n  const {authState} = useAuth()\n\n  return (\n    <View style={styles.talentCard}>\n          <Image \n            source={{ uri: AWS_HOLDER_IMAGE }} \n            style={styles.profileImage} \n          />\n          <View style={styles.talentInfo}>\n            <Text style={styles.talentName}>{authState?.user?.name}</Text>\n            <Text style={styles.talentTitle}>UX Researcher, Applause</Text>\n            <View style={styles.socialIcons}>\n              <Ionicons name=\"logo-linkedin\" size={20} color=\"#0077B5\" style={styles.socialIcon} />\n              <Ionicons name=\"globe-outline\" size={20} color=\"black\" style={styles.socialIcon} />\n            </View>\n            <Text style={styles.recommendation}>Highly recommended by 3 mentors</Text>\n            <View style={styles.experienceSection}>\n              <Text style={styles.experienceLabel}>Experience</Text>\n              <Text style={styles.experienceValue}>5 years 1 month</Text>\n            </View>\n            <View style={styles.openToSection}>\n              <Text style={styles.openToLabel}>Open to</Text>\n              <Text style={styles.openToValue}>Full Time Roles</Text>\n            </View>\n            <View style={styles.skillsSection}>\n              <Text style={styles.skill}>Product Management</Text>\n              <Text style={styles.skill}>+2</Text>\n            </View>\n          </View>\n          <TouchableOpacity style={styles.chatButton}>\n            <Text style={styles.chatButtonText}>Request to chat</Text>\n          </TouchableOpacity>\n        </View>\n  )\n}\n\nexport default TalentCard\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#F5F5F5',\n    },\n  \n    scrollViewContent: {\n      paddingHorizontal: 16,\n      paddingTop: 20,\n    },\n  \n    header: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 20,\n    },\n  \n    headerTitle: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      marginLeft: 10,\n    },\n    bannerSection: {\n      backgroundColor: '#1C1C1E',\n      borderRadius: 15,\n      padding: 20,\n      marginBottom: 20,\n    },\n    bannerTitle: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: '#FFFFFF',\n      marginBottom: 10,\n    },\n  \n    bannerSubtitle: {\n      fontSize: 14,\n      color: COLORS.gray3,\n      marginBottom: 20,\n    },\n  \n    editPreferences: {\n      fontSize: 14,\n      color: COLORS.white,\n      fontWeight: 'bold',\n    },\n    searchSection: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginBottom: 20,\n      backgroundColor: '#FFFFFF',\n      borderRadius: 10,\n      paddingHorizontal: 10,\n      paddingVertical: 12,\n    },\n    searchInput: {\n      flex: 1,\n      fontSize: 16,\n      color: '#000',\n    },\n    filterIcon: {\n      marginLeft: 10,\n    },\n  \n    arrow : {\n      marginLeft: 10,\n      marginTop: 3,\n  \n    },\n    talentCount: {\n      fontSize: 14,\n      color: '#A0A0A0',\n      marginBottom: 20,\n    },\n    talentCard: {\n      backgroundColor: '#FFFFFF',\n      borderRadius: 15,\n      padding: 20,\n      marginBottom: 20,\n    },\n    profileImage: {\n      width: 60,\n      height: 60,\n      borderRadius: 30,\n      marginBottom: 10,\n    },\n    talentInfo: {\n      marginBottom: 20,\n    },\n    talentName: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: '#000',\n      marginBottom: 5,\n    },\n    talentTitle: {\n      fontSize: 14,\n      color: '#A0A0A0',\n      marginBottom: 10,\n    },\n    socialIcons: {\n      flexDirection: 'row',\n      marginBottom: 10,\n    },\n    socialIcon: {\n      marginRight: 10,\n    },\n    recommendation: {\n      fontSize: 14,\n      color: '#A0A0A0',\n      marginBottom: 20,\n    },\n    experienceSection: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 10,\n    },\n    experienceLabel: {\n      fontSize: 14,\n      color: '#A0A0A0',\n    },\n    experienceValue: {\n      fontSize: 14,\n      color: '#000',\n    },\n    openToSection: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 10,\n    },\n    openToLabel: {\n      fontSize: 14,\n      color: '#A0A0A0',\n    },\n    openToValue: {\n      fontSize: 14,\n      color: '#000',\n    },\n    skillsSection: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 20,\n    },\n    skill: {\n      fontSize: 14,\n      color: '#4A90E2',\n      backgroundColor: '#EAF4FE',\n      paddingHorizontal: 8,\n      paddingVertical: 4,\n      borderRadius: 5,\n    },\n    chatButton: {\n      backgroundColor: '#1C1C1E',\n      borderRadius: 10,\n      paddingVertical: 15,\n      alignItems: 'center',\n    },\n    chatButtonText: {\n      fontSize: 16,\n      color: '#FFFFFF',\n      fontWeight: 'bold',\n    },\n  });\n  ","import { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\n\nconst DeleteSectionView = () => {\n  return (\n    <View style={styles.deleteContainer}>\n    <Text style={styles.deleteLabel}>Delete account</Text>\n    <Text style={styles.deleteDescription}>\n      Your account will be permanently removed from the application. All your data will be lost.\n    </Text>\n    <TouchableOpacity style={styles.deleteButton}>\n      <Text style={styles.deleteButtonText}>Delete account</Text>\n    </TouchableOpacity>\n  </View>\n  )\n}\n\nexport default DeleteSectionView\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n    },\n    header: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      marginBottom: 20,\n      textAlign: 'center',\n    },\n    \n    deleteContainer: {\n      marginTop: 20,\n    },\n    deleteLabel: {\n      fontSize: 18,\n      color: 'red',\n      fontWeight: 'bold',\n      marginBottom: 10,\n    },\n    deleteDescription: {\n      fontSize: 14,\n      color: '#555',\n      marginBottom: 10,\n    },\n    deleteButton: {\n      backgroundColor: 'red',\n      padding: 10,\n      borderRadius: 5,\n    },\n    deleteButtonText: {\n      color: '#fff',\n      textAlign: 'center',\n      fontWeight: 'bold',\n    },\n  });\n  \n  ","import React from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  StyleSheet,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { AWS_HOLDER_IMAGE } from \"@/utils/api\";\n// import Colors from \"@/constants/Colors\";\n// import { COLORS } from \"@/utils/theme\";\n// import { useAuth } from \"@/contexts/AuthContext\";\n\nconst SearchBarVOne = () => {\n  return (\n    <View>\n    <View style={styles.container}>\n      <View style={styles.searchSection}>\n        <TextInput\n          style={styles.searchInput}\n          placeholder=\"Search keywords\"\n          placeholderTextColor=\"#A0A0A0\"\n        />\n      </View>\n\n      <View style={styles.filterSection}>\n        <TouchableOpacity>\n          <Ionicons\n            name=\"options-outline\"\n            size={24}\n            color=\"black\"\n            style={styles.filterIcon}\n          />\n        </TouchableOpacity>\n      </View>\n\n      </View>\n    </View>\n  );\n};\n\nexport default SearchBarVOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n  },\n\n  talentCount: {\n    fontSize: 14,\n    color: \"#A0A0A0\",\n    marginBottom: 20,\n  },\n  searchSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    // backgroundColor: \"#transparent\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n    width: \"80%\",\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 16,\n    color: \"#000\",\n  },\n  filterSection: {\n    // marginLeft: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    marginLeft: 15,\n    // backgroundColor: \"#FFFFFF\",\n    // backgroundColor: \"#transparent\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  filterIcon: {\n    paddingLeft: 3,\n    paddingRight: 3,\n    // marginLeft: 10,\n    // flexDirection: \"row\",\n    // alignItems: \"center\",\n    // marginBottom: 20,\n    // backgroundColor: \"#FFFFFF\",\n    // borderRadius: 10,\n    // paddingHorizontal: 10,\n    // paddingVertical: 12,\n  },\n\n  arrow: {\n    marginLeft: 10,\n    marginTop: 3,\n  },\n});\n","import React from 'react';\nimport { View, Text, Image, TextInput, TouchableOpacity, ScrollView, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\n// import Colors from '@/constants/Colors';\nimport { COLORS } from '@/utils/theme';\nimport { useAuth } from '@/contexts/AuthContext';\nimport SearchBarVOne from '@/components/search/SearchBarVOne';\nimport BannerVOne from '../banner/BannerVOne';\nimport TalentCard from '../card/TalentCard';\n\nconst ExtractSettings = () => {\n\n  const {authState} = useAuth()\n  return (\n    <View style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollViewContent}>        \n        {/* Banner Section */}\n        <BannerVOne />\n\n        {/* Search Section */}\n        <SearchBarVOne />\n    \n        {/* Talent Card */}\n        <TalentCard />\n\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default ExtractSettings;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n  },\n\n  scrollViewContent: {\n    paddingHorizontal: 16,\n    paddingTop: 20,\n  },\n\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginLeft: 10,\n  },\n  bannerSection: {\n    backgroundColor: '#1C1C1E',\n    borderRadius: 15,\n    padding: 20,\n    marginBottom: 20,\n  },\n  bannerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 10,\n  },\n\n  bannerSubtitle: {\n    fontSize: 14,\n    color: COLORS.gray3,\n    marginBottom: 20,\n  },\n\n  editPreferences: {\n    fontSize: 14,\n    color: COLORS.white,\n    fontWeight: 'bold',\n  },\n  searchSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 16,\n    color: '#000',\n  },\n  filterIcon: {\n    marginLeft: 10,\n  },\n\n  arrow : {\n    marginLeft: 10,\n    marginTop: 3,\n\n  },\n  talentCount: {\n    fontSize: 14,\n    color: '#A0A0A0',\n    marginBottom: 20,\n  },\n  talentCard: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 15,\n    padding: 20,\n    marginBottom: 20,\n  },\n  profileImage: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginBottom: 10,\n  },\n  talentInfo: {\n    marginBottom: 20,\n  },\n  talentName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5,\n  },\n  talentTitle: {\n    fontSize: 14,\n    color: '#A0A0A0',\n    marginBottom: 10,\n  },\n  socialIcons: {\n    flexDirection: 'row',\n    marginBottom: 10,\n  },\n  socialIcon: {\n    marginRight: 10,\n  },\n  recommendation: {\n    fontSize: 14,\n    color: '#A0A0A0',\n    marginBottom: 20,\n  },\n  experienceSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  experienceLabel: {\n    fontSize: 14,\n    color: '#A0A0A0',\n  },\n  experienceValue: {\n    fontSize: 14,\n    color: '#000',\n  },\n  openToSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  openToLabel: {\n    fontSize: 14,\n    color: '#A0A0A0',\n  },\n  openToValue: {\n    fontSize: 14,\n    color: '#000',\n  },\n  skillsSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  skill: {\n    fontSize: 14,\n    color: '#4A90E2',\n    backgroundColor: '#EAF4FE',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 5,\n  },\n  chatButton: {\n    backgroundColor: '#1C1C1E',\n    borderRadius: 10,\n    paddingVertical: 15,\n    alignItems: 'center',\n  },\n  chatButtonText: {\n    fontSize: 16,\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n  },\n});\n","import {\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from \"react-native\";\nimport React from \"react\";\nimport { useAuth } from \"../../../../contexts/AuthContext\";\nimport { COLORS, SIZES } from \"@/utils/theme\";\nimport ProductCardView from \"@/components/card/ProductCardView\";\nimport { ProductModelProps } from \"@/models/ProductModelProps\";\n// import { useClientProduct } from \"@/contexts/ClientProductContext\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport { useClientProduct } from \"@/contexts/ClientProductContext\";\n\nexport interface ClientStateProps {\n  client: boolean;\n}\n\nconst ProductRow: React.FC<ClientStateProps> = ({ client }) => {\n  const { authState } = useAuth();\n  const storeID = client ? authState?.user?.store_owner_id || '' : CONSTANTS.store_id;\n  const email = authState?.user?.email || '';\n  const { products, selectedProduct, selectProduct, isLoading, error } = useClientProduct();\n\n  const handleProductSelect = (product: ProductModelProps) => {\n    selectProduct(product);\n  };\n\n  return (\n    <View style={styles.container}>\n      {isLoading ? (\n        <ActivityIndicator size=\"large\" color={COLORS.primary} />\n      ) : error ? (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>Error Loading Data: {error}</Text>\n        </View>\n      ) : (\n        <>\n          <FlatList\n            keyExtractor={(item: ProductModelProps) => item.id.toString()}\n            data={products}\n            renderItem={({ item }) => (\n              <TouchableOpacity onPress={() => handleProductSelect(item)}>\n                <ProductCardView product={item} />\n              </TouchableOpacity>\n            )}\n            horizontal\n            contentContainerStyle={{ columnGap: SIZES.medium }}\n          />\n          {/* {selectedProduct && (\n            <View style={styles.selectedProductContainer}>\n              <Text style={styles.selectedProductText}>\n                Selected Product: {selectedProduct.name}\n              </Text>\n            </View>\n          )} */}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default ProductRow;\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: SIZES.medium,\n    marginLeft: 12,\n  },\n  errorContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorText: {\n    color: COLORS.red,\n    fontSize: SIZES.medium,\n  },\n  selectedProductContainer: {\n    marginTop: SIZES.medium,\n    padding: SIZES.medium,\n    backgroundColor: COLORS.gray2,\n    borderRadius: SIZES.small,\n  },\n  selectedProductText: {\n    fontSize: SIZES.large,\n    fontWeight: 'bold',\n  },\n});\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { SafeAreaView } from 'react-native-safe-area-context'\n// import useFetchObject from '@/hooks/useFetchObject'\n// import { StoreProps } from '@/app/models/StoreProps'\n// import { getStore } from '../../api/storeApi'\n// import { Constants } from '@stripe/stripe-react-native'\nimport { CONSTANTS } from '@/utils/constants'\nimport useFetchObject from '@/hooks/useFetchObject'\n// import { StoreProps } from '@/models/StoreProps'\nimport { getStore } from '@/api/storeApi'\nimport { StoreModelProps } from '@/models/StoreModelProps'\nimport { useClientStore } from '@/contexts/ClientStoreContext'\n// import { StoreProps } from '@/app/models/StoreProps'\n\nconst TopSectionHeaderV1 = () => {\n  const { store } = useClientStore()\n  // const { data: store } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id));\n  // const { data: store } = useFetchObject<StoreProps>(() => getStore(authState?.user?.id));\n\n  return (\n    <View style={styles.container}>\n        <Text style={styles.line1}>{store?.store_name}</Text>\n        <Text style={[styles.line2, { marginTop: 0, color: COLORS.black }]}>We Build Apps</Text>\n    </View>\n  )\n}\n\n\nconst TopSectionHeaderV2 = () => {\n    return (\n      <View style={styles.container}>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.black }]}>Apps For</Text>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.primary }]}>Mankind</Text>\n      </View>\n    )\n  }\n\n  \n  const TopSectionHeaderV3 = () => {\n    return (\n      <View style={styles.container}>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.black }]}>Apps For</Text>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.primary }]}>Mankind</Text>\n      </View>\n    )\n  }\n\n  \n\n  export { TopSectionHeaderV1, TopSectionHeaderV2, TopSectionHeaderV3 };\n\nconst styles = StyleSheet.create({\n    container: {\n        width: \"100%\",\n        marginLeft: 15\n      },\n      line1: {\n        marginTop: 0, \n        color: COLORS.gray , \n        fontSize: 14\n      }, \n      line2: {\n        marginTop: 0, \n        color: COLORS.black , \n        fontSize: 33,\n        fontWeight: 700\n      },\n      line3: {\n        marginTop: 0, \n        color: COLORS.black , \n        fontSize: 14\n      },\n      welcomeTxtStyle: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.xxLarge -7, // Example value, replace with your own\n        marginTop: 0, // Example value, replace with your own\n        color:  '#000', // Use provided color or fallback to black if not provided\n          marginHorizontal: 12\n      },\n})","import React, { FC, FunctionComponent, useRef } from 'react';\nimport { Animated, Dimensions, FlatList, Image, StyleSheet, View } from 'react-native';\n// import useFetchObject from '@/hooks/useFetchObject';\n// import { StoreProps } from '@/app/models/StoreProps';\n// import { getStore } from '../../api/storeApi';\nimport { CONSTANTS } from '@/utils/constants';\nimport useFetchObject from '@/hooks/useFetchObject';\n// import { StoreProps } from '@/models/StoreProps';\nimport { getStore } from '@/api/storeApi';\nimport { StoreModelProps } from '@/models/StoreModelProps';\nimport { useClientStore } from '@/contexts/ClientStoreContext';\n// import { StoreProps } from '@/app/models/StoreProps';\n\n// const images: string[] = [\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_1.jpg',\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_3.jpg',\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_4.jpg',\n// ];\n\nconst { width } = Dimensions.get('screen');\n\nconst Carousel: FunctionComponent = () => {\n  const animatedValue = useRef(new Animated.Value(0)).current;\n  // const { data: mankindStore } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id));\n  // const { data: store } = useFetchObject<StoreProps>(() => getStore(authState?.user?.id));\n\n  const { store : mankindStore } = useClientStore()\n  const storeImages: string[] = [\n    mankindStore?.images.about_object_image ?? CONSTANTS.holderCarouselImageOne,\n    mankindStore?.images.doubleImageHero_left_image ?? CONSTANTS.holderCarouselImageTwo,\n    mankindStore?.images.profile_image ?? CONSTANTS.holderCarouselImageThree\n  ]\n\n  return (\n    <View style={style.container}>\n      <View style={style.topContainer}>  \n        <Animated.FlatList\n          data={storeImages}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          onScroll={Animated.event(\n            [{ nativeEvent: { contentOffset: { x: animatedValue } } }],\n            { useNativeDriver: false },\n          )}\n          pagingEnabled={true}\n          keyExtractor={(_, index) => index.toString()}\n          renderItem={({ item }) => {\n            return (\n              <View style={style.imageContainer}>\n                <Image style={style.image} source={{ uri: item ? item : CONSTANTS.holderImage }} />\n              </View>\n            );\n          }}\n        />\n      </View>\n      <View style={style.bottomContainer}>\n        <FlatList\n          horizontal\n          data={storeImages}\n          keyExtractor={(_, index) => index.toString()}\n          renderItem={({ index }) => {\n            const inputRange = [\n              (index - 1) * width,\n              index * width,\n              (index + 1) * width,\n            ];\n            //  [ middle none selected color , selected color, none selected color  ]\n            const colorOutputRange = ['#000', '#fff', '#000'];\n            const scaleOutputRange = [1, 2, 1];\n            const dotScale = animatedValue.interpolate({\n              inputRange,\n              outputRange: scaleOutputRange,\n              extrapolate: 'clamp',\n            });\n            const color = animatedValue.interpolate({\n              inputRange,\n              outputRange: colorOutputRange,\n              extrapolate: 'clamp',\n            });\n            return (\n              <View  style={[style.dotContainer, { borderStartColor:  'clear'}]}>\n\n                <PagingDot color={color} scale={dotScale} />\n               \n\n              </View>\n            );\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst PagingDot: FC<{ scale: any, color: any }> = ({ scale, color }) => {\n  return (\n    <Animated.View\n      style={[style.pagingDot, { backgroundColor: color, transform: [{ scale }] }]}\n    />\n  );\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 3,\n  },\n  topContainer: {\n    flex: 2,\n  },\n  bottomContainer: {\n    flex: 1,\n    width,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'absolute', \n   bottom: 10\n  },\n  imageContainer: {\n    justifyContent: 'flex-end',\n    // paddingBottom: 40,\n    alignItems: 'center',\n    width,\n  },\n  image: {\n    width: '92%',\n    height: 220,\n    borderRadius: 15,\n  },\n  pagingDot: {\n    width: 7,\n    height: 7,\n    borderRadius: 7,\n    borderWidth: 2,\n    // borderColor: \"#000\",\n  },\n  dotContainer: {\n   width: 30,\n   padding: 10,\n  \n  },\n});\n\nexport default Carousel;\n\n\n","import { Pressable, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { Ionicons } from \"@expo/vector-icons\"\nimport { Link } from 'expo-router'\nimport { useClientStore } from '@/contexts/ClientStoreContext'\nimport { ROUTES } from '@/utils/Routes'\n// import EditScreenInfo from '../EditScreenInfo'\n\nconst SectionHeader = () => {\n    const { store } = useClientStore()\n\n  return (\n    <View style={styles.container}>\n        <View style={styles.header}>\n            <Text style={styles.headerTitle}>{store?.store_type ?? \"\"}</Text>\n            <Link href={ROUTES.products as never} asChild>\n            <TouchableOpacity>\n            {/* <TouchableOpacity onPress={() => navigation.navigate(\"ProductDetails\", { item })}> */}\n                    <Ionicons name='grid' size={SIZES.xLarge} color={COLORS.primary}/>\n            </TouchableOpacity>\n            </Link>\n        </View>\n   \n    </View>\n  )\n}\n\nexport default SectionHeader\n\nconst styles = StyleSheet.create({\n    container: {\n        marginTop: SIZES.medium,\n        // marginBottom: SIZES.xSmall,\n        marginHorizontal: 12,\n    },\n    header: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n\n    },\n    headerTitle: {\n       fontWeight: 'bold',\n        fontSize: SIZES.xLarge -2\n    }\n})\n\n\n","import React, { FC } from 'react'\nimport { TouchableOpacity, Text, View , ScrollView } from 'react-native'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { StyleSheet } from \"react-native\";\n// import { COLORS, SIZES } from \"../utils/theme\";\n\nimport { Ionicons , Fontisto} from '@expo/vector-icons'\n// import { TopSectionHeaderV1 } from '@/components/home/TopSectionHeader';\n// import SearchBar from '@/components/other/general/SearchBar';\n// import Carousel from '@/components/home/Carousel';\n// import SectionHeader from '@/components/home/Headings';\nimport ProductRow from '@/components/other/cards/other/ProductRow';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { TopSectionHeaderV1 } from '@/components/pages/home/TopSectionHeader';\nimport Carousel from '@/components/pages/home/Carousel';\nimport SectionHeader from '@/components/pages/home/Headings';\nimport { useClientStore } from '@/contexts/ClientStoreContext';\nimport SearchBar from '../search/SearchBar';\nimport SearchBarVOne from '../search/SearchBarVOne';\n\n\nconst HomeDesignOne: FC = () => {\n    const { store } = useClientStore()\n\n    return (\n \n        <ScrollView \n          showsVerticalScrollIndicator={false} \n          style={{\n            backgroundColor: 'white',\n            paddingTop: 10\n\n            \n          }}>\n            <TopSectionHeaderV1 />\n            <SearchBarVOne />\n            <Carousel />\n            <SectionHeader /> \n           <ProductRow client={false} />\n           <View style={{paddingBottom: 200}}></View>\n\n        </ScrollView>\n  \n\n  )\n}\n\n\nexport default HomeDesignOne \n\n\n\nconst styles = StyleSheet.create({\n  textStyle: {\n      fontFamily: \"bold\",\n      fontSize: 40\n  },\n  appBarWrapper: {\n      marginHorizontal: 22,\n      marginTop: SIZES.small\n  },\n  appBar: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n  },\n  location: {\n      fontFamily: \"semibold\",\n      fontSize: SIZES.medium,\n      color: COLORS.gray\n  },\n  cartCount: {\n      position: \"absolute\",\n      bottom: 16,\n      width: 16,\n      height: 16,\n      borderRadius: 8,\n      alignItems: \"center\",\n      backgroundColor: \"green\",\n      justifyContent: \"center\",\n      zIndex: 999\n  },\n  cartNumber: {\n      fontFamily: \"regular\",\n      fontWeight: \"600\",\n      fontSize: 10,\n      color: COLORS.lightWhite\n  }\n\n})\n// function useClientStore(): { store: any; } {\n//     throw new Error('Function not implemented.');\n// }\n\n","import React, { FC } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { COLORS } from \"@/utils/theme\";\nimport { useRouter, Href } from \"expo-router\";\n\ninterface SearchBarVOneButtonProps {\n  path: Href;  // Update the type to Href\n}\n\nconst SearchBarVOneButton: FC<SearchBarVOneButtonProps> = ({ path }) => {\n  const router = useRouter();\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={() => { router.push(path); }}  // Use the correctly typed path\n        style={styles.searchSection}\n      >\n        <View style={styles.searchInput}>\n          <Text style={{ color: COLORS.gray }}>Search keywords</Text>\n        </View>\n      </TouchableOpacity>\n\n      <View style={styles.filterSection}>\n        <TouchableOpacity onPress={() => { router.push(\"/search\"); }}>\n          <Feather name=\"search\" size={24} style={styles.searchIcon} />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default SearchBarVOneButton;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n  },\n  searchIcon: {\n    marginHorizontal: 10,\n    color: COLORS.gray,\n  },\n  searchSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n    width: \"80%\",\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 16,\n    color: \"#000\",\n  },\n  filterSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginLeft: 15,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\nimport { View as MotiView } from \"moti\";\n// import RoundedButton from \"@/app/(tabs)/(home)/(drawer)/(component-library)/lib-buttons/[roundedButton]\";\nimport { COLORS } from \"@/utils/theme\";\nimport { Link, router } from \"expo-router\";\nimport SearchBarVOne from \"../search/SearchBarVOne\";\nimport SearchBar from \"../search/SearchBar\";\nimport SearchBarVOneButton from \"../search/SearchBarVOneButton\";\nimport { ROUTES } from \"@/utils/Routes\";\n// import SearchBar from \"@/components/other/general/SearchBar\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst TopHomeSeaction: React.FC = () => {\n  const { store } = useClientStore();\n\n  const [isMenuVisible, setIsMenuVisible] = useState(true);\n\n  const handleMenuPress = () => {\n    // Toggle the visibility of the menu icon\n    setIsMenuVisible((prev) => !prev);\n  };\n\n\n  return (\n    <View style={styles.container}>\n      {/* Header */}\n      <View style={styles.header}>\n        <MotiView\n          key={`menu`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: 1, translateY: 0, scale: 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay: 1200,\n          }}\n        >\n          <Text style={styles.headerText}>Welcome to</Text>\n        </MotiView>\n        <MotiView\n          key={`i`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: 1, translateY: 0, scale: 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay: 1300,\n          }}\n        >\n          <TouchableOpacity style={styles.menuIcon} onPress={handleMenuPress}>\n            <Ionicons name=\"menu-outline\" size={24} color=\"black\" />\n          </TouchableOpacity>\n        </MotiView>\n      </View>\n\n      {/* Title */}\n      <View style={styles.titleContainer}>\n        <Text style={styles.mainTitle}>Jays</Text>\n        <MotiView\n          key={`sea`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: -10 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay: 1400,\n          }}\n        >\n          <Text style={styles.subTitle}>Sea Moss</Text>\n        </MotiView>\n      </View>\n\n      {/* Product List */}\n      <View style={styles.productList}>\n        <MotiView\n          key={`t1`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          // animate={{ opacity: 1, translateY: 0, scale: 1 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 600 : 0,\n          }}\n        >\n          <Text style={styles.productItem}> All Products</Text>\n        </MotiView>\n        <MotiView\n          key={`t2`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 700 : 0,\n          }}\n        >\n          <Text style={styles.productItem}>Raw Sea Moss</Text>\n        </MotiView>\n        <MotiView\n          key={`t3`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 800 : 0,\n          }}\n        >\n          <Text style={styles.productItem}>Sea Moss Gel</Text>\n        </MotiView>\n        <MotiView\n          key={`t4`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 900 : 0,\n          }}\n        >\n          <Text style={styles.productItem}>Sea Moss Capsules</Text>\n        </MotiView>\n        <MotiView\n          key={`t5`} // Force re-render to reset animation\n          from={{ opacity: 0, translateY: 50, scale: 0.85 }}\n          animate={{ opacity: isMenuVisible ? 1 : 0, translateY: isMenuVisible ? 0 : -50 , scale: isMenuVisible ? 1 : 1 }}\n          transition={{\n            type: \"timing\",\n            duration: 600,\n            delay:  isMenuVisible ? 1000 : 0,\n          }}\n        >\n          <Text style={styles.productItem}>Sea Moss Powder</Text>\n        </MotiView>\n      </View>\n\n      {/* Image */}\n      <MotiView\n        key={`image`} // Force re-render to reset animation\n        from={{ opacity: 0, translateY: -10, scale: 0.85 }}\n        animate={{ opacity: 1, translateY: 0, scale: 1 }}\n        transition={{\n          type: \"timing\",\n          duration: 600,\n          delay: 1500,\n        }}\n      >\n        <Image\n          source={{ uri: store?.images.welcome_image }} // Replace with your image URL\n          style={styles.image}\n          resizeMode=\"cover\"\n        />\n      </MotiView>\n\n      {/* Description */}\n      <MotiView\n        key={`description`} // Force re-render to reset animation\n        from={{ opacity: 0, translateX: -90, scale: 0.85 }}\n        animate={{ opacity: 1, translateX: 0, scale: 1 }}\n        transition={{\n          type: \"timing\",\n          duration: 600,\n          delay: 1500,\n        }}\n      >\n        <Text style={styles.description}>\n          Discover the natural benefits of Sea Moss, rich in essential minerals\n          and nutrients to support your health and well-being.\n        </Text>\n      </MotiView>\n\n      <MotiView\n        key={`shop`} // Force re-render to reset animation\n        from={{ opacity: 0, translateX: -90, scale: 0.85 }}\n        animate={{ opacity: 1, translateX: 0, scale: 1 }}\n        transition={{\n          type: \"timing\",\n          duration: 600,\n          delay: 1600,\n        }}\n      >\n       \n          <View style={{ paddingTop: 20 }}>\n          <TouchableOpacity  style={styles.shopNowButton} onPress={() => router.push(\"/products\")}>\n          <Text style={styles.shopNowButtonText}>Shop</Text>\n            </TouchableOpacity>\n          </View>\n\n          <View style={{ paddingTop: 20 }}>\n          <SearchBarVOneButton path={ROUTES.products as never} />\n          </View>\n          {/* <SearchBar /> */}\n      \n      </MotiView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 20,\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  headerText: {\n    fontSize: 14,\n    color: \"black\",\n  },\n  menuIcon: {\n    paddingVertical: 10,\n  },\n  titleContainer: {\n    marginTop: 20,\n  },\n  mainTitle: {\n    fontSize: 48,\n    fontWeight: \"bold\",\n    color: \"black\",\n    lineHeight: 50,\n  },\n  subTitle: {\n    fontSize: 48,\n    fontWeight: \"300\",\n    color: \"black\",\n    lineHeight: 50,\n  },\n  productList: {\n    position: \"absolute\",\n    top: 60,\n    right: 20,\n    alignItems: \"flex-end\",\n  },\n  productItem: {\n    fontSize: 16,\n    color: \"black\",\n    marginBottom: 5,\n  },\n  image: {\n    width: width - 40,\n    height: 300,\n    borderRadius: 10,\n    marginTop: 20,\n  },\n  description: {\n    fontSize: 16,\n    color: \"black\",\n    textAlign: \"left\",\n    marginTop: 20,\n  },\n\n  shopNowButton: {\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    backgroundColor: COLORS.primary,\n    borderRadius: 25,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 8, // Adds shadow for Android\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"40%\", // Adjust the width as needed\n    // alignSelf: 'center', // Center the button within its parent\n  },\n  shopNowButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n    letterSpacing: 1,\n    textTransform: \"uppercase\",\n  },\n});\n\nexport default TopHomeSeaction;\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  ScrollView,\n} from \"react-native\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\nimport { View as MotiView } from \"moti\";\nimport TopHomeSeaction from \"./TopHomeSeaction\";\n// import SearchBar from '@/components/other/general/SearchBar';\nimport ProductRow from \"@/components/other/cards/other/ProductRow\";\nimport Carousel from \"@/components/pages/home/Carousel\";\nimport SectionHeader from \"@/components/pages/home/Headings\";\nimport { AWS_HOLDER_IMAGE } from \"@/utils/api\";\nimport { router } from \"expo-router\";\nimport { ROUTES } from \"@/utils/Routes\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst HomeDesignTwo: React.FC = () => {\n  const { store } = useClientStore();\n\n  return (\n    <ScrollView\n      showsVerticalScrollIndicator={false}\n      style={{\n        backgroundColor: \"white\",\n        paddingTop: 30,\n        paddingBottom: 200,\n      }}\n    >\n      <TopHomeSeaction />\n      <SectionHeader />\n      <ProductRow client={true} />\n      <View style={styles.card}>\n  <Image\n    source={{ uri: store?.images.welcome_image }} // Replace with your actual image URL\n    style={styles.profileImage}\n  />\n  <Text style={styles.name}>JACOB JAMES</Text>\n  <Text style={styles.title}>Founder of {store?.store_name ?? \"\"} Co.</Text>\n  <TouchableOpacity style={styles.button} onPress={() => router.push(ROUTES.products as never)}>\n    <Text style={styles.buttonText}>EXPLORE PRODUCTS</Text>\n  </TouchableOpacity>\n  <Text style={{padding: 10, fontSize: 40, paddingBottom: 30}}> 🌿</Text>\n  <Text style={styles.description}>\n    Leading the way in natural wellness with a focus on the incredible benefits of sea moss...\n  </Text>\n  {/* <Text style={styles.healthTip}>\n    🌿 Health Tip: Sea Moss is packed with 92 essential minerals that can support overall wellness, improve skin health, and boost your immune system. Add it to your smoothies or meals for a natural health boost!\n  </Text> */}\n</View>\n\n\n      <Carousel />\n\n      <View style={{ paddingTop: 40 }} />\n    </ScrollView>\n  );\n};\n\nexport default HomeDesignTwo;\n\n\n// card\nconst styles = StyleSheet.create({\n  card: {\n    // width: width * 0.9,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    elevation: 3,\n    marginVertical: 10,\n  },\n  profileImage: {\n    width: width - 40,\n    height: 500,\n    borderRadius: 10,\n    marginBottom: 20,\n\n  },\n  healthTip: {\n    marginTop: 10,\n    fontSize: 14,\n    color: 'green',\n    fontStyle: 'italic',\n  },  \n  name: {\n    fontSize: 24,\n    fontWeight: '900',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  title: {\n    fontSize: 16,\n    color: '#6e6e6e',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  button: {\n    // fontWeight: '900',\n    backgroundColor: '#000',\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 15,\n    marginBottom: 20,\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n    color: '#6e6e6e',\n    textAlign: 'center',\n  },\n});","import { StyleSheet } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Stack } from \"expo-router\";\nimport { useMankindProduct } from \"@/contexts/MankindProductContext\";\n\nconst AuthLayout = () => {\n  const { authState } = useAuth();\n  return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen\n          name=\"welcome\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n        <Stack.Screen\n          name=\"login\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n        <Stack.Screen\n          name=\"register\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n      </Stack>\n    );\n\n};\n\nexport default AuthLayout;\n\nconst styles = StyleSheet.create({});\n","import { StyleSheet } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Stack } from \"expo-router\";\nimport { useMankindProduct } from \"@/contexts/MankindProductContext\";\n\nconst CoreLayout = () => {\n  const { authState } = useAuth();\n\n  if (authState.authenticated) {\n    return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen name=\"(tabs)\" options={{}} />\n        <Stack.Screen name=\"modal\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"privacy-policy\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"terms-of-use\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"cookies-policy\" options={{ presentation: \"modal\" }} />\n      </Stack>\n    );\n  } else {\n    return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen\n          name=\"(auth)\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n       \n      </Stack>\n    );\n  }\n};\n\nexport default CoreLayout;\n\nconst styles = StyleSheet.create({});\n","import React, { useEffect } from 'react';\nimport { Slot, useRouter, Stack } from 'expo-router';\nimport { AuthProvider, useAuth } from '@/contexts/AuthContext';\nimport { ThemeProvider, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { useColorScheme } from 'react-native';\nimport { CartProvider } from \"@/contexts/CartContext\";\nimport { CollectionProvider } from \"@/contexts/CollectionContext\";\nimport { ClientStoreProvider } from \"@/contexts/ClientStoreContext\";\n// import { ClientProductProvider } from \"@/contexts/ClientProductContext\";\nimport { OrderProvider } from \"@/contexts/OrderContext\";\nimport { ClientProductProvider } from '@/contexts/ClientProductContext';\nimport CoreLayout from './CoreLayout';\n\n const AppProviders = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <AuthProvider>\n      <CartProvider>\n        <ClientStoreProvider>\n          <CollectionProvider>\n            <ClientProductProvider>\n              <OrderProvider>\n                {children}\n              </OrderProvider>\n            </ClientProductProvider>\n          </CollectionProvider>\n        </ClientStoreProvider>\n      </CartProvider>\n    </AuthProvider>\n  );\n};\n\n\nexport default function RootLayout() {\n  // const { authState } = useAuth(); // DO NOT ADD HERE\n\n  const colorScheme = useColorScheme();\n  const theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n\n\n  return (\n    <AppProviders>\n      <ThemeProvider value={theme}>\n        <CoreLayout />\n      </ThemeProvider>\n    </AppProviders>\n  );\n}","import React from 'react';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { Link, Tabs } from 'expo-router';\nimport { Pressable, useColorScheme } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons'\n\n// import Colors from '@/constants/Colors';\n// import { useColorScheme } from '@/components/useColorScheme';\n// import { useClientOnlyValue } from '@/components/useClientOnlyValue';\nimport { COLORS } from '@/utils/theme';\nimport { useClientOnlyValue } from '@/hooks/useClientOnlyValue';\n\n// You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={28} style={{ marginBottom: -3 }} {...props} />;\n}\n\nexport default function TabLayout() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <Tabs\n      screenOptions={{\n        tabBarActiveTintColor: COLORS[colorScheme ?? 'light'].tint,\n        // Disable the static render of the header on web\n        // to prevent a hydration error in React Navigation v6.\n        headerShown: useClientOnlyValue(false, true),\n      }}>\n      <Tabs.Screen\n        name=\"(home)\"\n        options={{\n          title: 'Home',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"square\" color={color} />,\n          headerShown: false,\n          // headerRight: () => (\n          //   <Link href=\"/modal\" asChild>\n          //     <Pressable>\n          //       {({ pressed }) => (\n          //         <FontAwesome\n          //           name=\"info-circle\"\n          //           size={25}\n          //           color={Colors[colorScheme ?? 'light'].text}\n          //           style={{ marginRight: 15, opacity: pressed ? 0.5 : 1 }}\n          //         />\n          //       )}\n          //     </Pressable>\n          //   </Link>\n          // ),\n        }}\n      />\n    \n    \n       <Tabs.Screen\n        name=\"collections\"\n        options={{\n          title: 'Collections',\n          // headerShown: false,\n\n          tabBarIcon : ({size, color }) => <Ionicons name='newspaper' size={size} color={color} />\n        }}\n      />\n       <Tabs.Screen\n        name=\"cart\"\n        options={{\n          title: 'Cart',\n          // headerShown: false,\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"shopping-cart\" color={color} />,\n      \n        }}\n      />\n        <Tabs.Screen\n        name=\"(settings)\"\n        options={{\n          title: 'Settings',\n          headerShown: false,\n\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"gear\" color={color} />,\n        }}\n      />\n    </Tabs>\n  );\n}\n","import React, { FC } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, useColorScheme } from 'react-native';\nimport { Link } from 'expo-router';\nimport { Ionicons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\n\ninterface SettingsItemLink {\n  href: string\n  iconName: string\n  label: string\n}\n\nconst SettingsItemLink: FC<SettingsItemLink> = ({ href, iconName, label }) => {\n \n // color={Colors[colorScheme ?? 'light'].text}\n  const colorScheme = useColorScheme();\n\n  return (\n    <Link href={href as never} asChild>\n      <TouchableOpacity style={styles.option}>\n        <FontAwesome5 name={iconName} size={20} color=\"black\" />\n        <Text style={styles.optionText}>{label}</Text>\n        <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n      </TouchableOpacity>\n    </Link>\n\n\n  );\n};\n\nexport default SettingsItemLink;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  upperSection: {\n  \n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#EAEAEA',\n    // paddingBottom: 20\n    // marginBottom: 20,\n  },\n\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'left',\n    marginVertical: 20,\n    marginLeft: 16,\n    paddingBottom: 20,\n  },\n  content: {\n    paddingHorizontal: 20,\n    paddingBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 4, // for Android shadow\n    marginTop: 12,\n\n  },\n  section: {\n    marginBottom: 30,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 10,\n  },\n  option: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#EAEAEA',\n  },\n  optionText: {\n    flex: 1,\n    fontSize: 16,\n    color: '#000',\n    marginLeft: 10,\n  },\n  logoutButton: {\n    backgroundColor: '#FFFFFF',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#000',\n    marginTop: 20,\n  },\n  logoutText: {\n    color: '#000',\n    fontSize: 16,\n  },\n});\n\n","import { StyleSheet, Text, View } from 'react-native'\n\n\nexport const generalStyles = StyleSheet.create({\n    center : {\n        alignItems: 'center',\n        width: '100%'\n    },\n    container: {\n        // padding: 16\n        flex: 1,\n        backgroundColor: '#fff',\n      },\n})","import { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React, { FC, useContext, useState } from 'react'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { ProductModelProps } from '../../../models/ProductModelProps'\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { CartContext } from '../../../contexts/CartContext'\nimport { Ionicons , SimpleLineIcons} from \"@expo/vector-icons\"\n// import { stripeConverter } from '../../hook/stripeConverter'\nimport { useAuth } from '../../../contexts/AuthContext'\nimport { createPaymentIntent } from '../../../api/paymentApi'\nimport { CONSTANTS } from '@/utils/constants'\n\nconst CartCard = ({ item }: any) => {\n    const { deleteItemFromCart, addToCart , decreaseFromCart, totalSum} = useContext(CartContext);\n    const [quantity, setQuantity] = useState(item.quantity);\n    const {authState, onLogout } = useAuth()\n    const [paymentStatus, setPaymentStatus] = useState('ijiij');\n\n    // Plus\n    const increment = () => {\n        // handlePayment(totalSum, 10)\n\n        addToCart(item);\n    };\n\n    // Minus\n    const decrement = () => {\n        // handlePayment(totalSum, 10)\n        if (item.quantity === 1) {\n          // remove it or do nothing..\n          console.log(\"do nothing\")\n\n        } else {\n            console.log(\"remove 1\")\n            decreaseFromCart(item);\n        }\n    };\n\n  \n  \n  \n  \n    // async function handlePayment(amount: number, shippingAmount: number) {\n  \n    //   //  WORKS GETTING CLIENT ID\n    //   try {\n    //     const paymentData = {\n    //       amount: stripeConverter(amount), // Example value, replace with your actual data\n    //       currency: \"USD\", // Example value, replace with your actual data\n    //       shipping_fee: stripeConverter(shippingAmount), // Example value, replace with your actual data\n    //       // (FIX) - USE STORE.STRIPE\n    //       stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n    //       app_name: CONSTANTS.appName // Example value, replace with your actual data\n    //     };\n        \n    //     const response = await createPaymentIntent(paymentData);\n    //     // Handle successful response\n    //     setPaymentStatus('Payment successful!');\n    //     console.log(response)\n    //   } catch (error) {\n    //     // Handle error\n    //     setPaymentStatus('Payment failed!');\n    //     // setPaymentStatus(error);\n  \n    //     console.error('Error creating payment intent:', error);\n    //   }\n    // };\n  \n           \n  return (\n   \n      <View style={styles.container}>\n     \n        <Image style={styles.img} source={{uri: item.image  ? item.image : CONSTANTS.holderImage}}/>\n        <View style={styles.cardContent}>\n            <Text style={styles.title}>{item.name}</Text>\n            <Text style={styles.price}>{convertToCurrency(item.price)} x {item.quantity}</Text>\n            {/* <Text style={styles.price}>{convertToCurrency(item.price * item.quantity) }</Text> */}\n            \n            {/* <View style={styles.circleSizeContainer}>\n                <View style={styles.circle} />\n            </View>  */}\n                \n<View style={styles.rating}>\n        <TouchableOpacity onPress={()=>increment()}>\n          <SimpleLineIcons name='plus' size={20} />\n        </TouchableOpacity>\n\n        <Text style={styles.ratingText}>{item.quantity}</Text>\n\n        <TouchableOpacity  onPress={()=> decrement()}>\n          <SimpleLineIcons style={{color: item.quantity === 1 ? 'gray': 'black'}} name='minus' size={20} />\n        </TouchableOpacity>\n \n\n                {/* <View style={styles.sizeCircle}> */}\n                    {/* <Text style={styles.sizeText}>L</Text>\n                </View>    */}\n\n              \n            </View>\n\n        </View>\n        <TouchableOpacity onPress={() => deleteItemFromCart(item)}>\n            <Ionicons name='trash-outline' size={SIZES.xLarge} color={COLORS.black}/>\n        </TouchableOpacity>    \n\n        <View>\n\n        </View>\n      </View>\n  \n  )\n}\n\nexport default CartCard\n\nconst styles = StyleSheet.create({\n    container: {\n     marginVertical: 10,\n     flexDirection: 'row'\n    },\n    img : {\n      height: 125,\n      width: \"25%\",\n      borderRadius: 10\n    },\n    cardContent: {\n        flex: 1,\n        marginHorizontal: 10\n    },\n    title: {\n        fontSize: 15,\n        color: \"#444444\"\n    },\n    price: {\n        color: \"#797979\",\n        marginVertical: 7,\n        fontSize: 18\n    },\n    circleSizeContainer: {\n        flexDirection: \"row\",\n       \n    },\n    circle: {\n        height: 32,\n        width: 32,\n        borderRadius: 16,\n        backgroundColor: \"#444444\",\n       \n    },\n    sizeCircle: {\n        backgroundColor: \"white\",\n        height: 32,\n        width: 32,\n        borderRadius: 16,\n        justifyContent: 'center',\n        alignItems: \"center\",\n       \n    },\n    sizeText: {\n        fontSize: 18,\n        fontWeight: \"500\"\n    },\n    rating : {\n        top: SIZES.large,\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        // marginHorizontal: SIZES.large\n    \n      }, \n      ratingText: {\n        color: COLORS.gray,\n        fontFamily: \"medium\",\n         paddingHorizontal: SIZES.xSmall\n      },\n    \n  })","import axios, { AxiosError } from 'axios';\n// import { BASE_URL } from '../utils/api';\nimport { ProductModelProps } from '../models/ProductModelProps';\nimport { CONSTANTS } from '../utils/constants';\nimport { BASE_URL } from '../utils/api';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// import { CONSTANTS } from '../utils/constants';\n\n\ninterface PaymentJsonProps  {\n  amount: number, // Example value, replace with your actual data\n  currency: string, // Example value, replace with your actual data\n  shipping_fee: number, // Example value, replace with your actual data\n  stripe_id: string, // Example value, replace with your actual data\n  app_name: string // Example value, replace with your actual data\n};\n\n\n  const paymentApi = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n        Authorization: \"token\",\n        'Content-Type': 'application/json',\n    },\n    params: {\n      store_id: CONSTANTS.store_id,\n      email: \"\", // user?.email ?? \"\",\n      tableName: 'prof-website-payment-table', \n      stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n      showFilteredItems: true\n    },\n  });\n\n\nexport const getpayment = async () => {\n  return await paymentApi.get(`/payment`);\n};\n\n\n\nexport const createPaymentIntent = async (paymentJsonProps: PaymentJsonProps) => {\n  try {\n    const response = await paymentApi.post('/create-payment-intent', paymentJsonProps);\n    return response.data; // Assuming you want to return the response data\n  } catch (error) {\n    throw error; // Rethrow the error to handle it outside\n  }\n};\n\n\nexport const showStripeHostedPage = async (priceID: string) => {\n  try {\n    const response = await paymentApi.post('/pay/stripe-hosted-page', { priceID });\n    return response.data; // Assuming you want to return the full response data\n  } catch (error : any) {\n    console.error('Error:', error.response?.data || error.message);\n    // console.log(error.response.data)\n\n    throw error.response?.data || error.message; // Rethrow the error with more context\n  }\n};\n\n\nexport default paymentApi;","\nimport { Alert, Platform, StyleSheet, Text, View } from 'react-native';\nimport React, { FC, useContext, useEffect, useState } from 'react';\nimport { StripeProvider, usePlatformPay, PlatformPayButton, PlatformPay } from '@stripe/stripe-react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { CartContext } from '../../../contexts/CartContext';\nimport { useClientStore } from '../../../contexts/ClientStoreContext';\nimport { stripeConverter } from '../../../hooks/stripeConverter';\nimport { createPaymentIntent } from '../../../api/paymentApi';\nimport { CONSTANTS } from '../../../utils/constants';\n// import { CartContext } from '@/contexts/CartContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n// import { CONSTANTS } from '@/utils/constants';\n// import { createPaymentIntent } from '@/api/paymentApi';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n\ninterface PaymentPayScreenProps {\n  goBack?: () => void;\n  publishableKey: string;\n  amount: number;\n  shippingAmount: number;\n}\n\nexport const PaymentPayScreen: FC<PaymentPayScreenProps> = (props) => {\n  const [ready, setReady] = useState(false);\n  const [clientSecret, setClientSecret] = useState('');\n  const { isPlatformPaySupported, confirmPlatformPayPayment } = usePlatformPay();\n  const { store } = useClientStore();\n  const { carts, totalSum, totalShipping, totalTax, grandTotal, quantity, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n\n  useFocusEffect(\n    React.useCallback(() => {\n      console.log('Screen focused');\n      setup();\n    }, [])\n  );\n\n  const setup = async () => {\n    try {\n      if (!(await isPlatformPaySupported())) {\n        Alert.alert(\n          'Error',\n          `${Platform.OS === 'android' ? 'Google' : 'Apple'} Pay is not supported.`\n        );\n        return;\n      }\n\n      const paymentData = {\n        amount: stripeConverter(props.amount),\n        currency: 'USD',\n        shipping_fee: stripeConverter(props.shippingAmount),\n        stripe_id:  'acct_1NVCh3JEHBX7gOQA', // store?.stripe_id ??\n        app_name: store?.store_name ?? '',\n      };\n\n      const response = await createPaymentIntent(paymentData);\n      setClientSecret(response.clientSecret);\n      console.log(`Client Secret: ${response.clientSecret}`);\n      setReady(true);\n    } catch (error) {\n      console.error('Error during setup:', error);\n      Alert.alert('Setup Error', 'There was an error setting up the payment.');\n    }\n  };\n\n  const buy = async () => {\n    if (!ready) {\n      return;\n    }\n    \n    setReady(false);\n\n    try {\n      const { error } = await confirmPlatformPayPayment(clientSecret, {\n        applePay: {\n          cartItems: carts.map(item => ({\n            label: store?.store_name ?? CONSTANTS.appName,\n            amount: String(item.price),\n            paymentType: PlatformPay.PaymentType.Immediate,\n          })),\n          merchantCountryCode: 'US',\n          currencyCode: 'USD',\n        },\n        googlePay: {\n          testEnv: true,\n          merchantName: 'My merchant name',\n          merchantCountryCode: 'US',\n          currencyCode: 'USD',\n          billingAddressConfig: {\n            format: PlatformPay.BillingAddressFormat.Full,\n            isPhoneNumberRequired: true,\n            isRequired: true,\n          },\n        },\n      });\n\n      if (error) {\n        setReady(true);\n        Alert.alert(`Error code: ${error.code}`, error.message);\n        console.log(`Error code: ${error.code}`, error.message);\n      } else {\n        Alert.alert('Success', 'The payment was confirmed successfully');\n        console.log('Success', 'The payment was confirmed successfully');\n      }\n    } catch (error) {\n      console.error('Payment error:', error);\n      Alert.alert('Payment Error', 'There was an error processing the payment.');\n      setReady(true);\n    }\n  };\n\n  return (\n    <View>\n    <View style={styles.container}>\n\n      <StripeProvider\n        publishableKey={props.publishableKey}\n        merchantIdentifier={CONSTANTS.merchant_id}\n      >\n        <PlatformPayButton\n          onPress={buy}\n          disabled={!ready}\n          style={styles.payButton}\n          borderRadius={4}\n          type={PlatformPay.ButtonType.Buy}\n        />\n      </StripeProvider>\n\n\n      </View>\n      </View>\n  );\n};\n\nexport default PaymentPayScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  payButton: {\n    width: '100%',\n    height: 50,\n    borderRadius: 5,\n  },\n});\n\n\n\n\n\n\n\n\n// import { Alert, Platform, StyleSheet, Text, View } from 'react-native'\n// import React, { FC, useContext, useEffect, useState } from 'react'\n// import { StripeProvider, usePlatformPay, PlatformPayButton, PlatformPay, usePaymentSheet } from '@stripe/stripe-react-native'\n// import { useFocusEffect } from '@react-navigation/native';\n// import { CartContext } from '@/contexts/CartContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n// import { CONSTANTS } from '@/utils/constants';\n// import { createPaymentIntent } from '@/api/paymentApi';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n\n \n// interface PaymentPayScreenProps  {\n//     goBack?: () => void\n//     publishableKey: string\n//     amount: number\n//     shippingAmount: number\n    \n// }\n\n\n// export const PaymentPayScreen: FC<PaymentPayScreenProps> = (props) => {\n//     const [ready, setReady] = useState(false)\n//     const [clientSecret, setClientSecret] = useState('')\n//     const { isPlatformPaySupported, confirmPlatformPayPayment } = usePlatformPay()\n//     const { carts, totalSum, totalShipping, totalTax, grandTotal, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n\n//     const {store} = useClientStore()\n//     // const {initPaymentSheet, presentPaymentSheet, loading} = usePaymentSheet()\n\n//     // useEffect(() => {\n//     //     setup()\n//     //     // initialisePaymentSheet()\n//     //     console.log(\"Payment set up completed\")\n\n//     // }, [])\n\n//     useFocusEffect(\n//         React.useCallback(() => {\n//           // Run this function every time the screen comes into focus\n//           console.log('Screen focused');\n//          setup()\n//         // initialisePaymentSheet()\n//         console.log(\"Payment set up completed\")\n\n//         }, [])\n//       );\n\n//     // const initialisePaymentSheet = async () => {\n//     //     const { paymentInent, ephemeralKey , customer } = await fetchPaymentSheet({\n\n//     //     })\n//     // }\n\n\n//     const setup = async () => {\n//         // Perform any setup here if needed\n//         if(!(await isPlatformPaySupported())) {\n//             // console.log\n//             Alert.alert(\n//                 'Error',\n//                 `${\n//                     Platform.OS === 'android' ? 'Google': 'Apple'\n//                 } Pay is not supported. `\n//             )\n//             return\n//         } else {\n//            await isPlatformPaySupported()\n//            // setup()\n//             console.log(\"sorry..\")\n//         }\n\n//         const paymentData = {\n//             amount: stripeConverter(props.amount), // Example value, replace with your actual data\n//             currency: \"USD\", // Example value, replace with your actual data\n//             shipping_fee: stripeConverter(props.shippingAmount), // Example value, replace with your actual data\n//             stripe_id: \"acct_1NVCh3JEHBX7gOQA\", //  store?.stripe_id ?? \"\", //\"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n//             app_name: store?.store_name ?? \"\" // CONSTANTS.appName // Example value, replace with your actual data\n//           };\n\n//         const response = await createPaymentIntent(paymentData);\n\n//        // const result = response.json\n//         setClientSecret(response.clientSecret)\n//         // console.log(clientSecret)\n//         console.log(`This is the best button - ${response.clientSecret}`)\n//         setReady(true)\n//     }\n\n//     async function buy() {\n//         if (ready == true) {\n//             setup()\n//         }\n//         setReady(false)\n\n       \n\n//         const { error } = await confirmPlatformPayPayment(clientSecret, {\n//             applePay: {\n//                 cartItems: carts.map(item => ({\n//                     label: store?.store_name, //  CONSTANTS.appName, // pay ....\n//                     amount: String(item.price),\n//                     paymentType: PlatformPay.PaymentType.Immediate\n//                 })),\n\n//                 // cartItems: [\n//                 //     {\n//                 //         label: CONSTANTS.appName,\n//                 //         amount: String(props.amount), // '12',// \n//                 //         paymentType: PlatformPay.PaymentType.Immediate,\n                        \n             \n                      \n//                 //     }\n//                 // ],\n//                 merchantCountryCode: \"US\",\n//                 currencyCode: 'USD',\n            \n//                 // requiredBillingContactFields: [\n//                 //     ContactField.EmailAddress,\n//                 //     ContactField.Name,\n//                 //     ContactField.PhoneNumber,\n//                 //     ContactField.PhoneticName,\n//                 //     ContactField.PostalAddress\n//                 // ]\n                \n                \n//             },\n//             googlePay: {\n//                 testEnv: true,\n//                 merchantName: 'My merchant name',\n//                 merchantCountryCode: 'US',\n//                 currencyCode: 'USD',\n//                 billingAddressConfig: {\n//                   format: PlatformPay.BillingAddressFormat.Full,\n//                   isPhoneNumberRequired: true,\n//                   isRequired: true,\n//                 },\n//             },\n        \n//         })\n\n//         if (error) {\n//             setReady(true)\n//             Alert.alert(`Error code: ${error.code}`, error.message)\n//             console.log(`Error code: ${error.code}`, error.message)\n\n//         } else {\n//             setReady(false)\n//             Alert.alert('Success', 'The payment was confirmed successfully')\n//             console.log('Success', 'The payment was confirmed successfully')\n// }\n//     }\n\n//     return (\n//         <View style={{}}>\n//             <StripeProvider\n//                 publishableKey={props.publishableKey}\n//                 merchantIdentifier={CONSTANTS.merchant_id} // Use the correct constant\n//             >\n//                 <View>\n                    \n//                     <PlatformPayButton\n//                         onPress={buy}\n//                         disabled={!ready}\n//                         style={styles.payButton}\n//                        // appearance={PlatformPay.ButtonStyle.Black}\n//                         borderRadius={4}\n//                         type={5} //{PlatformPay.ButtonType.AddMoney}\n//                     />\n//                 </View>\n//             </StripeProvider> \n//         </View>\n//     )\n// }\n\n// export default PaymentPayScreen\n\n// const styles = StyleSheet.create({\n//     container: {\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         color: 'red',\n//     },\n//     payButton: {\n//         backgroundColor: 'black',\n//         tintColor: 'red',\n//         width: '100%',\n//         height: 50,\n//         borderRadius: 5,\n//         color: 'red',\n       \n//     },\n//     buttons: {\n//         marginTop: 20,\n//     }\n// })\n\n\n","import { Image, StyleSheet, FlatList, Text, TouchableOpacity, View } from 'react-native'\nimport React, { useContext, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { CartContext } from '@/contexts/CartContext'\nimport CartHeader from '@/components/other/headers/CartHeader'\nimport { generalStyles } from '@/components/other/general/Styles'\nimport CartCard from '@/components/other/cart/CartCard'\n// import convertToCurrency from '@/hooks/convertToCurrency'\nimport { CONSTANTS } from '@/utils/constants'\nimport PaymentPayScreen from './PaymentPayScreen'\nimport convertToCurrency from '@/hooks/convertToCurrency'\n// import CartHeader from '../components/headers/CartHeader'\n// import { Avatar, Divider } from 'react-native-paper'\n// import LinearGradient from 'react-native-linear-gradient' // cause error\n// import CartCard from '../components/cart/CartCard'\n// import { Ionicons , Fontisto} from '@expo/vector-icons'\n// import { COLORS } from '../utils/theme'\n// import { CartContext } from '../contexts/CartContext'\n// import convertToCurrency from '../hook/convertToCurrency'\n// import { Item } from 'react-native-paper/lib/typescript/components/Drawer/Drawer'\n// import PaymentButton from '../components/buttons/CheckoutButton'\n// import PaymentPayScreen from './PaymentPayScreen'\n// import { CONSTANTS } from '../utils/constants'\n// import CheckoutButton from '../components/buttons/CheckoutButton'\n// import { generalStyles } from '../components/general/Styles'\n// import { useFocusEffect } from '@react-navigation/native'\n\n\n// export interface CartProps {\n//   carts: []\n// }\n\nconst CartScreen = () => {\n  \n  const { carts, totalSum, totalShipping, totalTax, grandTotal, quantity, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n  \n  const [triggerValueChange, setTriggerValueChange] = useState(false)\n  // useFocusEffect(\n  //   React.useCallback(() => {\n  //     // Run this function every time the screen comes into focus\n     \n\n  //     if (quantity <= 0    ){ // || carts.length <= 0\n  //       setQuantity(0)\n  //     }\n  //   }, [])\n  // );\n\n\n  \n  \n  return (\n    <View style={styles.container}>\n      {/* <CartHeader/> */}\n\n      {carts.length <= 0 ? (\n\n          <>\n          <View style={generalStyles.center}>\n            <Text>\n              Please add items to the cart\n            </Text>\n          </View>\n          </>\n      ): (\n<>\n        <FlatList\n        data={carts}\n        showsVerticalScrollIndicator={false}\n        keyExtractor={(_, index) => index.toString()}\n        ListHeaderComponent={\n          <></>\n        }\n        contentContainerStyle={{\n          paddingBottom: 100\n        }}\n        renderItem={({item}) => (\n          // <CartCard item={item} delteItemFromCart={deleteItemFromCart} />\n          <CartCard item={item} delteItemFromCart={deleteItemFromCart} triggerValueChange={triggerValueChange} />\n        )}\n        ListFooterComponent={\n         <></>\n        }\n    />\n\n\n<View>\n<>\n          <View style={styles.priceContainer}>\n          \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Total:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalSum)}</Text>\n          </View>\n          \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Shipping:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalShipping)}</Text>\n          </View>\n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Tax:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalTax)}</Text>\n          </View>\n          {/* <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Shipping:</Text>\n            <Text style={styles.text}>$0.0</Text>\n          </View> */}\n        \n        </View>\n\n        <View style={styles.divider}/>\n      \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Grand Total:</Text>\n            <Text style={[styles.text , {color: \"black\", fontWeight: \"700\"} ]}>{convertToCurrency(grandTotal)}</Text>\n          </View>\n        \n        </>\n      </View>\n      <View style={{paddingTop: 30}}>\n        <PaymentPayScreen \n           publishableKey={CONSTANTS.publishableKeyTest}\n          // publishableKey={CONSTANTS.publishableKeyLive}\n          amount={totalSum}\n          shippingAmount={totalShipping} \n        />\n    </View>\n\n      \n      <View style={{paddingBottom: 50}}></View>\n\n\n</>\n      )}\n   \n     \n \n  \n    </View>\n\n  )\n}\n\nexport default CartScreen\n\nconst styles = StyleSheet.create({\n\n  headerContainer: {\n    marginBottom: 20\n  },\n  container: {\n    flex  : 1,\n    padding: 15\n  },\n  priceContainer :{\n    marginTop: 40\n  },\n  priceAndTitle: {\n    flexDirection: 'row',\n    justifyContent: \"space-between\",\n    marginHorizontal: 20,\n    marginVertical: 10\n  },\n  text: {\n    color: \"#757575\",\n    fontSize: 14\n  },\n  divider: {\n    borderWidth: 1,\n    borderColor: \"#C0C0C0\",\n    borderRadius: 15,\n    marginVertical: 10\n  },\n  checkoutContainer: {\n    backgroundColor: \"black\",//  \"#E96E6E\",\n    width: \"100%\",\n    marginVertical: 30,\n    borderRadius: 10\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"white\",\n    textAlign: \"center\",\n    padding: 10,\n    fontWeight: \"700\"\n\n\n  }\n\n})\n\n// rnef","\n\nimport React from 'react';\nimport { View, Text, Image, StyleSheet, Dimensions } from 'react-native';\nimport { COLORS } from '@/utils/theme';\nimport { Stack } from 'expo-router';\n\nconst { width, height } = Dimensions.get('window');\n\nconst NoOrdersView = () => {\n  return (\n    <View style={styles.container}>\n        {/* <Stack.Screen options={{headerShown: false}}/> */}\n      <Image\n        source={require('../../../../src/assets/images/orderImage.png')}\n        \n        style={styles.image}\n      />\n      <Text style={styles.message}>\n        Orders will be listed here. To add an order manually, simply click the + in the top left.\n      </Text>\n    </View>\n  );\n};\n\nexport default NoOrdersView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: COLORS.white,\n    paddingHorizontal: 20,\n  },\n  image: {\n    width: width * 0.5,\n    height: height * 0.25,\n    resizeMode: 'contain',\n    marginBottom: 20,\n  },\n  message: {\n    fontSize: 16,\n    color: COLORS.darkGray,\n    textAlign: 'center',\n  },\n});\n\n\n\n\n// // If mobile and web is different\n\n// // Make sure to also create the folder in components\n\n// export {default} from '@/components/pages/client-order/ClientOrdersView' ","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { OrderModelProps } from '@/models/OrderModelProps';\nimport { Link } from 'expo-router';\nimport { useClientOrder } from '@/contexts/OrderContext';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst ClientOrderCard: React.FC<{ order: OrderModelProps }> = ({ order }) => {\n  const { selectOrder } = useClientOrder();\n  const [status, setStatus] = useState(order.order_status);\n\n  const handleOrderPress = () => {\n    selectOrder(order);\n  };\n\n  useEffect(() => {\n    setStatus(order.order_status);\n  }, [order.order_status]);\n\n  return (\n    <Link href={`(tabs)/client-orders/(details)/${order.id}` as never} asChild>\n      <TouchableOpacity style={styles.card} onPress={handleOrderPress}>\n        <View style={styles.body}>\n          <Ionicons name=\"bag\" size={30} color={COLORS.primary} style={styles.icon} />\n          <View style={styles.details}>\n            <Text style={styles.name}>{order.to_address.name}</Text>\n            <Text style={styles.price}>{convertToCurrency(order.total)}</Text>\n            <Text style={styles.date}>Placed on: {order.order_placed_date}</Text>\n          </View>\n          <View style={styles.statusContainer}>\n            <Text style={[styles.status, getStatusStyle(status)]}>{status}</Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Link>\n  );\n};\n\nconst getStatusStyle = (status: string) => {\n  switch (status) {\n    case 'Fulfill Order':\n      return styles.fulfillOrderStatus;\n    case 'Mark as Shipped':\n      return styles.markAsShippedStatus;\n    case 'Shipped !':\n      return styles.shippedStatus;\n    default:\n      return styles.defaultStatus;\n  }\n};\n\nexport default ClientOrderCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: COLORS.white,\n    borderRadius: SIZES.medium,\n    marginBottom: SIZES.medium,\n    padding: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  body: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    paddingRight: SIZES.medium,\n  },\n  details: {\n    flex: 1,\n  },\n  name: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  price: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  date: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  statusContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  status: {\n    fontFamily: 'bold',\n    fontSize: SIZES.small,\n    paddingVertical: SIZES.small,\n    paddingHorizontal: SIZES.medium,\n    borderRadius: SIZES.large,\n  },\n  fulfillOrderStatus: {\n    backgroundColor: COLORS.primary,\n    color: COLORS.white,\n  },\n  markAsShippedStatus: {\n    backgroundColor: COLORS.orange,\n    color: COLORS.black,\n  },\n  shippedStatus: {\n    backgroundColor: COLORS.green,\n    color: COLORS.black,\n  },\n  defaultStatus: {\n    backgroundColor: COLORS.blue,\n    color: COLORS.white,\n  },\n});\n\n\n\n\n\n// // OrderCard.tsx\n// import React from 'react';\n// import { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\n// // import { OrderModelProps } from './Order';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { Ionicons } from '@expo/vector-icons';\n// import convertToCurrency from '@/hooks/convertToCurrency';\n// import { OrderModelProps } from '@/models/OrderModelProps';\n// import { Link } from 'expo-router';\n// import { useClientOrder } from '@/contexts/OrderContext';\n\n\n// const ClientOrderCard: React.FC<OrderModelProps> = (order) => {\n//   const { selectOrder } = useClientOrder();\n\n//   const handleProductPress = () => {\n//     selectOrder(order);\n//   };\n//   return (\n//     // <Link href={\"(tabs)/client-orders/(create)/create-client-order\" as never} asChild>\n//     // <Link href={\"(tabs)/client-orders/(create)/create-client-order\" as never} asChild>\n\n//     <Link href={`(tabs)/client-orders/(details)/${order.id}` as never} asChild>\n\n//     <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n//       <View style={styles.header}>\n//         <Text style={styles.orderId}>Order ID: {order.id}</Text>\n//         <Text style={styles.status}>{order.order_status}</Text>\n//       </View>\n      \n//       <View style={styles.body}>\n//         {/* <Image source={{ uri: props.items[0].image }} style={styles.image} /> */}\n//         <View style={styles.details}>\n//           <Text style={styles.title}>{order.title}</Text>\n//           <Text style={styles.date}>Placed on: {order.order_placed_date}</Text>\n//           <Text style={styles.price}>{convertToCurrency(order.total)}</Text>\n//         </View>\n//       </View>\n      \n//       <View style={styles.footer}>\n//         <Ionicons name=\"square\" size={24} color={COLORS.primary} />\n//       </View>\n//     </TouchableOpacity>\n//     </Link>\n//   );\n// };\n\n// export default ClientOrderCard;\n\n// const styles = StyleSheet.create({\n//   card: {\n//     backgroundColor: COLORS.white,\n//     borderRadius: SIZES.medium,\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 5,\n//   },\n//   header: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//     marginBottom: SIZES.small,\n//   },\n//   orderId: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   status: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   body: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//   },\n//   image: {\n//     width: 60,\n//     height: 60,\n//     borderRadius: SIZES.small,\n//     marginRight: SIZES.medium,\n//   },\n//   details: {\n//     flex: 1,\n//   },\n//   title: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     marginBottom: SIZES.small,\n//     color: COLORS.primary,\n//   },\n//   date: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   price: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginTop: SIZES.small,\n//   },\n//   footer: {\n//     flexDirection: 'row',\n//     justifyContent: 'flex-end',\n//     marginTop: SIZES.small,\n//   },\n// });\n","// import React, { useEffect, useState } from 'react';\n// import { View, Text, Button, Alert, ScrollView, StyleSheet } from 'react-native';\n// import { useNavigation } from '@react-navigation/native';\n// import { useClientOrder } from '@/contexts/OrderContext';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { OrderModelProps } from '@/models/OrderModelProps';\n\n// const EditClientOrderCrud = () => {\n//   const { selectedOrder, updateOrder } = useClientOrder();\n//   const [isShowingConfirmation, setIsShowingConfirmation] = useState(false);\n//   const navigation = useNavigation();\n\n//   const [orderDetails, setOrderDetails] = useState<OrderModelProps | null>(null);\n\n//   useEffect(() => {\n//     if (selectedOrder) {\n//       setOrderDetails(selectedOrder);\n//     }\n//   }, [selectedOrder]);\n\n//   const handleUpdateOrder = () => {\n//     if (!orderDetails) return;\n\n//     Alert.alert(\n//       'Confirmation',\n//       'Are you sure you want to proceed?',\n//       [\n//         {\n//           text: 'Yes',\n//           onPress: () => {\n//             // Your update logic here\n//             updateOrder(orderDetails);\n//             navigation.goBack();\n//           },\n//         },\n//         { text: 'No', style: 'cancel' },\n//       ],\n//       { cancelable: true }\n//     );\n//   };\n\n//   const handleCallCustomer = () => {\n//     // Logic to call customer\n//     if (orderDetails?.to_address?.phone) {\n//       // Logic to open the phone app with the number\n//       console.log(`Calling ${orderDetails.to_address.phone}`);\n//     }\n//   };\n\n//   const handleEmailCustomer = () => {\n//     // Logic to email customer\n//     if (orderDetails?.to_address?.email) {\n//       // Logic to open the email app with the address\n//       console.log(`Emailing ${orderDetails.to_address.email}`);\n//     }\n//   };\n\n//   if (!orderDetails) {\n//     return (\n//       <View style={styles.container}>\n//         <Text>Order not found</Text>\n//       </View>\n//     );\n//   }\n\n//   return (\n//     <ScrollView style={styles.container}>\n//       <View style={styles.section}>\n//         <Text style={styles.sectionHeader}>Status</Text>\n//         <Text style={styles.text}>{orderDetails.order_status}</Text>\n//       </View>\n\n//       <View style={styles.section}>\n//         <Text style={styles.sectionHeader}>General</Text>\n//         <Button title=\"Call Customer\" onPress={handleCallCustomer} />\n//         <Button title=\"Email Customer\" onPress={handleEmailCustomer} />\n//         <Button\n//           title=\"Edit Shipping Information\"\n//         //   onPress={() => navigation.navigate('EditShippingInfo', {\n//         //     address: orderDetails.to_address?.streetOne,\n//         //     city: orderDetails.to_address?.city,\n//         //     state: orderDetails.to_address?.state,\n//         //     zip: orderDetails.to_address?.zip,\n//         //   })}\n//         />\n//       </View>\n\n//       <View style={styles.section}>\n//         <Text style={styles.sectionHeader}>Personal Information</Text>\n//         <Text style={styles.text}>Address: {orderDetails.to_address?.streetOne}</Text>\n//         <Text style={styles.text}>City: {orderDetails.to_address?.city}</Text>\n//         <Text style={styles.text}>State: {orderDetails.to_address?.state}</Text>\n//         <Text style={styles.text}>Zip: {orderDetails.to_address?.zip}</Text>\n//       </View>\n\n//       <View style={styles.section}>\n//         <Text style={styles.sectionHeader}>Time Stamp</Text>\n//         <Text style={styles.text}>Created: {orderDetails.order_created_date}</Text>\n//         <Text style={styles.text}>Placed: {orderDetails.order_placed_date}</Text>\n//         <Text style={styles.text}>Shipped: {orderDetails.order_started_date}</Text>\n//         <Text style={styles.text}>Completed: {orderDetails.order_completed_date}</Text>\n//       </View>\n\n//       <Button title=\"Update Order\" onPress={handleUpdateOrder} />\n//     </ScrollView>\n//   );\n// };\n\n// export default EditClientOrderCrud;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: COLORS.lightGray,\n//     padding: SIZES.medium,\n//   },\n//   section: {\n//     marginBottom: SIZES.large,\n//   },\n//   sectionHeader: {\n//     fontSize: SIZES.large,\n//     fontWeight: 'bold',\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//   },\n//   text: {\n//     fontSize: SIZES.medium,\n//     color: COLORS.black,\n//     marginBottom: SIZES.small,\n//   },\n// });\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Button, Alert, ScrollView, Linking } from 'react-native';\nimport { Stack, useLocalSearchParams, useRouter } from 'expo-router';\nimport { useClientOrder } from '@/contexts/OrderContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { OrderModelProps } from '@/models/OrderModelProps';\n\nconst OrderDetailsPage = () => {\n  const { selectedOrder, removeOrder, addOrder } = useClientOrder();\n  const router = useRouter();\n  const [orderDetails, setOrderDetails] = useState<OrderModelProps | null>(null);\n\n  // State variables to handle order details\n  const [status, setStatus] = useState('');\n  const [total, setTotal] = useState(0.0);\n  const [address, setAddress] = useState('');\n  const [addressZip, setAddressZip] = useState('');\n  const [addressState, setAddressState] = useState('');\n  const [addressCity, setAddressCity] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [orderPlacedDate, setOrderPlacedDate] = useState('');\n  const [orderCompletedDate, setOrderCompletedDate] = useState('');\n\n  useEffect(() => {\n    if (selectedOrder) {\n      // Populate state variables with selected order details\n      setStatus(selectedOrder.order_status);\n      setTotal(selectedOrder.total);\n      setAddress(selectedOrder.to_address.streetOne);\n      setAddressZip(selectedOrder.to_address.zip);\n      setAddressState(selectedOrder.to_address.state);\n      setAddressCity(selectedOrder.to_address.city);\n      setPhoneNumber(selectedOrder.to_address.phone);\n      setOrderPlacedDate(selectedOrder.order_placed_date);\n      setOrderCompletedDate(selectedOrder.order_completed_date);\n   \n   \n    }\n  }, [selectedOrder]);\n\n  const handleCallCustomer = () => {\n    // Trigger phone dialer with customer's phone number\n    if (phoneNumber) {\n      Linking.openURL(`tel:${phoneNumber}`);\n    } else {\n      Alert.alert('Error', 'Phone number is not available.');\n    }\n  };\n\n  const handleEmailCustomer = () => {\n    // Trigger email client with customer's email\n    if (selectedOrder?.to_address.email) {\n      Linking.openURL(`mailto:${selectedOrder.to_address.email}`);\n    } else {\n      Alert.alert('Error', 'Email address is not available.');\n    }\n  };\n\n\n  const handleUpdateOrder = () => {\n    if (!orderDetails) return;\n\n    Alert.alert(\n      'Confirmation',\n      'Are you sure you want to proceed?',\n      [\n        {\n          text: 'Yes',\n          onPress: () => {\n            // Your update logic here\n            addOrder(orderDetails);\n            // navigation.goBack();\n          },\n        },\n        { text: 'No', style: 'cancel' },\n      ],\n      { cancelable: true }\n    );\n  };\n\n  const handleDeleteOrder = () => {\n    if (!selectedOrder?.id) {\n      Alert.alert('Error', 'Order ID is missing.');\n      return;\n    }\n  \n    Alert.alert('Confirmation', 'Are you sure you want to delete this order?', [\n      {\n        text: 'Yes',\n        onPress: () => {\n          removeOrder(selectedOrder.id);\n          router.back();\n        },\n      },\n      {\n        text: 'No',\n        style: 'cancel',\n      },\n    ]);\n  };\n  \n\n  return (\n   <ScrollView style={styles.container}>\n        <Stack.Screen options={{ title: selectedOrder?.title || 'Order Details' }} />\n\n       <View style={styles.section}>\n             <Text style={styles.sectionHeader}>Status</Text>\n         <Text style={styles.text}>{selectedOrder?.order_status}</Text>\n       </View>\n\n       <View style={styles.section}>\n         <Text style={styles.sectionHeader}>General</Text>\n        <Button title=\"Call Customer\" onPress={handleCallCustomer} />\n       <Button title=\"Email Customer\" onPress={handleEmailCustomer} />\n        <Button\n          title=\"Edit Shipping Information\"\n        //   onPress={() => navigation.navigate('EditShippingInfo', {\n        //      address: orderDetails.to_address?.streetOne,\n        //     city: orderDetails.to_address?.city,\n        //      state: orderDetails.to_address?.state,\n        //    zip: orderDetails.to_address?.zip,\n        //   })}\n        />\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Personal Information</Text>\n        <Text style={styles.text}>Address: {selectedOrder?.to_address.streetOne}</Text>\n        <Text style={styles.text}>City: {selectedOrder?.to_address?.city}</Text>\n        <Text style={styles.text}>State: {selectedOrder?.to_address?.state}</Text>\n        <Text style={styles.text}>Zip: {selectedOrder?.to_address?.zip}</Text>\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Time Stamp</Text>\n        <Text style={styles.text}>Created: {selectedOrder?.order_created_date}</Text>\n        <Text style={styles.text}>Placed: {selectedOrder?.order_placed_date}</Text>\n        <Text style={styles.text}>Shipped: {selectedOrder?.order_started_date}</Text>\n        <Text style={styles.text}>Completed: {selectedOrder?.order_completed_date}</Text>\n      </View>\n\n      <Button title=\"Update Order\" onPress={handleUpdateOrder} />\n    </ScrollView>\n  );\n};\n\nexport default OrderDetailsPage;\n\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    //   backgroundColor: COLORS.lightGray,\n      padding: SIZES.medium,\n    },\n    section: {\n      marginBottom: SIZES.large,\n    },\n    sectionHeader: {\n      fontSize: SIZES.large,\n      fontWeight: 'bold',\n      color: COLORS.primary,\n      marginBottom: SIZES.small,\n    },\n    text: {\n      fontSize: SIZES.medium,\n      color: COLORS.gray,\n      marginBottom: SIZES.small,\n    },\n  });\n\n\n\n// const styles = StyleSheet.create({\n//   container: {\n//     padding: SIZES.medium,\n//     // backgroundColor: COLORS.lightGray,\n//   },\n//   section: {\n//     marginBottom: SIZES.medium,\n//   },\n//   label: {\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//   },\n//   value: {\n//     fontSize: SIZES.large,\n//     color: COLORS.gray,\n//   },\n//   buttonContainer: {\n//     marginTop: SIZES.large,\n//   },\n// });\n// function addOrder(arg0: {}) {\n//     throw new Error('Function not implemented.');\n// }\n\n","import React, { useState } from 'react';\nimport { SafeAreaView, View, TextInput, TouchableOpacity, Text, FlatList, StyleSheet, Pressable } from 'react-native';\nimport { Feather, Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { useClientOrder } from '@/contexts/OrderContext';\n// import OrderCard from '@/components/OrderCard';  // Adjust the import path as necessary\nimport { Link, Stack } from 'expo-router';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\n// import Colors from '@/constants/Colors';\nimport { useColorScheme } from '@/hooks/useColorScheme';\nimport { OrderModelProps } from '@/models/OrderModelProps';\nimport ClientOrderCard from '@/components/pages/client-order/ClientOrderCard';\n\nconst ClientOrdersView = () => {\n  const { authState } = useAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<OrderModelProps[]>([]);\n\n  const { orders, selectOrder } = useClientOrder();\n  \n  const colorScheme = useColorScheme();\n\n  const handleOrderSelect = (order: OrderModelProps) => {\n    selectOrder(order);\n  };\n\n  const handleSearch = (text: string) => {\n    try {\n      setSearchTerm(text);\n      const results = orders.filter((order: OrderModelProps) =>\n        order.title.toLowerCase().includes(text.toLowerCase())\n      );\n      setSearchResults(results);\n    } catch (error) {\n      console.log(\"Failed to get orders\", error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Stack.Screen \n        options={{\n          headerRight: () => (\n            <Link href={\"(tabs)/client-orders/(create)/create-client-order\" as never} asChild>\n              <Pressable>\n                {({ pressed }) => (\n                  <FontAwesome\n                    name=\"plus\"\n                    size={30}\n                    color={COLORS[colorScheme ?? 'light'].text}\n                    style={{ marginRight: 15, opacity: pressed ? 0.5 : 1 }}\n                  />\n                )}\n              </Pressable>\n            </Link>\n          ),\n        }}\n      />\n\n      {/* Search */}\n{/* \n      <View style={styles.searchContainer}>\n        <TouchableOpacity>\n          <Ionicons \n            name='camera-outline' \n            size={SIZES.xLarge} \n            style={styles.searchIcon}\n          />\n        </TouchableOpacity>\n\n        <View style={styles.searchWrapper}>\n          <TextInput \n            style={styles.searchInput} \n            value={searchTerm}\n            onChangeText={handleSearch}\n            placeholder='What are you looking for'\n          />\n        </View>\n\n        <View>\n          <TouchableOpacity style={styles.searchBtn} onPress={() => handleSearch(searchTerm)}>\n            <Feather name='search' size={24} color={COLORS.offwhite}/>\n          </TouchableOpacity>\n        </View>\n      </View> */}\n\n      <FlatList\n        keyExtractor={(item: OrderModelProps) => item.id.toString()}\n        // data={searchTerm === '' ? orders : searchResults.length === 0 ? orders : searchResults}\n        data={orders}\n        // renderItem={({ item }) => <ClientOrderCard order={item} onPress={() => console.log('Order selected', item)} />}\n        renderItem={({ item }) =>  (\n          <TouchableOpacity onPress={() => handleOrderSelect(item)}>\n            <ClientOrderCard order={item}/>\n          </TouchableOpacity>\n        )}\n        contentContainerStyle={styles.list}\n      />\n    </View>\n  );\n};\n\nexport default ClientOrdersView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    // backgroundColor: COLORS.gray2,\n  },\n  detailsLink: {\n    marginHorizontal: SIZES.medium,\n    marginBottom: SIZES.medium,\n  },\n  detailsLinkText: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n    textDecorationLine: 'underline',\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    marginHorizontal: SIZES.small,\n    backgroundColor: COLORS.secondary,\n    borderRadius: SIZES.medium,\n    marginVertical: SIZES.medium,\n    height: 50,\n  },\n  searchIcon: {\n    marginHorizontal: 10,\n    color: COLORS.gray,\n    marginTop: SIZES.small,\n  },\n  searchWrapper:{ \n    flex: 1,\n    backgroundColor: COLORS.secondary,\n    marginRight: SIZES.small,\n    borderRadius: SIZES.small,\n  },\n  searchInput: {\n    fontFamily: \"regular\",\n    width: \"100%\",\n    height: \"100%\",\n    paddingHorizontal: SIZES.small,\n  },\n  searchBtn: {\n    width: 50,\n    height: \"100%\",\n    borderRadius: SIZES.medium,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.primary,\n  },\n  list: {\n    paddingHorizontal: SIZES.medium,\n    paddingBottom: SIZES.large,\n  },\n});","// OrderHistory.ts\nexport interface OrderHistory {\n  id: string;\n  title: string;\n  orderPlaced: boolean;\n  orderEmailSent: boolean;\n  orderPaymentReceived: boolean;\n  inventoryCheck: string;\n  orderProcessed: boolean;\n  orderPackaged: boolean;\n  orderShippingLabelGenerated: boolean;\n  orderShipped: boolean;\n  shippedDate: string;\n  trackingNumber: string;\n  deliveryConfirmed: boolean;\n  orderDeliveryDate: string;\n  orderReturned: boolean;\n  orderReturnLabelGenerated: boolean;\n  status: string;\n  note: string;\n}\n\n// Parcel.ts\nexport interface Parcel {\n  length: string;\n  width: string;\n  height: string;\n  distance_unit: string;\n  weight: string;\n  mass_unit: string;\n  value_amount: number;\n  metadata: string;\n  test: boolean;\n}\n\n// FullAddress.ts\nexport interface FullAddress {\n  name: string;\n  streetOne: string;\n  streetTwo: string;\n  city: string;\n  state: string;\n  zip: string;\n  country: string;\n  phone: string;\n  email: string;\n  is_residential: boolean;\n}\n\n// OrderItem.ts\nexport interface OrderItem {\n  id: string;\n  quantity: number;\n  sku: string;\n  title: string;\n  color: string;\n  productId: string;\n  size: string;\n  image: string;\n  total_price: number;\n  length: string;\n  width: string;\n  height: string;\n  weight: string;\n  weight_unit: string;\n  distance_unit: string;\n  description: string;\n  net_weight: string;\n  value_amount: number;\n  value_currency: string;\n  origin_country: string;\n  eccn_ear99: string;\n}\n\n// Order.ts\nexport interface OrderModelProps {\n  id: string;\n  stripe_id: string;\n  store_id: string;\n  index: number;\n  order_status: string;\n  items: OrderItem[];\n  userId: string;\n  order_history: OrderHistory[];\n  total: number;\n  net_total: number;\n  courier: string;\n  shipping_label: string;\n  return_label: string;\n  from_address: FullAddress;\n  to_address: FullAddress;\n  parcel: Parcel;\n  title: string;\n  type: string;\n  coupon_code: string;\n  referred_by: string;\n  statement_descriptor: string;\n  note: string;\n  budget: string;\n  order_placed_date: string;\n  order_started_date: string;\n  order_created_date: string;\n  order_completed_date: string;\n  tax: number;\n  stripe_fee: number;\n  afm_fee: number;\n  shipping_cost: number;\n  discount_amount: number;\n}\n\n\nexport const SAMPLE_ORDER_ITEMS: OrderItem[] = [\n  {\n    id: \"item123\",\n    quantity: 2,\n    sku: \"SKU12345\",\n    title: \"Sample Product 1\",\n    color: \"Red\",\n    productId: \"prod123\",\n    size: \"Medium\",\n    image: \"https://example.com/sample-product-1.jpg\",\n    total_price: 399.98,\n    length: \"10\",\n    width: \"5\",\n    height: \"3\",\n    weight: \"1.2\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"This is a sample product item for a larger order.\",\n    net_weight: \"1.1\",\n    value_amount: 200.00,\n    value_currency: \"USD\",\n    origin_country: \"USA\",\n    eccn_ear99: \"EAR99\",\n  },\n  {\n    id: \"item124\",\n    quantity: 1,\n    sku: \"SKU54321\",\n    title: \"Advanced Gadget\",\n    color: \"Silver\",\n    productId: \"prod124\",\n    size: \"Large\",\n    image: \"https://example.com/advanced-gadget.jpg\",\n    total_price: 299.99,\n    length: \"15\",\n    width: \"8\",\n    height: \"5\",\n    weight: \"2.0\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"An advanced gadget with cutting-edge technology.\",\n    net_weight: \"1.9\",\n    value_amount: 299.99,\n    value_currency: \"USD\",\n    origin_country: \"China\",\n    eccn_ear99: \"EAR99\",\n  },\n  {\n    id: \"item125\",\n    quantity: 3,\n    sku: \"SKU67890\",\n    title: \"Basic Accessory\",\n    color: \"Black\",\n    productId: \"prod125\",\n    size: \"One Size\",\n    image: \"https://example.com/basic-accessory.jpg\",\n    total_price: 89.97,\n    length: \"7\",\n    width: \"4\",\n    height: \"2\",\n    weight: \"0.5\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"A basic accessory to complement your gadgets.\",\n    net_weight: \"0.45\",\n    value_amount: 29.99,\n    value_currency: \"USD\",\n    origin_country: \"Germany\",\n    eccn_ear99: \"EAR99\",\n  },\n];\n\n\nexport const SAMPLE_ORDER_HISTORY: OrderHistory = {\n  id: \"history_12345\",\n  title: \"Order History for Order #12345\",\n  orderPlaced: true,\n  orderEmailSent: true,\n  orderPaymentReceived: true,\n  inventoryCheck: \"Inventory checked and verified\",\n  orderProcessed: true,\n  orderPackaged: true,\n  orderShippingLabelGenerated: true,\n  orderShipped: true,\n  shippedDate: \"2024-08-18T10:00:00Z\",\n  trackingNumber: \"TRACK123456789\",\n  deliveryConfirmed: false,\n  orderDeliveryDate: \"\",\n  orderReturned: false,\n  orderReturnLabelGenerated: false,\n  status: \"Shipped\",\n  note: \"Shipment is on its way to the customer.\",\n};\n\nexport const SAMPLE_FULL_ADDRESS: FullAddress = {\n  name: \"John Doe\",\n  streetOne: \"123 Main St\",\n  streetTwo: \"Apt 4B\",\n  city: \"New York\",\n  state: \"NY\",\n  zip: \"10001\",\n  country: \"USA\",\n  phone: \"+1 555-555-5555\",\n  email: \"johndoe@example.com\",\n  is_residential: true,\n};\n\nexport const SAMPLE_PARCEL: Parcel = {\n  length: \"10\",\n  width: \"5\",\n  height: \"8\",\n  distance_unit: \"in\", // Assuming inches for the distance unit\n  weight: \"2.5\",\n  mass_unit: \"lb\", // Assuming pounds for the mass unit\n  value_amount: 100, // Assuming a value of 100 currency units\n  metadata: \"Sample parcel metadata\",\n  test: false,\n};\n\nexport const SAMPLE_ORDER: OrderModelProps = {\n  id: \"order_12345\",\n  stripe_id: \"stripe_12345\",\n  store_id: \"store_123\",\n  index: 1,\n  order_status: \"Processing\",\n  items: SAMPLE_ORDER_ITEMS,\n  userId: \"user_123\",\n  order_history: [SAMPLE_ORDER_HISTORY],\n  total: 50.0,\n  net_total: 45.0,\n  courier: \"UPS\",\n  shipping_label: \"http://example.com/shipping-label.pdf\",\n  return_label: \"http://example.com/return-label.pdf\",\n  from_address: SAMPLE_FULL_ADDRESS,\n  to_address: SAMPLE_FULL_ADDRESS,\n  parcel: SAMPLE_PARCEL,\n  title: \"Order #12345\",\n  type: \"Standard\",\n  coupon_code: \"DISCOUNT10\",\n  referred_by: \"user_456\",\n  statement_descriptor: \"Sample Order\",\n  note: \"Please handle with care.\",\n  budget: \"50.0\",\n  order_placed_date: \"2024-08-17T08:00:00Z\",\n  order_started_date: \"2024-08-18T08:00:00Z\",\n  order_created_date: \"2024-08-17T08:00:00Z\",\n  order_completed_date: \"2024-08-19T08:00:00Z\",\n  tax: 5.0,\n  stripe_fee: 2.5,\n  afm_fee: 1.5,\n  shipping_cost: 10.0,\n  discount_amount: 5.0,\n};","import React, { FC, useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, Alert, TextInputProps } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useClientOrder } from '@/contexts/OrderContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { OrderModelProps, SAMPLE_ORDER_ITEMS } from '@/models/OrderModelProps';\nimport { generateUUID } from '@/hooks/generateUUID';\nimport { useAuth } from '@/contexts/AuthContext';\ninterface FormInputProps {\n    label: string;\n    value: any;\n    onChangeText: (text: string) => void;\n    placeholder: string;\n    keyboardType?: TextInputProps['keyboardType']; // 'default' is the default keyboard type in TextInput\n    multiline?: boolean;\n}\n\nconst FormInput: FC<FormInputProps> = ({\n  label,\n  value,\n  onChangeText,\n  placeholder,\n  keyboardType = 'default',\n  multiline = false,\n}) => (\n  <>\n    <Text style={styles.label}>{label}</Text>\n    <TextInput\n      style={[styles.input, multiline && styles.textArea]}\n      placeholder={placeholder}\n      value={value}\n      onChangeText={onChangeText}\n      keyboardType={keyboardType}\n      multiline={multiline}\n    />\n  </>\n);\n\nconst CreateClientOrderView = () => {\n  const [title, setTitle] = useState('title');\n  const [total, setTotal] = useState('200');\n  const [note, setNote] = useState('notes...');\n  const [to_address_name, setTo_address_name] = useState('Darrien');\n  const [to_address_streetOne, setTo_address_streetOne] = useState('643 Snediker Ave');\n  const [to_address_streetTwo, setTo_address_streetTwo] = useState('');\n  const [to_address_city, setTo_address_city] = useState('Brooklyn');\n  const [to_address_state, setTo_address_state] = useState('NY');\n  const [to_address_zip, setTo_address_zip] = useState('11207');\n  const [to_address_country, setTo_address_country] = useState('US');\n  const [to_address_phone, setTo_address_phone] = useState('3478800665');\n  const [to_address_email, setTo_address_email] = useState('darrien@gmail.com');\n\n  const { addOrder } = useClientOrder();\n  const { authState } = useAuth();\n\n  const handleSubmit = () => {\n    if (!title || !total || !to_address_name || !to_address_phone || !to_address_email) {\n      Alert.alert('Validation Error', 'Please fill in all required fields.');\n      return;\n    }\n\n    if (!/^\\d+(\\.\\d{1,2})?$/.test(total)) {\n      Alert.alert('Validation Error', 'Please enter a valid amount.');\n      return;\n    }\n\n    const newOrder: OrderModelProps = {\n      id: generateUUID(8),\n      stripe_id: '',\n      store_id: authState?.user?.store_owner_id ?? '',\n      index: 0,\n      order_status: 'Pending',\n      items: SAMPLE_ORDER_ITEMS,\n      userId: authState?.user?.id ?? '',\n      order_history: [],\n      total: parseFloat(total),\n      net_total: parseFloat(total),\n      courier: '',\n      shipping_label: '',\n      return_label: '',\n      from_address: {\n        name: 'darrien',\n        streetOne: '643 snediker ave',\n        streetTwo: '',\n        city: 'brooklyn NY',\n        state: 'NY',\n        zip: '11207',\n        country: 'US',\n        phone: '3478800665',\n        email: authState?.user?.email ?? '',\n        is_residential: false,\n      },\n      to_address: {\n        name: to_address_name || 'tom',\n        streetOne: to_address_streetOne || '343 snediker ave',\n        streetTwo: to_address_streetTwo,\n        city: to_address_city || 'brooklyn',\n        state: to_address_state || 'NY',\n        zip: to_address_zip || '11207',\n        country: to_address_country || 'US',\n        phone: to_address_phone || '3478800665',\n        email: to_address_email || 'darrien@gmail.com',\n        is_residential: false,\n      },\n      parcel: {\n        length: '',\n        width: '',\n        height: '',\n        distance_unit: '',\n        weight: '',\n        mass_unit: '',\n        value_amount: 0,\n        metadata: '',\n        test: false,\n      },\n      title,\n      type: '',\n      coupon_code: '',\n      referred_by: '',\n      statement_descriptor: '',\n      note,\n      budget: '',\n      order_placed_date: new Date().toISOString(),\n      order_started_date: '',\n      order_created_date: '',\n      order_completed_date: '',\n      tax: 0,\n      stripe_fee: 0,\n      afm_fee: 0,\n      shipping_cost: 0,\n      discount_amount: 0,\n    };\n\n    addOrder(newOrder);\n    // Alert.alert('Order Created', `Order titled \"${title}\" has been created!`);\n  };\n\n  return (\n    <ScrollView style={styles.formContainer}>\n      <FormInput label=\"Order Title\" value={title} onChangeText={setTitle} placeholder=\"Enter order title\" />\n      <Text style={styles.sectionHeader}>Customer Contact Information</Text>\n      <FormInput\n        label=\"Name\"\n        value={to_address_name}\n        onChangeText={setTo_address_name}\n        placeholder=\"Enter customer name\"\n      />\n      <FormInput\n        label=\"Phone\"\n        value={to_address_phone}\n        onChangeText={setTo_address_phone}\n        placeholder=\"Enter customer phone\"\n        keyboardType=\"phone-pad\"\n      />\n      <FormInput\n        label=\"Email\"\n        value={to_address_email}\n        onChangeText={setTo_address_email}\n        placeholder=\"Enter customer email\"\n        keyboardType=\"email-address\"\n      />\n      <FormInput\n        label=\"Address 1\"\n        value={to_address_streetOne}\n        onChangeText={setTo_address_streetOne}\n        placeholder=\"Enter address line 1\"\n      />\n      <FormInput\n        label=\"Address 2 (optional)\"\n        value={to_address_streetTwo}\n        onChangeText={setTo_address_streetTwo}\n        placeholder=\"Enter address line 2\"\n      />\n      <FormInput\n        label=\"City\"\n        value={to_address_city}\n        onChangeText={setTo_address_city}\n        placeholder=\"Enter city\"\n      />\n      <FormInput\n        label=\"State\"\n        value={to_address_state}\n        onChangeText={setTo_address_state}\n        placeholder=\"Enter state\"\n      />\n      <FormInput\n        label=\"Zip\"\n        value={to_address_zip}\n        onChangeText={setTo_address_zip}\n        placeholder=\"Enter zip code\"\n        keyboardType=\"numeric\"\n      />\n      <FormInput\n        label=\"Country\"\n        value={to_address_country}\n        onChangeText={setTo_address_country}\n        placeholder=\"Enter country\"\n      />\n      <FormInput\n        label=\"Total Amount\"\n        value={total}\n        onChangeText={setTotal}\n        placeholder=\"Enter total amount\"\n        keyboardType=\"numeric\"\n      />\n      <FormInput\n        label=\"Note\"\n        value={note}\n        onChangeText={setNote}\n        placeholder=\"Add a note (optional)\"\n        multiline\n      />\n\n      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n        <Ionicons name=\"checkmark-done-outline\" size={24} color={COLORS.white} />\n        <Text style={styles.submitButtonText}>Create Order</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nexport default CreateClientOrderView;\n\nconst styles = StyleSheet.create({\n  formContainer: {\n    padding: SIZES.medium,\n  },\n  label: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n    marginBottom: SIZES.small,\n  },\n  sectionHeader: {\n    fontSize: SIZES.large,\n    color: COLORS.primary,\n    marginBottom: SIZES.small,\n    fontWeight: 'bold',\n  },\n  input: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.small,\n    borderRadius: SIZES.small,\n    fontFamily: 'regular',\n    marginBottom: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: COLORS.primary,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    marginTop: SIZES.large,\n  },\n  submitButtonText: {\n    fontFamily: 'bold',\n    color: COLORS.white,\n    fontSize: SIZES.medium,\n    marginLeft: SIZES.small,\n  },\n});\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, Alert } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { useClientOrder } from '@/contexts/OrderContext';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { OrderModelProps, SAMPLE_ORDER_ITEMS } from '@/models/OrderModelProps';\n// import { generateUUID } from '@/hooks/generateUUID';\n// import { useAuth } from '@/contexts/AuthContext';\n// import { SAMPLE_PRODUCT } from '@/models/ProductModelProps';\n\n// const CreateClientOrderView = () => {\n//   const [title, setTitle] = useState('');\n//   const [total, setTotal] = useState('');\n//   const [note, setNote] = useState('');\n\n//   const [to_address_name, setTo_address_name] = useState('');\n//   const [to_address_streetOne, setTo_address_streetOne] = useState('');\n//   const [to_address_streetTwo, setTo_address_streetTwo] = useState('');\n//   const [to_address_city, setTo_address_city] = useState('');\n//   const [to_address_state, setTo_address_state] = useState('');\n//   const [to_address_zip, setTo_address_zip] = useState('');\n//   const [to_address_country, setTo_address_country] = useState('');\n//   const [to_address_phone, setTo_address_phone] = useState('');\n//   const [to_address_email, setTo_address_email] = useState('');\n\n\n\n\n\n//   const { getClientOrders , addOrder } = useClientOrder();\n//   const { authState } = useAuth();\n// //   const randomID = uuid();\n//   const handleSubmit = () => {\n//     if (!title || !total) {\n//       Alert.alert(\"Validation Error\", \"Please fill in all required fields.\");\n//       return;\n//     }\n\n//     // console.warn(\"Replace - SAMPLE_ORDER_ITEMS with cart products for order items\")\n//     const newOrder: OrderModelProps = {\n//       id: generateUUID(8),  // Generate a unique ID for the order\n//       stripe_id: '',\n//       store_id: authState?.user?.store_owner_id ?? \"\",\n//       index: 0,// getClientOrders.length,\n//       order_status: 'Pending', // Default status\n//       items: SAMPLE_ORDER_ITEMS,\n//       userId: authState?.user?.id ?? \"\",\n//       order_history: [],\n//       total: parseFloat(total),\n//       net_total: parseFloat(total),\n//       courier: '',\n//       shipping_label: '',\n//       return_label: '',\n//       from_address: {\n//         name: 'darrien',\n//         streetOne: '643 snediker ave',\n//         streetTwo: '',\n//         city: 'brooklyn NY',\n//         state: 'NY',\n//         zip: '11207',\n//         country: 'US',\n//         phone: '3478800665',\n//         email: authState?.user?.email ?? \"\",\n//         is_residential: false,\n//       },\n//       to_address: {\n//         name: to_address_name || \"tom\",\n//         streetOne: to_address_streetOne || \"343 snediker ave\",\n//         streetTwo: to_address_streetTwo,\n//         city: to_address_city || \"brooklyn\",\n//         state: to_address_state || \"NY\",\n//         zip: to_address_zip || \"11207\",\n//         country: to_address_country || \"US\",\n//         phone: to_address_phone || \"3478800665\",\n//         email: to_address_email || \"darrien@gmail.com\",\n//         is_residential: false,\n//       },\n//       parcel: {\n//         length: '',\n//         width: '',\n//         height: '',\n//         distance_unit: '',\n//         weight: '',\n//         mass_unit: '',\n//         value_amount: 0,\n//         metadata: '',\n//         test: false,\n//       },\n//       title,\n//       type: '',\n//       coupon_code: '',\n//       referred_by: '',\n//       statement_descriptor: '',\n//       note,\n//       budget: '',\n//       order_placed_date:  new Date().toISOString(),\n//       order_started_date: '',\n//       order_created_date: '',\n//       order_completed_date: '',\n//       tax: 0,\n//       stripe_fee: 0,\n//       afm_fee: 0,\n//       shipping_cost: 0,\n//       discount_amount: 0,\n//     };\n\n//     console.log(newOrder)\n\n//     addOrder(newOrder);\n//     Alert.alert(\"Order Created\", `Order titled \"${title}\" has been created!`);\n//   };\n\n//   return (\n//     <ScrollView style={styles.formContainer}>\n//       <Text style={styles.label}>Order Title</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order title\"\n//         value={title}\n//         onChangeText={setTitle}\n//       />\n\n//    {/* Contact  Section */}\n//    <Text style={styles.sectionHeader}>Customer Contact Information</Text>\n\n//    <Text style={styles.label}>Name</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter customer name\"\n//         value={to_address_name}\n//         onChangeText={setTo_address_name}\n//       />\n    \n//     <Text style={styles.label}>Phone</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order phone\"\n//         value={to_address_phone}\n//         onChangeText={setTo_address_phone}\n//       />\n      \n//       <Text style={styles.label}>Address 1</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order address\"\n//         value={to_address_streetOne}\n//         onChangeText={setTo_address_streetOne}\n//       />\n      \n\n//       <Text style={styles.label}>Address 2 (optional)</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order address\"\n//         value={to_address_streetTwo}\n//         onChangeText={setTo_address_streetTwo}\n//       />\n      \n\n//       <Text style={styles.label}>City</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order city\"\n//         value={to_address_city}\n//         onChangeText={setTo_address_city}\n//       />\n      \n\n//       <Text style={styles.label}>State</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order state\"\n//         value={to_address_state}\n//         onChangeText={setTo_address_state}\n//       />\n      \n\n//       <Text style={styles.label}>Zip</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order zip\"\n//         value={to_address_zip}\n//         onChangeText={setTo_address_zip}\n//       />\n\n\n//       <Text style={styles.label}>Country</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order country\"\n//         value={to_address_country}\n//         onChangeText={setTo_address_country}\n//       />\n      \n\n//       <Text style={styles.label}>Email</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order email\"\n//         value={to_address_email}\n//         onChangeText={setTo_address_email}\n//       />\n      \n\n//       <Text style={styles.label}>Order Title</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter order title\"\n//         value={title}\n//         onChangeText={setTitle}\n//       />\n      \n\n\n\n//       <Text style={styles.label}>Total Amount</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Enter total amount\"\n//         value={total}\n//         onChangeText={setTotal}\n//         keyboardType=\"numeric\"\n//       />\n\n//       <Text style={styles.label}>Note</Text>\n//       <TextInput\n//         style={[styles.input, styles.textArea]}\n//         placeholder=\"Add a note (optional)\"\n//         value={note}\n//         onChangeText={setNote}\n//         multiline\n//       />\n\n//       <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n//         <Ionicons name=\"checkmark-done-outline\" size={24} color={COLORS.white} />\n//         <Text style={styles.submitButtonText}>Create Order</Text>\n//       </TouchableOpacity>\n//     </ScrollView>\n//   );\n// };\n\n// export default CreateClientOrderView;\n\n// const styles = StyleSheet.create({\n\n//   formContainer: {\n//     padding: SIZES.medium,\n//     // backgroundColor: COLORS.lightGray,\n//   },\n//   label: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//   },\n//   sectionHeader: {\n//     fontSize: SIZES.large,\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//     fontWeight: 'bold',\n//   },\n//   input: {\n//     backgroundColor: COLORS.white,\n//     padding: SIZES.small,\n//     borderRadius: SIZES.small,\n//     fontFamily: 'regular',\n//     marginBottom: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 2,\n//   },\n//   textArea: {\n//     height: 100,\n//     textAlignVertical: 'top',\n//   },\n//   submitButton: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     backgroundColor: COLORS.primary,\n//     padding: SIZES.medium,\n//     borderRadius: SIZES.medium,\n//     marginTop: SIZES.large,\n//   },\n//   submitButtonText: {\n//     fontFamily: 'bold',\n//     color: COLORS.white,\n//     fontSize: SIZES.medium,\n//     marginLeft: SIZES.small,\n//   },\n// });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { View, Text, TextInput, Button, ScrollView, Image, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\n// import { useClientOrder } from '@/contexts/OrderContext'; // Replace with actual import\n// import { useAuth } from '@/contexts/AuthContext'; // Replace with actual import\n// import { COLORS, SIZES } from '@/utils/theme'; // Replace with actual theme imports\n// import { OrderModelProps, SAMPLE_ORDER_ITEMS } from '@/models/OrderModelProps';\n// import { generateUUID } from '@/hooks/generateUUID';\n\n// const CreateClientOrderView = () => {\n//   const [title, setTitle] = useState('');\n//   const [user_name, setUserName] = useState('');\n//   const [address, setAddress] = useState('');\n//   const [address_city, setAddressCity] = useState('');\n//   const [address_state, setAddressState] = useState('');\n//   const [address_zip, setAddressZip] = useState('');\n//   const [coupon_code, setCouponCode] = useState('');\n//   const [courier, setCourier] = useState('');\n// //   const [orderItems, setOrderItems] = useState([]);\n// //   const [selectedUser, setSelectedUser] = useState('');\n  \n//   const { addOrder } = useClientOrder();\n//   const { authState } = useAuth();\n  \n//   const handleCreateOrder = () => {\n//     // const newOrder = {\n//     //   title,\n//     //   user_name: selectedUser || user_name,\n//     //   address,\n//     //   address_city,\n//     //   address_state,\n//     //   address_zip,\n//     //   coupon_code,\n//     //   courier,\n//     //   items: orderItems,\n//     //   order_status: 'Pending',\n//     //   total: calculateFullTotal(),\n//     //   net_total: calculateFullTotal(),\n//     //   order_placed_date: new Date().toISOString(),\n//     //   note: '',\n//     //   afm_fee: 5.5,\n//     //   stripe_fee: 2.9 + 0.30,\n//     //   store_id: authState?.user?.store_owner_id || '',\n//     // };\n\n//     const newOrder: OrderModelProps = {\n//         id: generateUUID(8), // Generate a unique ID for the order\n//         stripe_id: '',\n//         store_id: authState?.user?.store_owner_id ?? \"\",\n//         index: 0, // getClientOrders.length,\n//         order_status: 'Pending', // Default status\n//         items: SAMPLE_ORDER_ITEMS,\n//         userId: authState?.user?.id ?? \"\",\n//         order_history: [],\n//         total: 20, // parseFloat(total),\n//         net_total: 20, // parseFloat(total),\n//         courier: '',\n//         shipping_label: '',\n//         return_label: '',\n//         from_address: {\n//             name: 'darrien',\n//             streetOne: '643 snediker ave',\n//             streetTwo: '',\n//             city: 'brooklyn NY',\n//             state: '',\n//             zip: '',\n//             country: '',\n//             phone: '',\n//             email: authState?.user?.email ?? \"\",\n//             is_residential: false,\n//         },\n//         to_address: {\n//             name: '',\n//             streetOne: '',\n//             streetTwo: '',\n//             city: '',\n//             state: '',\n//             zip: '',\n//             country: '',\n//             phone: '',\n//             email: 'test',\n//             is_residential: false,\n//         },\n//         parcel: {\n//             length: '',\n//             width: '',\n//             height: '',\n//             distance_unit: '',\n//             weight: '',\n//             mass_unit: '',\n//             value_amount: 0,\n//             metadata: '',\n//             test: false,\n//         },\n//         title,\n//         type: '',\n//         coupon_code: '',\n//         referred_by: '',\n//         statement_descriptor: '',\n\n//         budget: '',\n//         order_placed_date: \"\", // new Date().toISOString(),\n//         order_started_date: '',\n//         order_created_date: '',\n//         order_completed_date: '',\n//         tax: 0,\n//         stripe_fee: 0,\n//         afm_fee: 0,\n//         shipping_cost: 0,\n//         discount_amount: 0,\n//         note: ''\n//     };\n//     addOrder(newOrder)\n//       .then(() => {\n//         console.log('Order created successfully');\n//       })\n//       .catch((error) => {\n//         console.error('Failed to create order:', error);\n//       });\n//   };\n\n  \n\n// //   const calculateFullTotal = () => {\n// //     let total = 0;\n// //     orderItems.forEach(item => {\n// //         // total += item.total_price;\n// //         total += item.total_price;\n// //     });\n// //     const percentageAmount = total * (5.5 / 100.0); // Example percentage\n// //     const fixedAmount = 0.30; // Example fixed fee\n// //     return total - percentageAmount - fixedAmount;\n// //   };\n\n//   return (\n//     <ScrollView style={styles.container}>\n//       <Text style={styles.header}>Create Order</Text>\n\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Customer Name\"\n//         value={ user_name}\n//         onChangeText={setUserName}\n//       />\n\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Address\"\n//         value={address}\n//         onChangeText={setAddress}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"City\"\n//         value={address_city}\n//         onChangeText={setAddressCity}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"State\"\n//         value={address_state}\n//         onChangeText={setAddressState}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Zip\"\n//         value={address_zip}\n//         onChangeText={setAddressZip}\n//       />\n\n//       <Text style={styles.sectionHeader}>Pricing</Text>\n//       {/* <Text style={styles.label}>Net Total: ${calculateFullTotal()}</Text> */}\n//       {/* <Text style={styles.label}>AFM Fee: 5.5%</Text>\n//       <Text style={styles.label}>Processing Fee: 2.9% + $0.30</Text> */}\n\n//       {/* <FlatList\n//         data={orderItems}\n//         keyExtractor={item => item.id}\n//         renderItem={({ item }) => (\n//           <View style={styles.itemCard}>\n//             <Image source={{ uri: item.image }} style={styles.itemImage} />\n//             <View style={styles.itemDetails}>\n//               <Text>{item.title}</Text>\n//               <Text>{item.color} - {item.size}</Text>\n//               <Text>${item.total_price}</Text>\n//             </View>\n//           </View>\n//         )}\n//       /> */}\n\n//       <TouchableOpacity style={styles.createButton} onPress={handleCreateOrder}>\n//         <Text style={styles.createButtonText}>Create Order</Text>\n//       </TouchableOpacity>\n//     </ScrollView>\n//   );\n// };\n\n// export default CreateClientOrderView;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     padding: SIZES.medium,\n//   },\n//   header: {\n//     fontSize: SIZES.large,\n//     fontWeight: 'bold',\n//     marginBottom: SIZES.medium,\n//   },\n//   input: {\n//     padding: SIZES.small,\n//     borderWidth: 1,\n//     borderColor: COLORS.gray,\n//     borderRadius: SIZES.small,\n//     marginBottom: SIZES.medium,\n//   },\n//   sectionHeader: {\n//     fontSize: SIZES.medium,\n//     fontWeight: 'bold',\n//     marginBottom: SIZES.small,\n//   },\n//   label: {\n//     fontSize: SIZES.small,\n//     marginBottom: SIZES.small,\n//   },\n//   itemCard: {\n//     flexDirection: 'row',\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.small,\n//     backgroundColor: COLORS.white,\n//     borderRadius: SIZES.small,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 2,\n//   },\n//   itemImage: {\n//     width: 60,\n//     height: 60,\n//     borderRadius: SIZES.small,\n//   },\n//   itemDetails: {\n//     marginLeft: SIZES.medium,\n//     justifyContent: 'center',\n//   },\n//   createButton: {\n//     backgroundColor: COLORS.primary,\n//     padding: SIZES.medium,\n//     borderRadius: SIZES.medium,\n//     alignItems: 'center',\n//   },\n//   createButtonText: {\n//     color: COLORS.white,\n//     fontSize: SIZES.medium,\n//     fontWeight: 'bold',\n//   },\n// });\n\n\n\n\n\n\n","\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { COLORS, SIZES } from \"@/utils/theme\";\nimport convertToCurrency from \"@/hooks/convertToCurrency\";\nimport { ProductModelProps } from \"@/models/ProductModelProps\";\nimport { Link } from \"expo-router\";\nimport { useClientProduct } from \"@/contexts/ClientProductContext\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst ClientProductCard: React.FC<{ product: ProductModelProps }> = ({\n  product,\n}) => {\n  const { selectProduct } = useClientProduct();\n  const [status, setStatus] = useState<boolean>(product.active);\n\n  const handleProductPress = () => {\n    selectProduct(product);\n  };\n\n  useEffect(() => {\n    setStatus(product.active);\n  }, [product.active]);\n\n  return (\n    <Link\n      href={`(tabs)/client-products/(details)/${product.id}` as never}\n      asChild\n    >\n      <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n        <View style={styles.body}>\n          <Ionicons\n            name=\"bag\"\n            size={30}\n            color={COLORS.primary}\n            style={styles.icon}\n          />\n          <View style={styles.details}>\n            <Text style={styles.name}>{product.name}</Text>\n            <Text style={styles.price}>{convertToCurrency(product.price)}</Text>\n            <Text style={styles.date}>Placed on: {product.createdOn}</Text>\n          </View>\n          <View style={styles.statusContainer}>\n            <Text style={[styles.status, getStatusStyle(status)]}>\n              {status ? \"Active\" : \"Inactive\"}\n            </Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Link>\n  );\n};\n\nconst getStatusStyle = (status: boolean) => {\n  if (status) {\n    return styles.activeStatus;\n  } else {\n    return styles.inactiveStatus;\n  }\n};\n\nexport default ClientProductCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: COLORS.white,\n    borderRadius: SIZES.medium,\n    marginBottom: SIZES.medium,\n    padding: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  body: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  icon: {\n    paddingRight: SIZES.medium,\n  },\n  details: {\n    flex: 1,\n  },\n  name: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  price: {\n    fontFamily: \"regular\",\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  date: {\n    fontFamily: \"regular\",\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  statusContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  status: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.small,\n    paddingVertical: SIZES.small,\n    paddingHorizontal: SIZES.medium,\n    borderRadius: SIZES.large,\n  },\n  activeStatus: {\n    backgroundColor: COLORS.green,\n    color: COLORS.white,\n  },\n  inactiveStatus: {\n    backgroundColor: COLORS.red,\n    color: COLORS.white,\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\n// import { COLORS, SIZES } from \"@/utils/theme\";\n// import convertToCurrency from \"@/hooks/convertToCurrency\";\n// import { ProductModelProps } from \"@/models/ProductModelProps\";\n// import { Link } from \"expo-router\";\n// import { useClientProduct } from \"@/contexts/ClientProductContext\";\n// import { Ionicons } from \"@expo/vector-icons\";\n\n// const ClientProductCard: React.FC<{ product: ProductModelProps }> = ({\n//   product,\n// }) => {\n//   const { selectProduct } = useClientProduct();\n//   const [status, setStatus] = useState<boolean>(false);\n\n//   const handleProductPress = () => {\n//     selectProduct(product);\n//   };\n\n//   useEffect(() => {\n//     setStatus(product.active);\n//   }, [product.active]);\n\n//   return (\n//     <Link\n//       href={`(tabs)/client-products/(details)/${product.id}` as never}\n//       asChild\n//     >\n//       <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n//         <View style={styles.body}>\n//           <Ionicons\n//             name=\"bag\"\n//             size={30}\n//             color={COLORS.primary}\n//             style={styles.icon}\n//           />\n//           <View style={styles.details}>\n//             <Text style={styles.name}>{product.name}</Text>\n//             <Text style={styles.price}>{convertToCurrency(product.price)}</Text>\n//             <Text style={styles.date}>Placed on: {product.createdOn}</Text>\n//           </View>\n//           <View style={styles.statusContainer}>\n//             <Text style={[styles.status, getStatusStyle(status)]}>\n//               {status}\n//             </Text>\n//           </View>\n//         </View>\n//       </TouchableOpacity>\n//     </Link>\n//   );\n// };\n\n// const getStatusStyle = (status: string) => {\n//   switch (status) {\n//     case \"Fulfill Product\":\n//       return styles.fulfillProductStatus;\n//     case \"Mark as Shipped\":\n//       return styles.markAsShippedStatus;\n//     case \"Shipped !\":\n//       return styles.shippedStatus;\n//     default:\n//       return styles.defaultStatus;\n//   }\n// };\n\n// export default ClientProductCard;\n\n// const styles = StyleSheet.create({\n//   card: {\n//     backgroundColor: COLORS.white,\n//     borderRadius: SIZES.medium,\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 5,\n//   },\n//   body: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//   },\n//   icon: {\n//     paddingRight: SIZES.medium,\n//   },\n//   details: {\n//     flex: 1,\n//   },\n//   name: {\n//     fontFamily: \"bold\",\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   price: {\n//     fontFamily: \"regular\",\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   date: {\n//     fontFamily: \"regular\",\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   statusContainer: {\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//   },\n//   status: {\n//     fontFamily: \"bold\",\n//     fontSize: SIZES.small,\n//     paddingVertical: SIZES.small,\n//     paddingHorizontal: SIZES.medium,\n//     borderRadius: SIZES.large,\n//   },\n//   fulfillProductStatus: {\n//     backgroundColor: COLORS.primary,\n//     color: COLORS.white,\n//   },\n//   markAsShippedStatus: {\n//     backgroundColor: COLORS.orange,\n//     color: COLORS.black,\n//   },\n//   shippedStatus: {\n//     backgroundColor: COLORS.green,\n//     color: COLORS.black,\n//   },\n//   defaultStatus: {\n//     backgroundColor: COLORS.blue,\n//     color: COLORS.white,\n//   },\n// });\n\n// // ProductCard.tsx\n// import React from 'react';\n// import { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\n// // import { ProductModelProps } from './Product';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { Ionicons } from '@expo/vector-icons';\n// import convertToCurrency from '@/hooks/convertToCurrency';\n// import { ProductModelProps } from '@/models/ProductModelProps';\n// import { Link } from 'expo-router';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n\n// const ClientProductCard: React.FC<ProductModelProps> = (product) => {\n//   const { selectProduct } = useClientProduct();\n\n//   const handleProductPress = () => {\n//     selectProduct(product);\n//   };\n//   return (\n//     // <Link href={\"(tabs)/client-products/(create)/create-client-product\" as never} asChild>\n//     // <Link href={\"(tabs)/client-products/(create)/create-client-product\" as never} asChild>\n\n//     <Link href={`(tabs)/client-products/(details)/${product.id}` as never} asChild>\n\n//     <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n//       <View style={styles.header}>\n//         <Text style={styles.productId}>Product ID: {product.id}</Text>\n//         <Text style={styles.status}>{product.product_status}</Text>\n//       </View>\n\n//       <View style={styles.body}>\n//         {/* <Image source={{ uri: props.items[0].image }} style={styles.image} /> */}\n//         <View style={styles.details}>\n//           <Text style={styles.title}>{product.title}</Text>\n//           <Text style={styles.date}>Placed on: {product.product_placed_date}</Text>\n//           <Text style={styles.price}>{convertToCurrency(product.total)}</Text>\n//         </View>\n//       </View>\n\n//       <View style={styles.footer}>\n//         <Ionicons name=\"square\" size={24} color={COLORS.primary} />\n//       </View>\n//     </TouchableOpacity>\n//     </Link>\n//   );\n// };\n\n// export default ClientProductCard;\n\n// const styles = StyleSheet.create({\n//   card: {\n//     backgroundColor: COLORS.white,\n//     bproductRadius: SIZES.medium,\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 5,\n//   },\n//   header: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//     marginBottom: SIZES.small,\n//   },\n//   productId: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   status: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   body: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//   },\n//   image: {\n//     width: 60,\n//     height: 60,\n//     bproductRadius: SIZES.small,\n//     marginRight: SIZES.medium,\n//   },\n//   details: {\n//     flex: 1,\n//   },\n//   title: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     marginBottom: SIZES.small,\n//     color: COLORS.primary,\n//   },\n//   date: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   price: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginTop: SIZES.small,\n//   },\n//   footer: {\n//     flexDirection: 'row',\n//     justifyContent: 'flex-end',\n//     marginTop: SIZES.small,\n//   },\n// });\n","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Button, Alert, ScrollView, Linking } from 'react-native';\nimport { Stack, useLocalSearchParams, useRouter } from 'expo-router';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { ProductModelProps } from '@/models/ProductModelProps';\n\nconst ClientProductDetailsPage = () => {\n  const { selectedProduct, removeClientProduct, addClientProduct } = useClientProduct();\n  const router = useRouter();\n  const [productDetails, setProductDetails] = useState<ProductModelProps | null>(null);\n\n  // State variables to handle product details\n  const [status, setStatus] = useState('');\n  const [total, setTotal] = useState(0.0);\n  const [address, setAddress] = useState('');\n  const [addressZip, setAddressZip] = useState('');\n  const [addressState, setAddressState] = useState('');\n  const [addressCity, setAddressCity] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [productPlacedDate, setProductPlacedDate] = useState('');\n  const [productCompletedDate, setProductCompletedDate] = useState('');\n\n  useEffect(() => {\n    if (selectedProduct) {\n      // Populate state variables with selected product details\n      // setStatus(selectedProduct.active);\n      setTotal(selectedProduct.price);\n      // setAddress(selectedProduct.to_address.streetOne);\n      // setAddressZip(selectedProduct.to_address.zip);\n      // setAddressState(selectedProduct.to_address.state);\n      // setAddressCity(selectedProduct.to_address.city);\n      // setPhoneNumber(selectedProduct.to_address.phone);\n      // setProductPlacedDate(selectedProduct.product_placed_date);\n      // setProductCompletedDate(selectedProduct.product_completed_date);\n   \n   \n    }\n  }, [selectedProduct]);\n\n  const handleCallCustomer = () => {\n    // Trigger phone dialer with customer's phone number\n    if (phoneNumber) {\n      Linking.openURL(`tel:${phoneNumber}`);\n    } else {\n      Alert.alert('Error', 'Phone number is not available.');\n    }\n  };\n\n\n\n  const handleUpdateProduct = () => {\n    if (!productDetails) return;\n\n    Alert.alert(\n      'Confirmation',\n      'Are you sure you want to proceed?',\n      [\n        {\n          text: 'Yes',\n          onPress: () => {\n            // Your update logic here\n            addClientProduct(productDetails);\n            // navigation.goBack();\n          },\n        },\n        { text: 'No', style: 'cancel' },\n      ],\n      { cancelable: true }\n    );\n  };\n\n  const handleDeleteProduct = () => {\n    if (!selectedProduct?.id) {\n      Alert.alert('Error', 'Product ID is missing.');\n      return;\n    }\n  \n    Alert.alert('Confirmation', 'Are you sure you want to delete this product?', [\n      {\n        text: 'Yes',\n        onPress: () => {\n          removeClientProduct(selectedProduct.id);\n          router.back();\n        },\n      },\n      {\n        text: 'No',\n        style: 'cancel',\n      },\n    ]);\n  };\n  \n\n  return (\n   <ScrollView style={styles.container}>\n        <Stack.Screen options={{ title: selectedProduct?.name || 'Product Details' }} />\n\n       <View style={styles.section}>\n             <Text style={styles.sectionHeader}>Status</Text>\n         <Text style={styles.text}>{selectedProduct?.active}</Text>\n       </View>\n\n       <View style={styles.section}>\n         <Text style={styles.sectionHeader}>General</Text>\n        <Button title=\"Call Customer\" onPress={handleCallCustomer} />\n       {/* <Button title=\"Email Customer\" onPress={handleEmailCustomer} /> */}\n        <Button\n          title=\"Edit Shipping Information\"\n        //   onPress={() => navigation.navigate('EditShippingInfo', {\n        //      address: productDetails.to_address?.streetOne,\n        //     city: productDetails.to_address?.city,\n        //      state: productDetails.to_address?.state,\n        //    zip: productDetails.to_address?.zip,\n        //   })}\n        />\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Personal Information</Text>\n        {/* <Text style={styles.text}>Address: {selectedProduct?.to_address.streetOne}</Text>\n        <Text style={styles.text}>City: {selectedProduct?.to_address?.city}</Text>\n        <Text style={styles.text}>State: {selectedProduct?.to_address?.state}</Text>\n        <Text style={styles.text}>Zip: {selectedProduct?.to_address?.zip}</Text> */}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Time Stamp</Text>\n        {/* <Text style={styles.text}>Created: {selectedProduct?.product_created_date}</Text>\n        <Text style={styles.text}>Placed: {selectedProduct?.product_placed_date}</Text>\n        <Text style={styles.text}>Shipped: {selectedProduct?.product_started_date}</Text>\n        <Text style={styles.text}>Completed: {selectedProduct?.product_completed_date}</Text>\n      </View> */}\n      </View> \n      <Button title=\"Update Product\" onPress={handleUpdateProduct} />\n    </ScrollView>\n  );\n};\n\nexport default ClientProductDetailsPage;\n\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    //   backgroundColor: COLORS.lightGray,\n      padding: SIZES.medium,\n    },\n    section: {\n      marginBottom: SIZES.large,\n    },\n    sectionHeader: {\n      fontSize: SIZES.large,\n      fontWeight: 'bold',\n      color: COLORS.primary,\n      marginBottom: SIZES.small,\n    },\n    text: {\n      fontSize: SIZES.medium,\n      color: COLORS.gray,\n      marginBottom: SIZES.small,\n    },\n  });\n\n\n\n// const styles = StyleSheet.create({\n//   container: {\n//     padding: SIZES.medium,\n//     // backgroundColor: COLORS.lightGray,\n//   },\n//   section: {\n//     marginBottom: SIZES.medium,\n//   },\n//   label: {\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginBottom: SIZES.small,\n//   },\n//   value: {\n//     fontSize: SIZES.large,\n//     color: COLORS.gray,\n//   },\n//   buttonContainer: {\n//     marginTop: SIZES.large,\n//   },\n// });\n// function addProduct(arg0: {}) {\n//     throw new Error('Function not implemented.');\n// }\n\n","import React, { useState } from 'react';\nimport { SafeAreaView, View, TextInput, TouchableOpacity, Text, FlatList, StyleSheet, Pressable } from 'react-native';\nimport { Feather, Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n// import ProductCard from '@/components/ProductCard';  // Adjust the import path as necessary\nimport { Link, Stack } from 'expo-router';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\n// import Colors from '@/constants/Colors';\nimport { useColorScheme } from '@/hooks/useColorScheme';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport ClientProductCard from '@/components/pages/client-product/ClientProductCard';\n\nconst ClientProductsView = () => {\n  const { authState } = useAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<ProductModelProps[]>([]);\n\n  const { products, selectProduct } = useClientProduct();\n  \n  const colorScheme = useColorScheme();\n\n  const handleProductSelect = (product: ProductModelProps) => {\n    selectProduct(product);\n  };\n\n  const handleSearch = (text: string) => {\n    try {\n      setSearchTerm(text);\n      const results = products.filter((product: ProductModelProps) =>\n        product.name.toLowerCase().includes(text.toLowerCase())\n      );\n      setSearchResults(results);\n    } catch (error) {\n      console.log(\"Failed to get products\", error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Stack.Screen \n        options={{\n          headerRight: () => (\n            <Link href={\"(tabs)/client-products/(create)/create-client-product\" as never} asChild>\n              <Pressable>\n                {({ pressed }) => (\n                  <FontAwesome\n                    name=\"plus\"\n                    size={30}\n                    color={COLORS[colorScheme ?? 'light'].text}\n                    style={{ marginRight: 15, opacity: pressed ? 0.5 : 1 }}\n                  />\n                )}\n              </Pressable>\n            </Link>\n          ),\n        }}\n      />\n\n      {/* Search */}\n{/* \n      <View style={styles.searchContainer}>\n        <TouchableOpacity>\n          <Ionicons \n            name='camera-outline' \n            size={SIZES.xLarge} \n            style={styles.searchIcon}\n          />\n        </TouchableOpacity>\n\n        <View style={styles.searchWrapper}>\n          <TextInput \n            style={styles.searchInput} \n            value={searchTerm}\n            onChangeText={handleSearch}\n            placeholder='What are you looking for'\n          />\n        </View>\n\n        <View>\n          <TouchableOpacity style={styles.searchBtn} onPress={() => handleSearch(searchTerm)}>\n            <Feather name='search' size={24} color={COLORS.offwhite}/>\n          </TouchableOpacity>\n        </View>\n      </View> */}\n\n      <FlatList\n        keyExtractor={(item: ProductModelProps) => item.id.toString()}\n        // data={searchTerm === '' ? products : searchResults.length === 0 ? products : searchResults}\n        data={products}\n        // renderItem={({ item }) => <ClientProductCard product={item} onPress={() => console.log('Product selected', item)} />}\n        renderItem={({ item }) =>  (\n          <TouchableOpacity onPress={() => handleProductSelect(item)}>\n            <ClientProductCard product={item}/>\n          </TouchableOpacity>\n        )}\n        contentContainerStyle={styles.list}\n      />\n    </View>\n  );\n};\n\nexport default ClientProductsView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    // backgroundColor: COLORS.gray2,\n  },\n  detailsLink: {\n    marginHorizontal: SIZES.medium,\n    marginBottom: SIZES.medium,\n  },\n  detailsLinkText: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n    textDecorationLine: 'underline',\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    marginHorizontal: SIZES.small,\n    backgroundColor: COLORS.secondary,\n    borderRadius: SIZES.medium,\n    marginVertical: SIZES.medium,\n    height: 50,\n  },\n  searchIcon: {\n    marginHorizontal: 10,\n    color: COLORS.gray,\n    marginTop: SIZES.small,\n  },\n  searchWrapper:{ \n    flex: 1,\n    backgroundColor: COLORS.secondary,\n    marginRight: SIZES.small,\n    borderRadius: SIZES.small,\n  },\n  searchInput: {\n    fontFamily: \"regular\",\n    width: \"100%\",\n    height: \"100%\",\n    paddingHorizontal: SIZES.small,\n  },\n  searchBtn: {\n    width: 50,\n    height: \"100%\",\n    borderRadius: SIZES.medium,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.primary,\n  },\n  list: {\n    paddingHorizontal: SIZES.medium,\n    paddingBottom: SIZES.large,\n  },\n});","import React, { FC } from \"react\";\nimport { Text, TextInput, TextInputProps, StyleSheet, View } from \"react-native\";\n\nexport interface FormInputProps {\n    label: string;\n    value: any;\n    onChangeText: (text: string) => void;\n    placeholder: string;\n    keyboardType?: TextInputProps['keyboardType'];\n    multiline?: boolean;\n}\n\nexport const FormInput: FC<FormInputProps> = ({\n  label,\n  value,\n  onChangeText,\n  placeholder,\n  keyboardType = 'default',\n  multiline = false,\n}) => (\n  <View style={styles.container}>\n    <Text style={styles.label}>{label}</Text>\n    <TextInput\n      style={[styles.input, multiline && styles.textArea]}\n      placeholder={placeholder}\n      value={value}\n      onChangeText={onChangeText}\n      keyboardType={keyboardType}\n      multiline={multiline}\n    />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  input: {\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top', // Ensures the text starts at the top of the input\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, Alert } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport { generateUUID } from '@/hooks/generateUUID';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { FormInput } from '@/components/interfaces/FormImport';\n\nconst CreateClientProductView = () => {\n  const [title, setTitle] = useState('');\n  const [price, setPrice] = useState('');\n  const [note, setNote] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [sku, setSku] = useState('');\n\n  const { addClientProduct } = useClientProduct();\n  const { authState } = useAuth();\n\n  const handleSubmit = () => {\n    // if (!title || !price || !brand || !category) {\n    //   Alert.alert('Validation Error', 'Please fill in all required fields.');\n    //   return;\n    // }\n\n    if (!/^\\d+(\\.\\d{1,2})?$/.test(price)) {\n      Alert.alert('Validation Error', 'Please enter a valid price.');\n      return;\n    }\n\n    const newProduct: ProductModelProps = {\n      id: generateUUID(8),\n      store_id: authState?.user?.store_owner_id ?? '',\n      index: 0,\n      createdOn: '',\n      active: false,\n      name: title,\n      image: '',\n      price: parseFloat(price),\n      on_sale: false,\n      sale_price: 0,\n      slug: '',\n      quantity: parseInt(quantity) || 0,\n      description: note,\n      icon_name: '',\n      category: category,\n      images: [],\n      included: [],\n      materials: [],\n      tags: [],\n      brand: brand,\n      views: 0,\n      likes: 0,\n      isLiked: false,\n      gender: '',\n      color: '',\n      color_code: '',\n      condition: '',\n      features: [],\n      sku: sku,\n      variant_type: false,\n      variant_selected: {},\n      variants: [],\n      last_updated: '',\n      item_type: '',\n      ingredients: [],\n      inventory: 0,\n      reviews: [],\n      rating: [],\n      size: '',\n      sizes: [],\n      weight: 0,\n      year_made: 0\n    };\n\n    addClientProduct(newProduct);\n    \n    // Alert.alert('Product Created', `Product titled \"${title}\" has been created!`);\n  };\n\n  return (\n    <ScrollView style={styles.formContainer}>\n      <Text style={styles.header}>Create New Product</Text>\n      <FormInput label=\"Product Title\" value={title} onChangeText={setTitle} placeholder=\"Enter product title\" />\n      <FormInput label=\"Brand\" value={brand} onChangeText={setBrand} placeholder=\"Enter brand name\" />\n      <FormInput label=\"Category\" value={category} onChangeText={setCategory} placeholder=\"Enter category\" />\n      <FormInput\n        label=\"Price\"\n        value={price}\n        onChangeText={setPrice}\n        placeholder=\"Enter price\"\n        keyboardType=\"numeric\"\n      />\n      <FormInput\n        label=\"Quantity\"\n        value={quantity}\n        onChangeText={setQuantity}\n        placeholder=\"Enter quantity\"\n        keyboardType=\"numeric\"\n      />\n      <FormInput label=\"SKU\" value={sku} onChangeText={setSku} placeholder=\"Enter SKU\" />\n      <FormInput\n        label=\"Description/Notes\"\n        value={note}\n        onChangeText={setNote}\n        placeholder=\"Add a description or note (optional)\"\n        multiline\n      />\n\n      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n        <Ionicons name=\"checkmark-done-outline\" size={24} color={COLORS.white} />\n        <Text style={styles.submitButtonText}>Create Product</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nexport default CreateClientProductView;\n\nconst styles = StyleSheet.create({\n  formContainer: {\n    padding: SIZES.medium,\n  },\n  header: {\n    fontSize: SIZES.large,\n    color: COLORS.primary,\n    fontWeight: 'bold',\n    marginBottom: SIZES.large,\n    textAlign: 'center',\n  },\n  input: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.small,\n    borderRadius: SIZES.small,\n    fontFamily: 'regular',\n    marginBottom: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  submitButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: COLORS.primary,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    marginTop: SIZES.large,\n  },\n  submitButtonText: {\n    fontFamily: 'bold',\n    color: COLORS.white,\n    fontSize: SIZES.medium,\n    marginLeft: SIZES.small,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, FlatList, Image, TouchableOpacity, SafeAreaView } from 'react-native';\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\nimport { useClientCollection } from '@/contexts/CollectionContext';\nimport { CollectionModelProps } from '@/models/CollectionModelProps'; // Adjust the import path as necessary\n\nconst CollectionPageVOne: React.FC = () => {\n\n  const { collections } = useClientCollection();\n\n  const renderItem = ({ item }: { item: CollectionModelProps }) => (\n    <View style={styles.card}>\n      <Image source={{ uri: item.image }} style={styles.cardImage} />\n      <View style={styles.cardDetails}>\n        <Text style={styles.cardTitle}>{item.title}</Text>\n        <Text style={styles.cardArtist}>{item.description}</Text>\n        <Text style={styles.cardPrice}>{item.amount} ETH</Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n     \n      <Text style={styles.title}>TOP COLLECTIONS</Text>\n\n      <FlatList\n        data={collections}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n        contentContainerStyle={styles.collectionsList}\n        showsVerticalScrollIndicator={false}\n      />\n    </View>\n  );\n};\n\nexport default CollectionPageVOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0C0D1D',\n    paddingHorizontal: 16,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 24,\n  },\n  collectionsList: {\n    marginTop: 16,\n  },\n  card: {\n    backgroundColor: '#1C1D2F',\n    borderRadius: 8,\n    marginBottom: 16,\n    overflow: 'hidden',\n  },\n  cardImage: {\n    width: '100%',\n    height: 200,\n    resizeMode: 'cover',\n  },\n  cardDetails: {\n    padding: 16,\n  },\n  cardTitle: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  cardArtist: {\n    color: '#8E8E93',\n    marginTop: 4,\n  },\n  cardPrice: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 8,\n  },\n});\n","\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\nimport { router } from 'expo-router';\nimport React, { useState } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, FlatList, Dimensions } from 'react-native';\n\nconst { width, height } = Dimensions.get('window');\n\ninterface ProductProps {\n  id: number;\n  name: string;\n  price: string;\n  image: string;\n}\n\nconst products: ProductProps[] = [\n  { id: 1, name: 'Facet Table Lamp', price: '$284', image: 'https://example.com/lamp.jpg' },\n  { id: 2, name: 'Carlisle Double', price: '$583', image: 'https://example.com/cabinet.jpg' },\n  { id: 3, name: 'Sofia Footstool', price: '$495', image: 'https://example.com/footstool.jpg' },\n  { id: 4, name: 'Theodore', price: '$322', image: 'https://example.com/chair.jpg' },\n  { id: 5, name: 'Lamp 2', price: '$369', image: 'https://example.com/lamp2.jpg' },\n  { id: 6, name: 'Chair 2', price: '$423', image: 'https://example.com/chair2.jpg' },\n];\n\nconst categories = ['All', 'Chair', 'Table', 'Lighting', 'Decor'];\n\nconst CollectionPageVTwo = () => {\n  const [selectedCategory, setSelectedCategory] = useState<string>('All');\n\n  const filteredProducts = selectedCategory === 'All'\n    ? products\n    : products.filter(product => product.name.toLowerCase().includes(selectedCategory.toLowerCase()));\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={categories}\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        keyExtractor={(item) => item}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            style={[\n              styles.categoryButton,\n              item === selectedCategory && styles.selectedCategoryButton\n            ]}\n            onPress={() => setSelectedCategory(item)}\n          >\n            <Text style={[\n              styles.categoryText,\n              item === selectedCategory && styles.selectedCategoryText\n            ]}>\n              {item}\n            </Text>\n          </TouchableOpacity>\n        )}\n        contentContainerStyle={styles.categoryContainer}\n        style={styles.categoryList} // Added style to control height\n      />\n\n      <View style={styles.promoContainer}>\n        <Image\n          source={{ uri: AWS_HOLDER_IMAGE }} // Replace with actual promo image URI\n          style={styles.promoImage}\n        />\n        <View style={styles.promoTextContainer}>\n          <Text style={styles.promoTitle}>Promo for first purchase</Text>\n          <Text style={styles.promoSubtitle}>Special Offers</Text>\n          <Text style={styles.promoDiscount}>40% Off Prices</Text>\n        </View>\n      </View>\n\n      <View style={styles.productListContainer}>\n        <FlatList\n          data={filteredProducts}\n          numColumns={2}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            \n            <View style={styles.productCard}>\n                <TouchableOpacity onPress={() => router.push(`/products/${item.id}` as never)}>\n              {/* <Image source={{ uri: item.image }} style={styles.productImage} /> */}\n              <Image source={{ uri: AWS_HOLDER_IMAGE }} style={styles.productImage} />\n              <Text style={styles.productPrice}>{item.price}</Text>\n              <Text style={styles.productName}>{item.name}</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n          contentContainerStyle={styles.productContainer}\n          ListEmptyComponent={<Text style={styles.emptyMessage}>No products available</Text>}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default CollectionPageVTwo;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n    paddingHorizontal: 10,\n  },\n  categoryList: {\n    maxHeight: 50, // Limit the height of the category list to prevent it from taking too much space\n  },\n  categoryContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  categoryButton: {\n    marginRight: 8,\n    paddingVertical: 5,\n    paddingHorizontal: 12,\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 30, // Adjusted the height to be more compact\n  },\n  selectedCategoryButton: {\n    backgroundColor: '#000000',\n    borderColor: '#000000',\n  },\n  categoryText: {\n    fontSize: 13, // Slightly smaller font for the text\n    fontWeight: 'bold',\n    color: '#000000',\n  },\n  selectedCategoryText: {\n    color: '#FFFFFF',\n  },\n  promoContainer: {\n    marginVertical: 10, // Reduced margin to bring elements closer\n    borderRadius: 10,\n    overflow: 'hidden', // corner radius\n    backgroundColor: '#F5F5F5',\n  },\n  promoImage: {\n    width: '100%',\n    height: 150, // Slightly reduced height for better fit\n    resizeMode: 'cover',\n  },\n  promoTextContainer: {\n    position: 'absolute',\n    top: 15,\n    left: 20,\n  },\n  promoTitle: {\n    fontSize: 20, // Adjusted font size\n    fontWeight: 'bold',\n    color: '#333333',\n  },\n  promoSubtitle: {\n    fontSize: 14, // Adjusted font size\n    color: '#666666',\n    marginTop: 5,\n  },\n  promoDiscount: {\n    fontSize: 16, // Adjusted font size\n    color: '#FF6347',\n    marginTop: 5,\n  },\n  productListContainer: {\n    flex: 1,\n  },\n  productContainer: {\n    paddingBottom: 20,\n  },\n  productCard: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#FFFFFF',\n    padding: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n  },\n  productImage: {\n    width: width / 2 - 40,\n    height: 120,\n    resizeMode: 'cover',\n    borderRadius: 10,\n    marginBottom: 10,\n  },\n  productPrice: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000',\n  },\n  productName: {\n    fontSize: 14,\n    color: '#333333',\n    marginTop: 5,\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    fontSize: 16,\n    color: '#777777',\n    marginTop: 20,\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { AWS_HOLDER_IMAGE } from '@/utils/api';\n// import React, { useState } from 'react';\n// import { View, Text, Image, StyleSheet, TouchableOpacity, FlatList, Dimensions } from 'react-native';\n\n// const { width, height } = Dimensions.get('window');\n\n// interface ProductProps {\n//   id: number;\n//   name: string;\n//   price: string;\n//   image: string;\n// }\n\n// const products: ProductProps[] = [\n//   { id: 1, name: 'Facet Table Lamp', price: '$284', image: 'https://example.com/lamp.jpg' },\n//   { id: 2, name: 'Carlisle Double', price: '$583', image: 'https://example.com/cabinet.jpg' },\n//   { id: 3, name: 'Sofia Footstool', price: '$495', image: 'https://example.com/footstool.jpg' },\n//   { id: 4, name: 'Theodore', price: '$322', image: 'https://example.com/chair.jpg' },\n//   { id: 5, name: 'Lamp 2', price: '$369', image: 'https://example.com/lamp2.jpg' },\n//   { id: 6, name: 'Chair 2', price: '$423', image: 'https://example.com/chair2.jpg' },\n// ];\n\n// const categories = ['All', 'Chair', 'Table', 'Lighting', 'Decor'];\n\n// const CollectionPageVTwo = () => {\n//   const [selectedCategory, setSelectedCategory] = useState<string>('All');\n\n//   const filteredProducts = selectedCategory === 'All'\n//     ? products\n//     : products.filter(product => product.name.toLowerCase().includes(selectedCategory.toLowerCase()));\n\n//   return (\n//     <View style={styles.container}>\n//       <FlatList\n//         data={categories}\n//         horizontal\n//         showsHorizontalScrollIndicator={false}\n//         keyExtractor={(item) => item}\n//         renderItem={({ item }) => (\n//           <TouchableOpacity\n//             style={[\n//               styles.categoryButton,\n//               item === selectedCategory && styles.selectedCategoryButton\n//             ]}\n//             onPress={() => setSelectedCategory(item)}\n//           >\n//             <Text style={[\n//               styles.categoryText,\n//               item === selectedCategory && styles.selectedCategoryText\n//             ]}>\n//               {item}\n//             </Text>\n//           </TouchableOpacity>\n//         )}\n//         contentContainerStyle={styles.categoryContainer}\n//       />\n\n//       <View style={styles.promoContainer}>\n//         <Image\n//           source={{ uri: AWS_HOLDER_IMAGE }} // Replace with actual promo image URI\n//           style={styles.promoImage}\n//         />\n//         <View style={styles.promoTextContainer}>\n//           <Text style={styles.promoTitle}>Promo for first purchase</Text>\n//           <Text style={styles.promoSubtitle}>Special Offers</Text>\n//           <Text style={styles.promoDiscount}>40% Off Prices</Text>\n//         </View>\n//       </View>\n\n//       <View style={styles.productListContainer}>\n//         <FlatList\n//           data={filteredProducts}\n//           numColumns={2}\n//           keyExtractor={(item) => item.id.toString()}\n//           renderItem={({ item }) => (\n//             <View style={styles.productCard}>\n//               <Image source={{ uri: item.image }} style={styles.productImage} />\n//               <Text style={styles.productPrice}>{item.price}</Text>\n//               <Text style={styles.productName}>{item.name}</Text>\n//             </View>\n//           )}\n//           contentContainerStyle={styles.productContainer}\n//           ListEmptyComponent={<Text style={styles.emptyMessage}>No products available</Text>}\n//         />\n//       </View>\n//     </View>\n//   );\n// };\n\n// export default CollectionPageVTwo;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#FFFFFF',\n//     paddingHorizontal: 10,\n//     // paddingTop: 20,\n//   },\n//   categoryContainer: {\n//     paddingVertical: 10,\n//     height: 40\n//     // alignItems: 'center',\n//   },\n//   categoryButton: {\n//     marginRight: 10,\n//     paddingVertical: 8,\n//     paddingHorizontal: 15,\n//     borderWidth: 1,\n//     borderColor: '#000000',\n//     borderRadius: 15,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     height: 35,\n//   },\n//   selectedCategoryButton: {\n//     backgroundColor: '#000000',\n//     borderColor: '#000000',\n//   },\n//   categoryText: {\n//     fontSize: 14,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   selectedCategoryText: {\n//     color: '#FFFFFF',\n//   },\n//   promoContainer: {\n//     marginVertical: 20,\n//     borderRadius: 10,\n//     overflow: 'hidden', // corner radius\n//     backgroundColor: '#F5F5F5',\n//   },\n//   promoImage: {\n//     width: '100%',\n//     height: 160,\n//     resizeMode: 'cover',\n//   },\n//   promoTextContainer: {\n//     position: 'absolute',\n//     top: 15,\n//     left: 20,\n//   },\n//   promoTitle: {\n//     fontSize: 22,\n//     fontWeight: 'bold',\n//     color: '#333333',\n//   },\n//   promoSubtitle: {\n//     fontSize: 16,\n//     color: '#666666',\n//     marginTop: 5,\n//   },\n//   promoDiscount: {\n//     fontSize: 18,\n//     color: '#FF6347',\n//     marginTop: 5,\n//   },\n//   productListContainer: {\n//     flex: 1,\n//   },\n//   productContainer: {\n//     paddingBottom: 20,\n//   },\n//   productCard: {\n//     flex: 1,\n//     margin: 10,\n//     borderRadius: 10,\n//     backgroundColor: '#FFFFFF',\n//     padding: 10,\n//     alignItems: 'center',\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//   },\n//   productImage: {\n//     width: width / 2 - 40,\n//     height: 120,\n//     resizeMode: 'cover',\n//     borderRadius: 10,\n//     marginBottom: 10,\n//   },\n//   productPrice: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   productName: {\n//     fontSize: 14,\n//     color: '#333333',\n//     marginTop: 5,\n//   },\n//   emptyMessage: {\n//     textAlign: 'center',\n//     fontSize: 16,\n//     color: '#777777',\n//     marginTop: 20,\n//   },\n// });\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import { View, Text, Image, StyleSheet, TouchableOpacity, FlatList, Dimensions } from 'react-native';\n\n// const { width } = Dimensions.get('window');\n\n// interface ProductProps {\n//   id: number;\n//   name: string;\n//   price: string;\n//   image: string;\n// }\n\n// const products: ProductProps[] = [\n//   { id: 1, name: 'Facet Table Lamp', price: '$284', image: 'https://example.com/lamp.jpg' },\n//   { id: 2, name: 'Carlisle Double', price: '$583', image: 'https://example.com/cabinet.jpg' },\n//   { id: 3, name: 'Sofia Footstool', price: '$495', image: 'https://example.com/footstool.jpg' },\n//   { id: 4, name: 'Theodore', price: '$322', image: 'https://example.com/chair.jpg' },\n//   { id: 5, name: 'Lamp 2', price: '$369', image: 'https://example.com/lamp2.jpg' },\n//   { id: 6, name: 'Chair 2', price: '$423', image: 'https://example.com/chair2.jpg' },\n// ];\n\n// const categories = ['All', 'Chair', 'Table', 'Lighting', 'Decor'];\n\n// const CollectionPageVTwo = () => {\n//   return (\n//     <View style={styles.container}>\n//       <FlatList\n//         data={categories}\n//         horizontal\n//         showsHorizontalScrollIndicator={false}\n//         keyExtractor={(item) => item}\n//         renderItem={({ item }) => (\n//           <TouchableOpacity style={styles.categoryButton}>\n//             <Text style={styles.categoryText}>{item}</Text>\n//           </TouchableOpacity>\n//         )}\n//         contentContainerStyle={styles.categoryContainer}\n//       />\n\n//       <View style={styles.promoContainer}>\n//         <Image\n//           source={{ uri: 'https://example.com/promo.jpg' }} // Replace with actual promo image URI\n//           style={styles.promoImage}\n//         />\n//         <View style={styles.promoTextContainer}>\n//           <Text style={styles.promoTitle}>Promo for first purchase</Text>\n//           <Text style={styles.promoSubtitle}>Special Offers</Text>\n//           <Text style={styles.promoDiscount}>40% Off Prices</Text>\n//         </View>\n//       </View>\n\n//       <FlatList\n//         data={products}\n//         numColumns={2}\n//         keyExtractor={(item) => item.id.toString()}\n//         renderItem={({ item }) => (\n//           <View style={styles.productCard}>\n//             <Image source={{ uri: item.image }} style={styles.productImage} />\n//             <Text style={styles.productPrice}>{item.price}</Text>\n//             <Text style={styles.productName}>{item.name}</Text>\n//           </View>\n//         )}\n//         contentContainerStyle={styles.productContainer}\n//       />\n//     </View>\n//   );\n// };\n\n// export default CollectionPageVTwo;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#FFFFFF',\n//     paddingHorizontal: 10,\n//   },\n//   categoryContainer: {\n//     paddingVertical: 10,\n//   },\n//   categoryButton: {\n//     marginRight: 15,\n//     paddingVertical: 5,\n//     paddingHorizontal: 10,\n//     borderWidth: 1,\n//     borderColor: '#000000',\n//     borderRadius: 15,\n//   },\n//   categoryText: {\n//     fontSize: 14,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   promoContainer: {\n//     marginTop: 20,\n//     marginBottom: 20,\n//     borderRadius: 10,\n//     overflow: 'hidden',\n//     backgroundColor: '#F5F5F5',\n//   },\n//   promoImage: {\n//     width: '100%',\n//     height: 120,\n//     resizeMode: 'cover',\n//   },\n//   promoTextContainer: {\n//     position: 'absolute',\n//     top: 10,\n//     left: 15,\n//   },\n//   promoTitle: {\n//     fontSize: 20,\n//     fontWeight: 'bold',\n//     color: '#333333',\n//   },\n//   promoSubtitle: {\n//     fontSize: 14,\n//     color: '#666666',\n//     marginTop: 5,\n//   },\n//   promoDiscount: {\n//     fontSize: 16,\n//     color: '#FF6347',\n//     marginTop: 5,\n//   },\n//   productContainer: {\n//     paddingBottom: 20,\n//   },\n//   productCard: {\n//     flex: 1,\n//     margin: 10,\n//     borderRadius: 10,\n//     backgroundColor: '#FFFFFF',\n//     padding: 10,\n//     alignItems: 'center',\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//   },\n//   productImage: {\n//     width: width / 2 - 40,\n//     height: 100,\n//     resizeMode: 'cover',\n//     borderRadius: 10,\n//     marginBottom: 10,\n//   },\n//   productPrice: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   productName: {\n//     fontSize: 14,\n//     color: '#333333',\n//     marginTop: 5,\n//   },\n// });\n","import { Button, Image, StyleSheet, Text, TextInput, View, Alert , Modal} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { router, SplashScreen, Stack, useNavigation, useRouter } from 'expo-router';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { UserProps } from '@/models/UserProps';\nimport { generateUUID } from '@/hooks/generateUUID';\n\nconst LoginComponentOne = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { onLogin, onRegister, onLogout , authState } = useAuth();\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigation = useNavigation();\n  const [openModal , setOpenModal] = useState(false)\n\n\n\n\n  const showAlert = (message: string) => Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        // Wrap navigation.goBack in a try-catch block\n        try {\n        router.replace('/home')\n\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: '',\n      onboardingQ1: '',\n      onboardingQ2: '',\n      onboardingQ3: '',\n      onboardingQ4: '',\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: '',\n      active: false,\n      role: '',\n      birthday: '',\n      todo_completed: false,\n      tableName: '',\n      username: '',\n      phone_number: '',\n      gender: '',\n      profile_image: '',\n      address_city: '',\n      address_state: '',\n      location_history: [],\n      current_notification: '',\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: '',\n      payment_due_day: '',\n      payment_monthly_amount: 0,\n      device_id: '',\n      device_os_version: '',\n      device_model: '',\n      device_ip_address: '',\n      device_battery_level: '',\n      device_battery_statue: '',\n      device_network_connectio_type: '',\n      loyalty_date: '',\n      payment_history_total: 0,\n      subscription_id: '',\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: '',\n      owner_notify_arn: ''\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        // Call the loginAction after successful registration\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    \n    // <Modal visible={openModal} >\n    <View style={styles.container}>\n            <Stack.Screen  options={{ title: 'Login'  }}  />\n\n      {/* <Modal visible={openModal} transparent={true} animationType='fade' > */}\n      <View style={styles.imgContainer}>\n        <Image source={{ uri: 'https://appsformankind-assets.s3.amazonaws.com/Products/Oak_and_Ivy/Furniture_8.jpg' }} style={styles.img} />\n      </View>\n      <View style={styles.form}>\n        <TextInput style={styles.input} placeholder=\"Name\" onChangeText={setName} value={name} />\n        <TextInput style={styles.input} placeholder=\"Email\" onChangeText={setEmail} value={email} />\n        <TextInput style={styles.input} placeholder=\"Password\" secureTextEntry onChangeText={setPassword} value={password} />\n        <Button onPress={loginAction} title=\"Sign in\" />\n        <Button onPress={registerAction} title=\"Create Account\" />\n        <Button onPress={onLogout} title=\"Logout\" />\n        {/* <Text>{authState?.authenticated ? \"TRUE\": \"FALSE\"}</Text> */}\n\n      </View>\n      {/* </Modal> */}\n    </View>\n   \n    \n  );\n};\n\nexport default LoginComponentOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    width: '100%',\n  },\n  imgContainer: {\n    marginLeft: 8,\n    height: 200,\n    width: 200,\n    borderRadius: 6,\n    paddingTop: 30,\n  },\n  img: {\n    height: 200,\n    width: 200,\n    borderRadius: 100,\n  },\n  form: {\n    paddingTop: 50,\n    gap: 10,\n    width: '60%',\n  },\n  input: {\n    height: 44,\n    borderWidth: 1,\n    borderRadius: 4,\n    padding: 10,\n    backgroundColor: \"#fff\",\n  },\n});\n\n\n\n\n\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Dimensions,\n  StyleSheet,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { COLORS } from \"@/utils/theme\";\nimport { getStore } from \"@/api/storeApi\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport { StoreModelProps } from \"@/models/StoreModelProps\";\nimport useFetchObject from \"@/hooks/useFetchObject\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { router } from \"expo-router\";\n\nconst { width } = Dimensions.get(\"window\");\n\n\nconst UserLoginTextFields = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n  const { onLogin, onRegister, onLogout, authState } = useAuth();\n  // const { data: store } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id))\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/home\");\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n    \n  return (\n    <View>\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Enter your email\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setEmail}\n              value={email}\n              style={styles.input}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Enter your password\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setPassword}\n              value={password}\n              style={styles.input}\n              secureTextEntry={!showPassword} // Ensure this is set to false\n            />\n            <Ionicons name=\"eye-outline\" size={20} color={COLORS.darkGray} />\n          </View>\n\n          <TouchableOpacity>\n            <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.loginButton} onPress={loginAction}>\n            <Text style={styles.loginButtonText}>Login</Text>\n          </TouchableOpacity>\n        </View>\n  )\n}\n\nexport default UserLoginTextFields\n\n\nconst styles = StyleSheet.create({\n    container: {\n      paddingHorizontal: 20,\n      paddingTop: 20,\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n    },\n    logo: {\n      width: 80,\n      height: 80,\n      marginTop: 50,\n      borderRadius: 13,\n    },\n    appName: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n      color: COLORS.primary,\n      marginTop: 10,\n    },\n    welcomeText: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n      color: COLORS.darkGray,\n      marginTop: 20,\n    },\n    descriptionText: {\n      fontSize: 14,\n      color: COLORS.darkGray,\n      textAlign: \"center\",\n      marginVertical: 10,\n    },\n    tabContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n    },\n    tab: {\n      flex: 1,\n      paddingBottom: 5,\n      alignItems: \"center\",\n    },\n    activeTab: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.primary,\n    },\n    tabText: {\n      fontSize: 16,\n      color: COLORS.darkGray,\n    },\n    activeTabText: {\n      color: COLORS.primary,\n    },\n    inputContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: COLORS.lightGray,\n      padding: 15,\n      borderRadius: 5,\n      marginVertical: 10,\n      width: width - 40,\n    },\n    input: {\n      flex: 1,\n      marginLeft: 10,\n      color: COLORS.darkGray,\n    },\n    forgotPasswordText: {\n      alignSelf: \"flex-end\",\n      color: COLORS.primary,\n      marginTop: 10,\n      marginBottom: 20,\n    },\n    loginButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n    },\n    signupButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n      marginTop: 20,\n    },\n    loginButtonText: {\n      fontSize: 18,\n      color: COLORS.white,\n      fontWeight: \"bold\",\n    },\n    termsText: {\n      fontSize: 12,\n      color: COLORS.darkGray,\n      textAlign: \"left\",\n      marginLeft: 10,\n      marginRight: 20,\n    },\n    checkboxContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginVertical: 10,\n    },\n    passwordCriteria: {\n      color: COLORS.darkGray,\n      fontSize: 14,\n      marginTop: 5,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n  });\n  \n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { UserProps } from \"@/models/UserProps\";\nimport { generateUUID } from \"@/hooks/generateUUID\";\nimport { router } from \"expo-router\";\nimport { COLORS } from \"@/utils/theme\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport useFetchObject from \"@/hooks/useFetchObject\";\nimport { StoreModelProps } from \"@/models/StoreModelProps\";\nimport { getStore } from \"@/api/storeApi\";\nimport UserLoginTextFields from \"@/components/views/UserLoginTextFields\";\n// import UserRegisterTextFields from \"@/components/views/UserRegisterTextFields\";\n\nconst { width } = Dimensions.get(\"window\");\nconst UserRegisterTextFields = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  \n    const [activeTabIsLogin, setActiveTabIsLogin] = useState(false);\n    // const { data: store } = useFetchObject<StoreModelProps>(() =>\n    //   getStore(CONSTANTS.store_id)\n    // );\n    const { onLogin, onRegister, onLogout, authState } = useAuth();\n\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/(tabs)\");\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: \"\",\n      onboardingQ1: \"\",\n      onboardingQ2: \"\",\n      onboardingQ3: \"\",\n      onboardingQ4: \"\",\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: \"\",\n      active: false,\n      role: \"\",\n      birthday: \"\",\n      todo_completed: false,\n      tableName: \"\",\n      username: \"\",\n      phone_number: \"\",\n      gender: \"\",\n      profile_image: \"\",\n      address_city: \"\",\n      address_state: \"\",\n      location_history: [],\n      current_notification: \"\",\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: \"\",\n      payment_due_day: \"\",\n      payment_monthly_amount: 0,\n      device_id: \"\",\n      device_os_version: \"\",\n      device_model: \"\",\n      device_ip_address: \"\",\n      device_battery_level: \"\",\n      device_battery_statue: \"\",\n      device_network_connectio_type: \"\",\n      loyalty_date: \"\",\n      payment_history_total: 0,\n      subscription_id: \"\",\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: \"\",\n      owner_notify_arn: \"\",\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    <View>\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"person-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Your name\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setName}\n              value={name}\n              style={styles.input}\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Enter your email\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setEmail}\n              value={email}\n              style={styles.input}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Enter your password\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setPassword}\n              value={password}\n              style={styles.input}\n              secureTextEntry={!showPassword}\n            />\n            <TouchableOpacity\n              onPress={() => setShowPassword((prevState) => !prevState)}\n            >\n              <Ionicons\n                name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n                size={20}\n                color={COLORS.darkGray}\n              />\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Confirm your password\"\n              onChangeText={setConfirmedPassword}\n              value={confirmedpassword}\n              style={styles.input}\n              secureTextEntry={!showConfirmPassword} // Ensure this is set to false\n            />\n\n            <TouchableOpacity\n              onPress={() => setShowConfirmPassword((prevState) => !prevState)}\n            >\n              <Ionicons\n                name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n                size={20}\n                color={COLORS.darkGray}\n              />\n            </TouchableOpacity>\n          </View>\n\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            At least 8 characters\n          </Text>\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            At least 1 number\n          </Text>\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            Both upper and lower case letters\n          </Text>\n\n          <TouchableOpacity\n            style={styles.signupButton}\n            onPress={registerAction}\n          >\n            <Text style={styles.loginButtonText}>Sign Up</Text>\n          </TouchableOpacity>\n        </View>\n  )\n}\n\nexport default UserRegisterTextFields\n\n\nconst styles = StyleSheet.create({\n    container: {\n      paddingHorizontal: 20,\n      paddingTop: 20,\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n    },\n    logo: {\n      width: 80,\n      height: 80,\n      marginTop: 50,\n      borderRadius: 13,\n    },\n    appName: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n      color: COLORS.primary,\n      marginTop: 10,\n    },\n    welcomeText: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n      color: COLORS.darkGray,\n      marginTop: 20,\n    },\n    descriptionText: {\n      fontSize: 14,\n      color: COLORS.darkGray,\n      textAlign: \"center\",\n      marginVertical: 10,\n    },\n    tabContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n    },\n    tab: {\n      flex: 1,\n      paddingBottom: 5,\n      alignItems: \"center\",\n    },\n    activeTab: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.primary,\n    },\n    tabText: {\n      fontSize: 16,\n      color: COLORS.darkGray,\n    },\n    activeTabText: {\n      color: COLORS.primary,\n    },\n    inputContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: COLORS.lightGray,\n      padding: 15,\n      borderRadius: 5,\n      marginVertical: 10,\n      width: width - 40,\n    },\n    input: {\n      flex: 1,\n      marginLeft: 10,\n      color: COLORS.darkGray,\n    },\n    forgotPasswordText: {\n      alignSelf: \"flex-end\",\n      color: COLORS.primary,\n      marginTop: 10,\n      marginBottom: 20,\n    },\n    loginButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n    },\n    signupButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n      marginTop: 20,\n    },\n    loginButtonText: {\n      fontSize: 18,\n      color: COLORS.white,\n      fontWeight: \"bold\",\n    },\n    termsText: {\n      fontSize: 12,\n      color: COLORS.darkGray,\n      textAlign: \"left\",\n      marginLeft: 10,\n      marginRight: 20,\n    },\n    checkboxContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginVertical: 10,\n    },\n    passwordCriteria: {\n      color: COLORS.darkGray,\n      fontSize: 14,\n      marginTop: 5,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n  });\n  ","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { UserProps } from \"@/models/UserProps\";\nimport { generateUUID } from \"@/hooks/generateUUID\";\nimport { router } from \"expo-router\";\nimport { COLORS } from \"@/utils/theme\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport useFetchObject from \"@/hooks/useFetchObject\";\nimport { StoreModelProps } from \"@/models/StoreModelProps\";\nimport { getStore } from \"@/api/storeApi\";\nimport UserLoginTextFields from \"@/components/views/UserLoginTextFields\";\nimport UserRegisterTextFields from \"@/components/views/UserRegisterTextFields\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst LoginComponentTwo = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n  const { onLogin, onRegister, onLogout, authState } = useAuth();\n  // const { data: store } = useFetchObject<StoreModelProps>(() =>\n  //   getStore(CONSTANTS.store_id)\n  // );\n\n  const { store } = useClientStore()\n\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/home\");\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: \"\",\n      onboardingQ1: \"\",\n      onboardingQ2: \"\",\n      onboardingQ3: \"\",\n      onboardingQ4: \"\",\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: \"\",\n      active: false,\n      role: \"\",\n      birthday: \"\",\n      todo_completed: false,\n      tableName: \"\",\n      username: \"\",\n      phone_number: \"\",\n      gender: \"\",\n      profile_image: \"\",\n      address_city: \"\",\n      address_state: \"\",\n      location_history: [],\n      current_notification: \"\",\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: \"\",\n      payment_due_day: \"\",\n      payment_monthly_amount: 0,\n      device_id: \"\",\n      device_os_version: \"\",\n      device_model: \"\",\n      device_ip_address: \"\",\n      device_battery_level: \"\",\n      device_battery_statue: \"\",\n      device_network_connectio_type: \"\",\n      loyalty_date: \"\",\n      payment_history_total: 0,\n      subscription_id: \"\",\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: \"\",\n      owner_notify_arn: \"\",\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n        }}\n        style={styles.logo}\n      />\n      <Text style={styles.welcomeText}>\n        Welcome to {store?.store_name ?? \"\"}\n      </Text>\n      <Text style={styles.descriptionText}>\n        Sign up or login below to manage your project, task, and productivity\n      </Text>\n\n      <View style={styles.tabContainer}>\n        <TouchableOpacity\n          style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(true)}\n        >\n          <Text\n            style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n          >\n            Login\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(false)}\n        >\n          <Text\n            style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n          >\n            Sign Up\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {activeTabIsLogin ? (\n       <UserLoginTextFields />\n      ) : (\n        <UserRegisterTextFields /> \n      )}\n    </View>\n  );\n};\n\nexport default LoginComponentTwo;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    backgroundColor: COLORS.white,\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginTop: 50,\n    borderRadius: 13,\n  },\n  appName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: COLORS.primary,\n    marginTop: 10,\n  },\n  welcomeText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: COLORS.darkGray,\n    marginTop: 20,\n  },\n  descriptionText: {\n    fontSize: 14,\n    color: COLORS.darkGray,\n    textAlign: \"center\",\n    marginVertical: 10,\n  },\n  tabContainer: {\n    flexDirection: \"row\",\n    marginVertical: 20,\n  },\n  tab: {\n    flex: 1,\n    paddingBottom: 5,\n    alignItems: \"center\",\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: COLORS.darkGray,\n  },\n  activeTabText: {\n    color: COLORS.primary,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.lightGray,\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 10,\n    width: width - 40,\n  },\n  input: {\n    flex: 1,\n    marginLeft: 10,\n    color: COLORS.darkGray,\n  },\n  forgotPasswordText: {\n    alignSelf: \"flex-end\",\n    color: COLORS.primary,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n  },\n  signupButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: COLORS.white,\n    fontWeight: \"bold\",\n  },\n  termsText: {\n    fontSize: 12,\n    color: COLORS.darkGray,\n    textAlign: \"left\",\n    marginLeft: 10,\n    marginRight: 20,\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 10,\n  },\n  passwordCriteria: {\n    color: COLORS.darkGray,\n    fontSize: 14,\n    marginTop: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import {\n//   View,\n//   Text,\n//   TextInput,\n//   TouchableOpacity,\n//   StyleSheet,\n//   Image,\n//   Dimensions,\n//   Alert,\n// } from \"react-native\";\n// import { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\n// import { useAuth } from \"@/contexts/AuthContext\";\n// import { UserProps } from \"@/models/UserProps\";\n// import { generateUUID } from \"@/hooks/generateUUID\";\n// import { router } from \"expo-router\";\n// import { COLORS } from \"@/utils/theme\";\n// import { CONSTANTS } from \"@/utils/constants\";\n// import useFetchObject from \"@/hooks/useFetchObject\";\n// import { StoreModelProps } from \"@/models/StoreModelProps\";\n// import { getStore } from \"@/api/storeApi\";\n\n// const { width } = Dimensions.get(\"window\");\n\n// const LoginComponentTwo = () => {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n//   const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n//   const { onLogin, onRegister, onLogout, authState } = useAuth();\n//   const { data: store } = useFetchObject<StoreModelProps>(() =>\n//     getStore(CONSTANTS.store_id)\n//   );\n\n//   const showAlert = (message: string) =>\n//     Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n//   const loginAction = async () => {\n//     try {\n//       const result = await onLogin!(email, password);\n//       if (result.error) {\n//         showAlert(result.msg);\n//       } else {\n//         console.log(\"Login successful\");\n//         try {\n//           router.replace(\"/home\");\n//         } catch (navError) {\n//           console.error(\"Navigation error:\", navError);\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Login error:\", error);\n//       showAlert(\"Login failed. Please try again.\");\n//     }\n//   };\n\n//   const registerAction = async () => {\n//     const user: UserProps = {\n//       id: generateUUID(8),\n//       name,\n//       email,\n//       password,\n//       store_ids: [],\n//       store_owner_id: \"\",\n//       onboardingQ1: \"\",\n//       onboardingQ2: \"\",\n//       onboardingQ3: \"\",\n//       onboardingQ4: \"\",\n//       orders: [],\n//       favoriteItems: [],\n//       cart: [],\n//       affiliate_link: \"\",\n//       active: false,\n//       role: \"\",\n//       birthday: \"\",\n//       todo_completed: false,\n//       tableName: \"\",\n//       username: \"\",\n//       phone_number: \"\",\n//       gender: \"\",\n//       profile_image: \"\",\n//       address_city: \"\",\n//       address_state: \"\",\n//       location_history: [],\n//       current_notification: \"\",\n//       notifications: [],\n//       payment_due: 0,\n//       payment_due_date: \"\",\n//       payment_due_day: \"\",\n//       payment_monthly_amount: 0,\n//       device_id: \"\",\n//       device_os_version: \"\",\n//       device_model: \"\",\n//       device_ip_address: \"\",\n//       device_battery_level: \"\",\n//       device_battery_statue: \"\",\n//       device_network_connectio_type: \"\",\n//       loyalty_date: \"\",\n//       payment_history_total: 0,\n//       subscription_id: \"\",\n//       paid_subscriber: false,\n//       newsletter_subscriber: false,\n//       notification_subscriber: false,\n//       left_review: false,\n//       review_stars: [],\n//       reviews: [],\n//       testimonials: [],\n//       notify_arn: \"\",\n//       owner_notify_arn: \"\",\n//     };\n\n//     try {\n//       const result = await onRegister!(user);\n//       if (result.error) {\n//         showAlert(result);\n//         return;\n//       } else {\n//         console.log(\"Registration successful\");\n//         loginAction();\n//       }\n//     } catch (error) {\n//       console.error(\"Registration error:\", error);\n//       showAlert(\"Registration failed. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Image\n//         source={{\n//           uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n//         }}\n//         style={styles.logo}\n//       />\n//       <Text style={styles.welcomeText}>\n//         Welcome to {store?.store_name ?? \"\"}\n//       </Text>\n//       <Text style={styles.descriptionText}>\n//         Sign up or login below to manage your project, task, and productivity\n//       </Text>\n\n//       <View style={styles.tabContainer}>\n//         <TouchableOpacity\n//           style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n//           onPress={() => setActiveTabIsLogin(true)}\n//         >\n//           <Text\n//             style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n//           >\n//             Login\n//           </Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity\n//           style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n//           onPress={() => setActiveTabIsLogin(false)}\n//         >\n//           <Text\n//             style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n//           >\n//             Sign Up\n//           </Text>\n//         </TouchableOpacity>\n//       </View>\n\n//       {activeTabIsLogin ? (\n//         <View>\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Enter your email\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setEmail}\n//               value={email}\n//               style={styles.input}\n//               keyboardType=\"email-address\"\n//               autoCapitalize=\"none\"\n//               autoComplete=\"email\"\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Enter your password\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setPassword}\n//               value={password}\n//               style={styles.input}\n//               secureTextEntry={!showPassword} // Ensure this is set to false\n//             />\n//             <Ionicons name=\"eye-outline\" size={20} color={COLORS.darkGray} />\n//           </View>\n\n//           <TouchableOpacity>\n//             <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n//           </TouchableOpacity>\n\n//           <TouchableOpacity style={styles.loginButton} onPress={loginAction}>\n//             <Text style={styles.loginButtonText}>Login</Text>\n//           </TouchableOpacity>\n//         </View>\n//       ) : (\n//         <View>\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"person-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Your name\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setName}\n//               value={name}\n//               style={styles.input}\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Enter your email\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setEmail}\n//               value={email}\n//               style={styles.input}\n//               keyboardType=\"email-address\"\n//               autoCapitalize=\"none\"\n//               autoComplete=\"email\"\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Enter your password\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setPassword}\n//               value={password}\n//               style={styles.input}\n//               secureTextEntry={!showPassword}\n//             />\n//             <TouchableOpacity\n//               onPress={() => setShowPassword((prevState) => !prevState)}\n//             >\n//               <Ionicons\n//                 name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n//                 size={20}\n//                 color={COLORS.darkGray}\n//               />\n//             </TouchableOpacity>\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Confirm your password\"\n//               onChangeText={setConfirmedPassword}\n//               value={confirmedpassword}\n//               style={styles.input}\n//               secureTextEntry={!showConfirmPassword} // Ensure this is set to false\n//             />\n\n//             <TouchableOpacity\n//               onPress={() => setShowConfirmPassword((prevState) => !prevState)}\n//             >\n//               <Ionicons\n//                 name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n//                 size={20}\n//                 color={COLORS.darkGray}\n//               />\n//             </TouchableOpacity>\n//           </View>\n\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             At least 8 characters\n//           </Text>\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             At least 1 number\n//           </Text>\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             Both upper and lower case letters\n//           </Text>\n\n//           <TouchableOpacity\n//             style={styles.signupButton}\n//             onPress={registerAction}\n//           >\n//             <Text style={styles.loginButtonText}>Sign Up</Text>\n//           </TouchableOpacity>\n//         </View>\n//       )}\n//     </View>\n//   );\n// };\n\n// export default LoginComponentTwo;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     paddingHorizontal: 20,\n//     paddingTop: 20,\n//     backgroundColor: COLORS.white,\n//     alignItems: \"center\",\n//   },\n//   logo: {\n//     width: 80,\n//     height: 80,\n//     marginTop: 50,\n//     borderRadius: 13,\n//   },\n//   appName: {\n//     fontSize: 24,\n//     fontWeight: \"bold\",\n//     color: COLORS.primary,\n//     marginTop: 10,\n//   },\n//   welcomeText: {\n//     fontSize: 20,\n//     fontWeight: \"bold\",\n//     color: COLORS.darkGray,\n//     marginTop: 20,\n//   },\n//   descriptionText: {\n//     fontSize: 14,\n//     color: COLORS.darkGray,\n//     textAlign: \"center\",\n//     marginVertical: 10,\n//   },\n//   tabContainer: {\n//     flexDirection: \"row\",\n//     marginVertical: 20,\n//   },\n//   tab: {\n//     flex: 1,\n//     paddingBottom: 5,\n//     alignItems: \"center\",\n//   },\n//   activeTab: {\n//     borderBottomWidth: 2,\n//     borderBottomColor: COLORS.primary,\n//   },\n//   tabText: {\n//     fontSize: 16,\n//     color: COLORS.darkGray,\n//   },\n//   activeTabText: {\n//     color: COLORS.primary,\n//   },\n//   inputContainer: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     backgroundColor: COLORS.lightGray,\n//     padding: 15,\n//     borderRadius: 5,\n//     marginVertical: 10,\n//     width: width - 40,\n//   },\n//   input: {\n//     flex: 1,\n//     marginLeft: 10,\n//     color: COLORS.darkGray,\n//   },\n//   forgotPasswordText: {\n//     alignSelf: \"flex-end\",\n//     color: COLORS.primary,\n//     marginTop: 10,\n//     marginBottom: 20,\n//   },\n//   loginButton: {\n//     backgroundColor: COLORS.primary,\n//     padding: 15,\n//     borderRadius: 5,\n//     width: width - 40,\n//     alignItems: \"center\",\n//   },\n//   signupButton: {\n//     backgroundColor: COLORS.primary,\n//     padding: 15,\n//     borderRadius: 5,\n//     width: width - 40,\n//     alignItems: \"center\",\n//     marginTop: 20,\n//   },\n//   loginButtonText: {\n//     fontSize: 18,\n//     color: COLORS.white,\n//     fontWeight: \"bold\",\n//   },\n//   termsText: {\n//     fontSize: 12,\n//     color: COLORS.darkGray,\n//     textAlign: \"left\",\n//     marginLeft: 10,\n//     marginRight: 20,\n//   },\n//   checkboxContainer: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     marginVertical: 10,\n//   },\n//   passwordCriteria: {\n//     color: COLORS.darkGray,\n//     fontSize: 14,\n//     marginTop: 5,\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//   },\n// });\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst OnboardingPageThree = () => {\n  return (\n    <View>\n      <Text>OnboardingPageThree</Text>\n    </View>\n  )\n}\n\nexport default OnboardingPageThree\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst OnboardingPageTwo = () => {\n  return (\n    <View>\n      <Text>OnboardingPageTwo</Text>\n    </View>\n  )\n}\n\nexport default OnboardingPageTwo\n\nconst styles = StyleSheet.create({})","import React, { useRef, useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { View as MotiView } from 'moti';\nimport {\n  SafeAreaView,\n  Image,\n  StyleSheet,\n  FlatList,\n  View,\n  Text,\n  Dimensions,\n  NativeSyntheticEvent,\n  NativeScrollEvent,\n  ListRenderItemInfo,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport { useRouter } from 'expo-router'; \nimport { useAuth } from '@/contexts/AuthContext';\n\nconst { width, height } = Dimensions.get('window');\n\nconst COLORS = { primary: '#282534', white: '#fff' };\n\ninterface SlideData {\n  id: number;\n  image: string;\n  title: string;\n  subtitle: string;\n  imageFrom: any;\n  imageTo: any;  \n  imageTransition: any;\n  textFrom: any;\n  textTo: any;\n  textTransition: any;\n}\n\nconst initialSlides: SlideData[] = [\n  {\n    id: 1,\n    image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/pitch-meeting-2.png\",\n    title: 'Best Digital Solution',\n    subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    imageFrom: { opacity: 0, translateY: 50, scale: 0.85 },\n    imageTo: { opacity: 1, translateY: 0, scale: 1 },\n    imageTransition: {\n      type: 'timing',\n      duration: 600,\n      delay: 300,\n    },\n    textFrom: { opacity: 0, translateX: width }, // Start off-screen to the right\n    textTo: { opacity: 1, translateX: 0 },\n    textTransition: { type: 'timing', duration: 600, delay: 500 },\n  },\n  {\n    id: 2,\n    image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/online-shopping-2.png\",\n    title: 'Achieve Your Goals',\n    subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    imageFrom: { opacity: 0, translateY: 50, scale: 0.85 },\n    imageTo: { opacity: 1, translateY: 0, scale: 1 },\n    imageTransition: {\n      type: 'timing',\n      duration: 600,\n      delay: 300,\n    },\n    textFrom: { opacity: 0, translateX: width }, // Start off-screen to the right\n    textTo: { opacity: 1, translateX: 0 },\n    textTransition: { type: 'timing', duration: 600, delay: 500 },\n  },\n  {\n    id: 3,\n    image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/signin.png\",\n    title: 'Increase Your Value',\n    subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    imageFrom: { opacity: 0, translateY: 50, scale: 0.85 },\n    imageTo: { opacity: 1, translateY: 0, scale: 1 },\n    imageTransition: {\n      type: 'timing',\n      duration: 600,\n      delay: 300,\n    },\n    textFrom: { opacity: 0, translateX: width }, // Start off-screen to the right\n    textTo: { opacity: 1, translateX: 0 },\n    textTransition: { type: 'timing', duration: 600, delay: 500 },\n  },\n];\n\nconst Slide: React.FC<{ item: SlideData; resetKey: number }> = ({ item, resetKey }) => {\n  return (\n\n    \n    <View style={{ alignItems: 'center', width }}>\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n      \n      <MotiView\n        key={`${resetKey}-image`} // Force re-render to reset animation\n        from={item.imageFrom}\n        animate={item.imageTo}\n        transition={item.imageTransition}\n      >\n        <Image source={{ uri: item.image }} style={styles.image} />\n      </MotiView>\n\n      <MotiView\n        key={`${resetKey}-text`} // Force re-render to reset animation\n        from={item.textFrom}\n        animate={item.textTo}\n        transition={item.textTransition}\n      >\n        <View style={styles.textContainer}>\n          <Text style={styles.title}>{item.title}</Text>\n          <Text style={styles.subtitle}>{item.subtitle}</Text>\n        </View>\n      </MotiView>\n    </View>\n  );\n};\n\nconst OnboardingScreen: React.FC = () => {\n  const router = useRouter();\n  const [currentSlideIndex, setCurrentSlideIndex] = useState<number>(0);\n  const [resetKey, setResetKey] = useState<number>(0);\n  const ref = useRef<FlatList<SlideData>>(null);\n  const { authState } = useAuth();\n  const [slides, setSlides] = useState<SlideData[]>(initialSlides);\n\n  const updateCurrentSlideIndex = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n    const contentOffsetX = e.nativeEvent.contentOffset.x;\n    const currentIndex = Math.round(contentOffsetX / width);\n    setCurrentSlideIndex(currentIndex);\n    setResetKey(prevKey => prevKey + 1); // Force reset on slide change\n  };\n\n  const goToNextSlide = () => {\n    const nextSlideIndex = currentSlideIndex + 1;\n    if (nextSlideIndex < slides.length) {\n      const offset = nextSlideIndex * width;\n      ref.current?.scrollToOffset({ offset });\n      setCurrentSlideIndex(nextSlideIndex);\n      setResetKey(prevKey => prevKey + 1); // Force reset on slide change\n    }\n  };\n\n  const skip = () => {\n    const lastSlideIndex = slides.length - 1;\n    const offset = lastSlideIndex * width;\n    ref.current?.scrollToOffset({ offset });\n    setCurrentSlideIndex(lastSlideIndex);\n    setResetKey(prevKey => prevKey + 1); // Force reset on skip\n  };\n\n  const Footer: React.FC = () => {\n    return (\n      <View style={styles.footer}>\n        <View style={styles.indicatorContainer}>\n          {slides.map((_, index) => (\n            <View\n              key={index}\n              style={[\n                styles.indicator,\n                currentSlideIndex === index && {\n                  backgroundColor: COLORS.white,\n                  width: 25,\n                },\n              ]}\n            />\n          ))}\n        </View>\n\n        <View style={styles.buttonContainer}>\n          {currentSlideIndex === 2 ? (\n            <TouchableOpacity\n              style={styles.btn}\n              onPress={() => router.replace('/login')}\n            >\n              <Text style={styles.btnText}>GET STARTED</Text>\n            </TouchableOpacity>\n          ) : (\n            <View style={styles.navigationButtons}>\n              <TouchableOpacity\n                activeOpacity={0.8}\n                style={[styles.btnSkipAndNext, styles.skipButton]}\n                onPress={skip}\n              >\n                <Text style={styles.skipText}>SKIP</Text>\n              </TouchableOpacity>\n              <View style={styles.buttonSpacing} />\n              <TouchableOpacity\n                activeOpacity={0.8}\n                onPress={goToNextSlide}\n                style={styles.btnSkipAndNext}\n              >\n                <Text style={styles.btnText}>NEXT</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar backgroundColor={COLORS.primary} />\n      <FlatList\n        ref={ref}\n        data={slides}\n        horizontal\n        pagingEnabled\n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={styles.flatListContent}\n        renderItem={({ item }: ListRenderItemInfo<SlideData>) => \n          item.id === currentSlideIndex + 1 ? (\n            <Slide item={item} resetKey={resetKey} />\n          ) : (\n            <View/>\n          )\n        }\n        keyExtractor={(item) => item.id.toString()}\n        onMomentumScrollEnd={updateCurrentSlideIndex}\n      />\n      <Footer />\n    </SafeAreaView>\n  );\n}  \n\nexport default OnboardingScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.primary,\n  },\n  flatListContent: {\n    // height: height * 0.75,\n  },\n  image: {\n    marginTop: 100,\n    height: 300,\n    width: width * 0.9,\n    resizeMode: 'contain',\n  },\n  textContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  title: {\n    color: COLORS.white,\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginTop: 10,\n    textAlign: 'center',\n  },\n  subtitle: {\n    color: COLORS.white,\n    fontSize: 14,\n    marginTop: 5,\n    maxWidth: '80%',\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  footer: {\n    height: height * 0.25,\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n  },\n  indicatorContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  indicator: {\n    height: 2.5,\n    width: 10,\n    backgroundColor: 'grey',\n    marginHorizontal: 3,\n    borderRadius: 2,\n  },\n  buttonContainer: {\n    marginBottom: 20,\n  },\n  navigationButtons: {\n    flexDirection: 'row',\n  },\n  skipButton: {\n    borderColor: COLORS.white,\n    borderWidth: 1,\n    backgroundColor: 'transparent',\n  },\n  buttonSpacing: {\n    width: 15,\n  },\n  btnSkipAndNext: {\n    flex: 1,\n    height: 50,\n    borderRadius: 5,\n    backgroundColor: COLORS.white,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  btn: {\n    height: 50,\n    borderRadius: 5,\n    backgroundColor: COLORS.white,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  btnText: {\n    fontWeight: 'bold',\n    fontSize: 15,\n  },\n  skipText: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    color: COLORS.white,\n  },\n});\n\n\n\n\n//// works\n// import React, { useRef, useState, useEffect } from 'react';\n// import { StatusBar } from 'expo-status-bar';\n// import { View as MotiView } from 'moti';\n// import {\n//   SafeAreaView,\n//   Image,\n//   StyleSheet,\n//   FlatList,\n//   View,\n//   Text,\n//   Platform,\n//   TouchableOpacity,\n//   Dimensions,\n//   NativeSyntheticEvent,\n//   NativeScrollEvent,\n//   ListRenderItemInfo,\n// } from 'react-native';\n// import { useRouter } from 'expo-router'; \n// import { useAuth } from '@/contexts/AuthContext';\n\n// const { width, height } = Dimensions.get('window');\n\n// const COLORS = { primary: '#282534', white: '#fff' };\n\n// interface SlideData {\n//   id: string;\n//   image: string;\n//   title: string;\n//   subtitle: string;\n//   imageFrom: any,\n//   imageTo: any,  \n//   imageTransition: any,\n\n//   textFrom: any,\n//   textTo: any,\n//   textTransition: any,\n\n\n//   titleFrom: any,\n//   titleTo: any,\n//   titleTransition: any,\n//   subtitleFrom: any,\n//   subtitleTo: any,\n//   subtitleTransition: any,\n\n\n \n// }\n\n// const initialSlides: SlideData[] = [\n//   {\n//     id: '1',\n//     image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/pitch-meeting-2.png\",\n//     title: 'Best Digital Solution',\n//     subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n//     imageFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     imageTo: { opacity: 1, translateY: 0, scale: 1 },\n//     imageTransition: {\n//       type: 'timing',\n//       duration: 600,\n//       delay: 300,\n//     },\n     \n//     textFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     textTo: { opacity: 1, translateY: 0 },\n//     textTransition: { type: 'timing', duration: 500, delay: 600 },\n\n//     titleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     titleTo: undefined,\n//     titleTransition: undefined,\n//     subtitleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     subtitleTo: undefined,\n//     subtitleTransition: undefined,\n//   },\n//   {\n//     id: '2',\n//     image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/online-shopping-2.png\",\n//     title: 'Achieve Your Goals',\n//     subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n//     imageFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     imageTo: { opacity: 1, translateY: 0, scale: 1 },\n//     imageTransition: {\n//       type: 'timing',\n//       duration: 600,\n//       delay: 300,\n//     },\n      \n//     textFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     textTo: { opacity: 1, translateY: 0 },\n//     textTransition: { type: 'timing', duration: 500, delay: 600 },\n\n\n//     titleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     titleTo: undefined,\n//     titleTransition: undefined,\n//     subtitleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     subtitleTo: undefined,\n//     subtitleTransition: undefined,\n//   },\n//   {\n//     id: '3',\n//     image: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/signin.png\",\n//     title: 'Increase Your Value',\n//     subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n//     imageFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     imageTo: { opacity: 9, translateY: 0, scale: 1 },\n//     imageTransition: {\n//       type: 'timing',\n//       duration: 600,\n//       delay: 300,\n//     },\n     \n//     textFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     textTo: { opacity: 1, translateY: 0 },\n//     textTransition: { type: 'timing', duration: 500, delay: 600 },\n\n   \n//     titleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     titleTo: undefined,\n//     titleTransition: undefined,\n//     subtitleFrom: { opacity: 0, translateY: -50, scale: 0.9 },\n//     subtitleTo: undefined,\n//     subtitleTransition: undefined,\n//   },\n// ];\n\n// const Slide: React.FC<{ item: SlideData; resetKey: number }> = ({ item, resetKey }) => {\n//   return (\n//     <View style={{ alignItems: 'center', width }}>\n//       <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n      \n//       <MotiView\n//         key={resetKey} // Force re-render to reset animation\n//         from={item.imageFrom}\n//         animate={item.imageTo}\n//         transition={item.imageTransition}\n//       >\n//         <Image source={{ uri: item.image }} style={styles.image} />\n//       </MotiView>\n\n//       <MotiView\n//         key={resetKey + 1} // Force re-render to reset animation\n//         from={{ opacity: 0, translateY: 20 }}\n//         animate={{ opacity: 1, translateY: 0 }}\n//         transition={{ type: 'timing', duration: 500, delay: 600 }}\n//       >\n//         <View style={styles.textContainer}>\n//           <Text style={styles.title}>{item.title}</Text>\n//           <Text style={styles.subtitle}>{item.subtitle}</Text>\n//         </View>\n//       </MotiView>\n//     </View>\n//   );\n// };\n\n// const OnboardingScreen: React.FC = () => {\n//   const router = useRouter();\n//   const [currentSlideIndex, setCurrentSlideIndex] = useState<number>(0);\n//   const [resetKey, setResetKey] = useState<number>(0);\n//   const ref = useRef<FlatList<SlideData>>(null);\n//   const { authState } = useAuth();\n//   const [slides, setSlides] = useState<SlideData[]>(initialSlides);\n\n//   const updateCurrentSlideIndex = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n//     const contentOffsetX = e.nativeEvent.contentOffset.x;\n//     const currentIndex = Math.round(contentOffsetX / width);\n//     setCurrentSlideIndex(currentIndex);\n//     setResetKey(prevKey => prevKey + 1); // Force reset on slide change\n//   };\n\n//   const goToNextSlide = () => {\n//     const nextSlideIndex = currentSlideIndex + 1;\n//     if (nextSlideIndex < slides.length) {\n//       const offset = nextSlideIndex * width;\n//       ref.current?.scrollToOffset({ offset });\n//       setCurrentSlideIndex(nextSlideIndex);\n//       setResetKey(prevKey => prevKey + 1); // Force reset on slide change\n//     }\n//   };\n\n//   const skip = () => {\n//     const lastSlideIndex = slides.length - 1;\n//     const offset = lastSlideIndex * width;\n//     ref.current?.scrollToOffset({ offset });\n//     setCurrentSlideIndex(lastSlideIndex);\n//     setResetKey(prevKey => prevKey + 1); // Force reset on skip\n//   };\n\n//   const Footer: React.FC = () => {\n//     return (\n//       <View style={styles.footer}>\n//         <View style={styles.indicatorContainer}>\n//           {slides.map((_, index) => (\n//             <View\n//               key={index}\n//               style={[\n//                 styles.indicator,\n//                 currentSlideIndex === index && {\n//                   backgroundColor: COLORS.white,\n//                   width: 25,\n//                 },\n//               ]}\n//             />\n//           ))}\n//         </View>\n\n//         <View style={styles.buttonContainer}>\n//           {currentSlideIndex === 2 ? (\n//             <TouchableOpacity\n//               style={styles.btn}\n//               onPress={() => router.replace('/login')}\n//             >\n//               <Text style={styles.btnText}>GET STARTED</Text>\n//             </TouchableOpacity>\n//           ) : (\n//             <View style={styles.navigationButtons}>\n//               <TouchableOpacity\n//                 activeOpacity={0.8}\n//                 style={[styles.btnSkipAndNext, styles.skipButton]}\n//                 onPress={skip}\n//               >\n//                 <Text style={styles.skipText}>SKIP</Text>\n//               </TouchableOpacity>\n//               <View style={styles.buttonSpacing} />\n//               <TouchableOpacity\n//                 activeOpacity={0.8}\n//                 onPress={goToNextSlide}\n//                 style={styles.btnSkipAndNext}\n//               >\n//                 <Text style={styles.btnText}>NEXT</Text>\n//               </TouchableOpacity>\n//             </View>\n//           )}\n//         </View>\n//       </View>\n//     );\n//   };\n\n//   return (\n//     <SafeAreaView style={styles.container}>\n//       <StatusBar backgroundColor={COLORS.primary} />\n//       <FlatList\n//         ref={ref}\n//         data={slides}\n//         horizontal\n//         pagingEnabled\n//         showsHorizontalScrollIndicator={false}\n//         contentContainerStyle={styles.flatListContent}\n//         renderItem={({ item }: ListRenderItemInfo<SlideData>) => <Slide item={item} resetKey={resetKey} />}\n//         keyExtractor={(item) => item.id}\n//         onMomentumScrollEnd={updateCurrentSlideIndex}\n//       />\n//       <Footer />\n//     </SafeAreaView>\n//   );\n// };\n\n// export default OnboardingScreen;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: COLORS.primary,\n//   },\n//   flatListContent: {\n//     // height: height * 0.75,\n//   },\n//   image: {\n//     marginTop: 100,\n//     height: 300,\n//     width: width * 0.9,\n//     resizeMode: 'contain',\n//   },\n//   textContainer: {\n//     alignItems: 'center',\n//     marginTop: 10,\n//   },\n//   title: {\n//     color: COLORS.white,\n//     fontSize: 22,\n//     fontWeight: 'bold',\n//     marginTop: 10,\n//     textAlign: 'center',\n//   },\n//   subtitle: {\n//     color: COLORS.white,\n//     fontSize: 14,\n//     marginTop: 5,\n//     maxWidth: '80%',\n//     textAlign: 'center',\n//     lineHeight: 20,\n//   },\n//   footer: {\n//     height: height * 0.25,\n//     justifyContent: 'space-between',\n//     paddingHorizontal: 20,\n//   },\n//   indicatorContainer: {\n//     flexDirection: 'row',\n//     justifyContent: 'center',\n//     marginTop: 20,\n//   },\n//   indicator: {\n//     height: 2.5,\n//     width: 10,\n//     backgroundColor: 'grey',\n//     marginHorizontal: 3,\n//     borderRadius: 2,\n//   },\n//   buttonContainer: {\n//     marginBottom: 20,\n//   },\n//   navigationButtons: {\n//     flexDirection: 'row',\n//   },\n//   skipButton: {\n//     borderColor: COLORS.white,\n//     borderWidth: 1,\n//     backgroundColor: 'transparent',\n//   },\n//   buttonSpacing: {\n//     width: 15,\n//   },\n//   btnSkipAndNext: {\n//     flex: 1,\n//     height: 50,\n//     borderRadius: 5,\n//     backgroundColor: COLORS.white,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   btn: {\n//     height: 50,\n//     borderRadius: 5,\n//     backgroundColor: COLORS.white,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   btnText: {\n//     fontWeight: 'bold',\n//     fontSize: 15,\n//   },\n//   skipText: {\n//     fontWeight: 'bold',\n//     fontSize: 15,\n//     color: COLORS.white,\n//   },\n// });\n\n\n\n\n","import React from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity, ScrollView } from 'react-native';\nimport { Stack, useLocalSearchParams } from 'expo-router';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { Ionicons } from '@expo/vector-icons';\nimport { MotiView } from 'moti';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n\nconst ProductDetailsPageVOne = () => {\n  const { id } = useLocalSearchParams<{ id: string }>();\n  const { selectedProduct: product } = useClientProduct();\n\n  // if (!selectedProduct) {\n  //   return (\n  //     <View style={styles.container}>\n  //       <Text>Product not found</Text>\n  //     </View>\n  //   );\n  // }\n\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={{ paddingBottom: SIZES.xLarge }}>\n      <Stack.Screen\n        options={{\n          headerTitle: `${product?.name}`,\n        }}\n      />\n\n      <Image\n        source={{ uri: product?.image || 'https://via.placeholder.com/300' }}\n        style={styles.productImage}\n      />\n\n      <MotiView\n        from={{ opacity: 0, translateY: -10 }}\n        animate={{ opacity: 1, translateY: 0 }}\n        transition={{ type: 'timing', duration: 500 }}\n        style={[styles.detailsContainer, styles.sectionSpacing]}\n      >\n        <Text style={styles.productTitle}>{product?.name}</Text>\n        <Text style={styles.productDescription}>{product?.description}</Text>\n\n        <Text style={styles.productPrice}>{convertToCurrency(product?.price ?? 0)}</Text>\n        {product?.item_type === 'subscription' && (\n          <Text style={styles.subscriptionText}>/ per month</Text>\n        )}\n\n        <TouchableOpacity style={styles.previewButton}>\n          <Ionicons name=\"eye-outline\" size={24} color={COLORS.white} />\n          <Text style={styles.previewButtonText}>Preview</Text>\n        </TouchableOpacity>\n      </MotiView>\n\n      {/* Variant Information Section */}\n      {product?.variants && product?.variants.length > 0 && (\n        <MotiView\n          from={{ opacity: 0, translateY: -10 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{ type: 'timing', duration: 500, delay: 200 }}\n          style={[styles.variantContainer, styles.sectionSpacing]}\n        >\n          <Text style={styles.sectionTitle}>Variants</Text>\n          {product?.variants.map((variant) => (\n            <View key={variant.id} style={styles.variantItem}>\n              <Image\n                source={{ uri: variant.image || 'https://via.placeholder.com/60' }}\n                style={styles.variantImage}\n              />\n              <View style={styles.variantDetails}>\n                <Text style={styles.variantTitle}>{variant.title}</Text>\n                <Text style={styles.variantColor}>Color: {variant.color_code}</Text>\n                <Text style={styles.variantPrice}>{convertToCurrency(variant.price)}</Text>\n                <Text style={styles.variantDescription}>{variant.description}</Text>\n              </View>\n            </View>\n          ))}\n        </MotiView>\n      )}\n\n      {/* Sizing and Inventory Section\n      {product?.sizes && product?.sizes.length > 0 && (\n        <MotiView\n          from={{ opacity: 0, translateY: -10 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{ type: 'timing', duration: 500, delay: 300 }}\n          style={[styles.sizingContainer, styles.sectionSpacing]}\n        >\n          <Text style={styles.sectionTitle}>Sizing & Inventory</Text>\n          {product?.sizes.map((size) => {\n            const variant = product?.variants.find(v => v.title === size);\n            return (\n              <View key={size} style={styles.sizingItem}>\n                <Text style={styles.sizingText}>Size: {size}</Text>\n                <Text style={styles.inventoryText}>Inventory: {variant?.inventory || 'N/A'}</Text>\n                <Text style={styles.sizingPrice}>\n                  {convertToCurrency(variant?.price || product?.price)}\n                </Text>\n              </View>\n            );\n          })}\n        </MotiView>\n      )} */}\n\n      {/* Reviews Section */}\n      {product?.reviews && product?.reviews.length > 0 && (\n        <MotiView\n          from={{ opacity: 0, translateY: -10 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{ type: 'timing', duration: 500, delay: 400 }}\n          style={[styles.reviewsContainer, styles.sectionSpacing]}\n        >\n          <Text style={styles.sectionTitle}>Customer Reviews</Text>\n          {product?.reviews.map((review, index) => (\n            <View key={`review-${index}`} style={styles.reviewItem}>\n              <Text style={styles.reviewUserName}>{review.userName}</Text>\n              <Text style={styles.reviewTitle}>{review.title}</Text>\n              <Text style={styles.reviewComment}>{review.comment}</Text>\n            </View>\n          ))}\n        </MotiView>\n      )}\n\n      {/* Checkout Section */}\n      <MotiView\n        from={{ opacity: 0, translateY: 10 }}\n        animate={{ opacity: 1, translateY: 0 }}\n        transition={{ type: 'timing', duration: 500, delay: 500 }}\n        style={styles.checkoutContainer}\n      >\n        <TouchableOpacity style={styles.checkoutButton} onPress={() => {}}>\n          <Text style={styles.checkoutButtonText}>Go to Checkout</Text>\n          <Ionicons name=\"arrow-forward-outline\" size={24} color={COLORS.white} />\n        </TouchableOpacity>\n      </MotiView>\n    </ScrollView>\n  );\n};\n\nexport default ProductDetailsPageVOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.gray2,\n    padding: SIZES.medium,\n  },\n  productImage: {\n    width: '100%',\n    height: 300,\n    borderRadius: SIZES.small,\n    marginBottom: SIZES.medium,\n    resizeMode: 'cover',\n  },\n  detailsContainer: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  sectionSpacing: {\n    marginBottom: SIZES.xLarge,\n  },\n  productTitle: {\n    fontFamily: 'bold',\n    fontSize: SIZES.large,\n    marginBottom: SIZES.small,\n  },\n  productDescription: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: SIZES.medium,\n  },\n  productPrice: {\n    fontWeight: 'bold',\n    fontSize: SIZES.xLarge,\n    color: COLORS.primary,\n    marginBottom: SIZES.small,\n  },\n  subscriptionText: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n    marginBottom: SIZES.medium,\n  },\n  previewButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: COLORS.primary,\n    padding: SIZES.small,\n    borderRadius: SIZES.small,\n    justifyContent: 'center',\n  },\n  previewButtonText: {\n    color: COLORS.white,\n    fontSize: SIZES.medium,\n    marginLeft: SIZES.small,\n  },\n  sectionTitle: {\n    fontFamily: 'bold',\n    fontSize: SIZES.large,\n    marginBottom: SIZES.medium,\n  },\n  variantContainer: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  variantItem: {\n    flexDirection: 'row',\n    marginBottom: SIZES.medium,\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.gray2,\n    paddingBottom: SIZES.medium,\n  },\n  variantImage: {\n    width: 60,\n    height: 60,\n    borderRadius: SIZES.small,\n    marginRight: SIZES.medium,\n  },\n  variantDetails: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  variantTitle: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  variantColor: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  variantPrice: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: SIZES.small,\n  },\n  variantDescription: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  sizingContainer: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  sizingItem: {\n    marginBottom: SIZES.medium,\n  },\n  sizingText: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  inventoryText: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  sizingPrice: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginTop: SIZES.small,\n  },\n  reviewsContainer: {\n    backgroundColor: COLORS.white,\n    padding: SIZES.medium,\n    borderRadius: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  reviewItem: {\n    marginBottom: SIZES.medium,\n  },\n  reviewUserName: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  reviewTitle: {\n    fontFamily: 'bold',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  reviewComment: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  checkoutContainer: {\n    alignItems: 'center',\n    marginBottom: SIZES.xLarge,\n  },\n  checkoutButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: COLORS.primary,\n    paddingVertical: SIZES.medium,\n    paddingHorizontal: 100,\n    borderRadius: SIZES.medium,\n    justifyContent: 'center',\n  },\n  checkoutButtonText: {\n    color: COLORS.white,\n    fontSize: SIZES.medium,\n    marginRight: SIZES.small,\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MotiView } from 'moti';\n\ninterface GlowButtonProps {\n  onPress: () => void;\n  buttonText: string;\n}\n\nconst GlowButton: React.FC<GlowButtonProps> = ({ onPress, buttonText }) => {\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    setIsPressed(true);\n    onPress();\n\n    // Reset animation state after some time\n    setTimeout(() => setIsPressed(false), 500);\n  };\n\n  return (\n    <MotiView\n      from={{\n        shadowOpacity: 0,\n      }}\n      animate={{\n        shadowOpacity: isPressed ? 0.8 : 0,\n      }}\n      transition={{\n        type: 'timing',\n        duration: 300,\n      }}\n      style={styles.glow}\n    >\n      <TouchableOpacity\n        style={styles.buyButton}\n        onPress={handlePress}\n      >\n        <Text style={styles.buyButtonText}>{buttonText}</Text>\n      </TouchableOpacity>\n    </MotiView>\n  );\n};\n\nexport default GlowButton;\n\nconst styles = StyleSheet.create({\n  glow: {\n    shadowColor: 'black', // Gold-like color for the glow\n    shadowOffset: { width: 0, height: 0 },\n    shadowRadius: 10,\n  },\n  buyButton: {\n    backgroundColor: '#FFFFFF',\n    borderWidth: 2,\n    borderColor: '#000000',\n    borderRadius: 25,\n    paddingVertical: 15,\n    alignItems: 'center',\n    marginTop: 20,\n    // width: 200, // Adjust the width as needed\n\n   \n  },\n  buyButtonText: {\n    color: '#000000',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n","import React, { FC, useContext, useState } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { CartContext } from '@/contexts/CartContext';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { MotiView } from 'moti';\nimport GlitterButton from '@/components/buttons/GlitterButtom';\n\nconst ProductDetailsPageVThree: FC<ProductModelProps> = (props) => {\n  const [selectedColor, setSelectedColor] = useState<string | null>(null);\n  const [selectedSize, setSelectedSize] = useState<string | null>(null);\n  const { addToCart } = useContext(CartContext);\n  const { selectedProduct } = useClientProduct();\n\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    if (selectedProduct) {\n      addToCart(selectedProduct);\n      setIsPressed(true);\n\n      // Reset animation state after some time\n      setTimeout(() => setIsPressed(false), 500);\n    }\n  };\n\n  const description = selectedProduct?.description ?? \"\";\n\n  return (\n    <View style={{ backgroundColor: 'white' }}>\n      <ScrollView contentContainerStyle={styles.container}>\n        <View style={styles.imageContainer}>\n          <Image \n            source={{ uri: selectedProduct?.images[0] }} // Replace with actual image URI\n            style={styles.productImage}\n          />\n          <View style={styles.textOverlay}>\n            <Text style={styles.overlayTitle}>{selectedProduct?.name}</Text>\n            <Text style={styles.overlaySubtitle}>{description}</Text>\n          </View>\n        </View>\n        \n        <View style={styles.section}>\n         <View style={styles.productInfo}>\n           <Text style={styles.productTitle}>{selectedProduct?.name}</Text>\n           <Text style={styles.productSubtitle}>{description.length > 11 ? description.slice(0, 11) + '...' : description}\n           </Text>\n         </View>\n       </View>\n\n        <View style={styles.section}>\n          <View style={styles.priceSection}>\n            <Text style={styles.priceLabel}>Price</Text>\n            <Text style={styles.divider}>|</Text>\n            <View style={styles.priceInfo}>\n              <Text style={styles.price}>{convertToCurrency(selectedProduct?.price ?? 10000)}</Text>\n              <Text style={styles.description}>\n                {description}\n              </Text>\n            </View>\n          </View>\n        </View>\n\n\n        <GlitterButton onPress={handlePress} buttonText={'Add To Cart'} />\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default ProductDetailsPageVThree;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n  },\n  imageContainer: {\n    position: 'relative',\n  },\n  productImage: {\n    width: '100%',\n    height: 400,\n    borderRadius: 10,\n    marginBottom: 20,\n  },\n  textOverlay: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    right: 20,\n  },\n\n  productInfo: {\n    marginBottom: 20,\n  },\n  productTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#000000',\n  },\n  productSubtitle: {\n    fontSize: 16,\n    color: '#7D7D7D',\n    marginTop: 5,\n  },\n  overlayTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 5,\n  },\n  overlaySubtitle: {\n    fontSize: 16,\n    color: '#FFFFFF',\n  },\n  section: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 10,\n    padding: 16,\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginBottom: 10,\n  },\n  colorOptions: {\n    flexDirection: 'row',\n  },\n  colorCircle: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n  },\n  selectedColorCircle: {\n    borderWidth: 2,\n    borderColor: '#000000',\n  },\n  priceSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  priceLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginRight: 10, // Added margin to separate label from price\n  },\n  divider: {\n    fontSize: 16,\n    color: '#E0E0E0',\n    marginHorizontal: 10, // Divider spacing\n  },\n  priceInfo: {\n    flex: 1,\n  },\n  price: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginBottom: 5,\n  },\n  description: {\n    fontSize: 14,\n    color: '#7D7D7D',\n    flexWrap: 'wrap',\n  },\n  buyButton: {\n    backgroundColor: '#FFFFFF',\n    borderWidth: 2,\n    borderColor: '#000000',\n    borderRadius: 25,\n    paddingVertical: 15,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  buyButtonText: {\n    color: '#000000',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\n\n\n\n\n\n// import React, { FC, useContext, useState } from 'react';\n// import { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { COLORS, SIZES } from '@/utils/theme'; // Adjust based on your theme structure\n// import { CartContext } from '@/contexts/CartContext';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n// // import SizesView from '@/components/card/SizesView';\n// import ProductColorPickerView from '@/components/views/ProductColorPickerView';\n// import SizesView from '@/components/views/SizesView';\n// import { ProductModelProps } from '@/models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';\n\n// const ProductDetailsPageVThree: FC<ProductModelProps> = (props) => {\n//   const [selectedColor, setSelectedColor] = useState<string | null>(null);\n//   const [selectedSize, setSelectedSize] = useState<string | null>(null);\n//   const { addToCart } = useContext(CartContext);\n//   const { selectedProduct } = useClientProduct();\n\n//   const colors = ['#F5F5DC', '#000000', '#A0522D'];\n//   const sizes = ['S', 'M', 'L', 'XL', 'XXL'];\n\n//   const description = selectedProduct?.description ?? \"\"\n//   return (\n//     <View style={{backgroundColor: \"white\"}}>\n//     <ScrollView contentContainerStyle={styles.container}>\n//       <Image \n//         source={{ uri: selectedProduct?.images[0] }} // Replace with actual image URI\n//         style={styles.productImage}\n//       />\n      \n//       <View style={styles.section}>\n//         <View style={styles.productInfo}>\n//           <Text style={styles.productTitle}>{selectedProduct?.name}</Text>\n//           <Text style={styles.productSubtitle}>{description.length > 11 ? description.slice(0, 11) + '...' : description}\n//           </Text>\n//         </View>\n//       </View>\n\n\n\n\n// {/* Variants  */}\n// {/* <ProductColorPickerView colors={colors} selectedColor={selectedColor} onColorSelect={setSelectedColor} /> */}    \n// {/* <SizesView sizes={sizes} selectedSize={selectedSize} onSizeSelect={setSelectedSize} /> */}\n\n\n//       <View style={styles.section}>\n//       <View style={styles.priceSection}>\n//         <Text style={styles.priceLabel}>Price</Text>\n\n//         <Text style={styles.divider}>|</Text>\n//         <View style={styles.priceInfo}>\n//         <Text style={styles.price}>{ convertToCurrency(selectedProduct?.price ?? 10000) }</Text>\n\n//           <Text style={styles.description}>\n//             {selectedProduct?.description ?? \"\"}\n//           </Text>\n//         </View>\n//       </View>\n//     </View>\n//       <TouchableOpacity style={styles.buyButton} onPress={() => {\n//           if (selectedProduct) {\n//             addToCart(selectedProduct);\n\n//           }\n//       }}>\n//         <Text style={styles.buyButtonText}>Add To Cart</Text>\n//       </TouchableOpacity>\n//     </ScrollView>\n//     </View>\n//   );\n// };\n\n// export default ProductDetailsPageVThree;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flexGrow: 1,\n//     backgroundColor: '#FFFFFF',\n//     padding: 16,\n//   },\n//    divider: {\n//     fontSize: 16,\n//     color: '#E0E0E0',\n//     marginHorizontal: 10, // Divider spacing\n//   },\n//   productImage: {\n//     width: '100%',\n//     height: 400,\n//     borderRadius: 10,\n//     marginBottom: 20,\n//   },\n//   section: {\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//     borderRadius: 10,\n//     padding: 16,\n//     marginBottom: 20,\n//   },\n//   productInfo: {\n//     marginBottom: 20,\n//   },\n//   productTitle: {\n//     fontSize: 22,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   productSubtitle: {\n//     fontSize: 16,\n//     color: '#7D7D7D',\n//     marginTop: 5,\n//   },\n//   sectionTitle: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//     marginBottom: 10,\n//   },\n//   colorOptions: {\n//     flexDirection: 'row',\n//   },\n//   colorCircle: {\n//     width: 30,\n//     height: 30,\n//     borderRadius: 15,\n//     marginRight: 10,\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//   },\n//   selectedColorCircle: {\n//     borderWidth: 2,\n//     borderColor: '#000000',\n//   },\n//   sizeOptions: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//   },\n//   sizeButton: {\n//     paddingVertical: 8,\n//     paddingHorizontal: 16,\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//     borderRadius: 5,\n//   },\n//   selectedSizeButton: {\n//     backgroundColor: '#000000',\n//   },\n//   sizeText: {\n//     fontSize: 14,\n//     color: '#000000',\n//   },\n//   selectedSizeText: {\n//     color: '#FFFFFF',\n//   },\n//   priceSection: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     justifyContent: 'space-between',\n//   },\n//   priceLabel: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   priceInfo: {\n//     flex: 1, // Allows priceInfo to take up remaining space\n//   },\n//   price: {\n//     fontSize: 28,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//     marginRight: 10,\n//   },\n//   descriptionContainer: {\n//     flex: 1,\n//   },\n//   description: {\n//     fontSize: 14,\n//     color: '#7D7D7D',\n//     flexWrap: 'wrap', // Allows text to wrap within the container\n//   },\n//   buyButton: {\n//     backgroundColor: '#FFFFFF',\n//     borderWidth: 2,\n//     borderColor: '#000000',\n//     borderRadius: 25,\n//     paddingVertical: 15,\n//     alignItems: 'center',\n//     marginTop: 20, // Added margin to ensure it's visible\n//   },\n//   buyButtonText: {\n//     color: '#000000',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n// });\n","import React, { FC, useContext } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TouchableOpacity,\n  StyleSheet,\n  Dimensions,\n  ScrollView,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Link } from \"expo-router\";\nimport { CartContext } from \"@/contexts/CartContext\";\n// import { useClientProduct } from \"@/contexts/ClientProductContext\";\nimport { ProductModelProps, SAMPLE_PRODUCT } from \"@/models/ProductModelProps\";\nimport { useClientProduct } from \"@/contexts/ClientProductContext\";\n\nconst { width } = Dimensions.get(\"window\");\n\n// const ProductDetailsPageVTwo: React.FC = () => {\n\nexport const ProductDetailsPageVTwo: FC<ProductModelProps> = () => {\n  const { addToCart } = useContext(CartContext);\n  const { selectedProduct } = useClientProduct();\n\n  // Static image URLs\n  const images = [\n    \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/rock.jpg\",\n    \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/gel.jpg\",\n    \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/waterfall.jpg\",\n  ];\n\n  return (\n    <View style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollViewContent}>\n        {/* Product Images */}\n        <ScrollView\n          horizontal\n          pagingEnabled\n          showsHorizontalScrollIndicator={false}\n          style={styles.imageCarousel}\n        >\n          {images.map((image, index) => (\n            <Image\n              key={index}\n              source={{ uri: image }}\n              style={styles.productImage}\n            />\n          ))}\n        </ScrollView>\n\n        {/* Product Info */}\n        <View style={styles.productInfo}>\n          <Text style={styles.productName}>Sample Sea Moss Product</Text>\n          <Text style={styles.productDescription}>\n            This is a sample product description that highlights key features\n            and benefits of Sea Moss products.\n          </Text>\n          <Text style={styles.productPrice}>\n            <Text style={styles.salePrice}>$149.99</Text>{\" \"}\n            <Text style={styles.originalPrice}>$199.99</Text>\n          </Text>\n\n          {/* Features */}\n          <View style={styles.featuresContainer}>\n            <Text style={styles.sectionTitle}>Features:</Text>\n            <Text style={styles.featureItem}>\n              - Rich in essential minerals and vitamins\n            </Text>\n            <Text style={styles.featureItem}>\n              - Supports overall health and wellness\n            </Text>\n            <Text style={styles.featureItem}>\n              - Can be used in various recipes and remedies\n            </Text>\n          </View>\n\n          {/* Sea Moss Benefits */}\n          <View style={styles.benefitsContainer}>\n            <Text style={styles.sectionTitle}>Benefits of Sea Moss:</Text>\n            <Text style={styles.benefitItem}>\n              - Boosts immune system and overall health\n            </Text>\n            <Text style={styles.benefitItem}>\n              - Improves digestion and gut health\n            </Text>\n            <Text style={styles.benefitItem}>\n              - Supports skin health and promotes a healthy complexion\n            </Text>\n            <Text style={styles.benefitItem}>\n              - Provides a natural source of iodine, aiding in thyroid function\n            </Text>\n            <Text style={styles.benefitItem}>\n              - Rich in Omega-3 fatty acids, which support heart health\n            </Text>\n          </View>\n\n          {/* Variants\n          <View style={styles.variantsContainer}>\n            <Text style={styles.sectionTitle}>Available Variants:</Text>\n            <View style={styles.variantItem}>\n              <Text style={styles.variantTitle}>Sea Moss Gel</Text>\n              <Text style={styles.variantDescription}>\n                A convenient, ready-to-use Sea Moss gel, perfect for adding to\n                smoothies or skincare routines.\n              </Text>\n              <Image\n                source={{\n                  uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/gel.jpg\",\n                }}\n                style={styles.variantImage}\n                resizeMode=\"cover\"\n              />\n              <Text style={styles.variantPrice}>\n                <Text style={styles.salePrice}>$129.99</Text>{\" \"}\n                <Text style={styles.originalPrice}>$149.99</Text>\n              </Text>\n            </View>\n            <View style={styles.variantItem}>\n              <Text style={styles.variantTitle}>Raw Sea Moss</Text>\n              <Text style={styles.variantDescription}>\n                Raw, organic Sea Moss, ideal for those who prefer to prepare it\n                themselves.\n              </Text>\n              <Image\n                source={{\n                  uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/rock.jpg\",\n                }}\n                style={styles.variantImage}\n                resizeMode=\"cover\"\n              />\n              <Text style={styles.variantPrice}>\n                <Text style={styles.salePrice}>$109.99</Text>{\" \"}\n                <Text style={styles.originalPrice}>$129.99</Text>\n              </Text>\n            </View>\n          </View> */}\n\n          {/* Reviews */}\n          <View style={styles.reviewsContainer}>\n            <Text style={styles.sectionTitle}>Customer Reviews:</Text>\n            <ScrollView\n              horizontal\n              showsHorizontalScrollIndicator={false}\n              style={styles.reviewsScrollView}\n            >\n              <View style={styles.reviewItem}>\n                <Text style={styles.reviewUserName}>John Doe</Text>\n                <Text style={styles.reviewTitle}>Great product!</Text>\n                <Text style={styles.reviewComment}>\n                  I really enjoyed using this Sea Moss product. Highly recommend\n                  it!\n                </Text>\n              </View>\n              <View style={styles.reviewItem}>\n                <Text style={styles.reviewUserName}>Jane Smith</Text>\n                <Text style={styles.reviewTitle}>Good value for money</Text>\n                <Text style={styles.reviewComment}>\n                  This Sea Moss offers great value for the price.\n                </Text>\n              </View>\n            </ScrollView>\n          </View>\n        </View>\n      </ScrollView>\n\n      {/* Add to Cart Button - Fixed at the Bottom */}\n\n      <TouchableOpacity\n        style={styles.addToCartButton}\n        onPress={() => {\n          if (selectedProduct) {\n            addToCart(selectedProduct);\n          }\n        }}\n      >\n        <Text style={styles.addToCartButtonText}>Add to cart</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n// Styles definition\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFF\",\n  },\n  scrollViewContent: {\n    paddingBottom: 100, // Space for the fixed button at the bottom\n  },\n  imageCarousel: {\n    height: width, // Ensure the carousel height matches the width for a square aspect ratio\n  },\n  productImage: {\n    width: width, // Full width of the screen\n    height: width, // Full width of the screen to maintain aspect ratio\n    resizeMode: \"cover\", // Cover the entire space, cropping if necessary\n  },\n  productInfo: {\n    padding: 16,\n  },\n  productName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: 8,\n  },\n  productDescription: {\n    fontSize: 16,\n    color: \"#555\",\n    marginBottom: 8,\n  },\n  productPrice: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: 16,\n  },\n  salePrice: {\n    color: \"red\",\n    fontWeight: \"bold\",\n  },\n  originalPrice: {\n    textDecorationLine: \"line-through\",\n    color: \"#888\",\n  },\n  featuresContainer: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: 8,\n  },\n  featureItem: {\n    fontSize: 14,\n    color: \"#333\",\n    marginBottom: 4,\n  },\n  benefitsContainer: {\n    marginBottom: 16,\n    padding: 16,\n    backgroundColor: \"#f0f0f0\",\n    borderRadius: 8,\n  },\n  benefitItem: {\n    fontSize: 14,\n    color: \"#333\",\n    marginBottom: 4,\n  },\n  variantsContainer: {\n    marginBottom: 16,\n  },\n  variantItem: {\n    marginBottom: 16,\n  },\n  variantTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#000\",\n  },\n  variantDescription: {\n    fontSize: 14,\n    color: \"#555\",\n    marginBottom: 4,\n  },\n  variantImage: {\n    width: width - 32,\n    height: width - 32,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  variantPrice: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#000\",\n  },\n  reviewsContainer: {\n    marginBottom: 16,\n  },\n  reviewsScrollView: {\n    flexDirection: \"row\",\n  },\n  reviewItem: {\n    width: width * 0.8, // Each review takes up 80% of the screen width\n    marginRight: 16,\n    padding: 16,\n    backgroundColor: \"#f9f9f9\",\n    borderRadius: 8,\n    // shadowColor: '#000',\n    // shadowOpacißty: 0.1,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 8,\n    elevation: 4, // For Android shadow\n  },\n  reviewUserName: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: 4,\n  },\n  reviewTitle: {\n    fontSize: 14,\n    color: \"#555\",\n    marginBottom: 4,\n  },\n  reviewComment: {\n    fontSize: 14,\n    color: \"#333\",\n  },\n  addToCartButton: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"#000\",\n    paddingVertical: 16,\n    borderRadius: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  addToCartButtonText: {\n    fontSize: 18,\n    color: \"#FFF\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default ProductDetailsPageVTwo;\n\n// import React, { useState } from 'react';\n// import {\n//   View,\n//   Text,\n//   Image,\n//   TouchableOpacity,\n//   StyleSheet,\n//   Dimensions,\n//   ScrollView,\n// } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { Link } from 'expo-router';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n\n// const { width } = Dimensions.get('window');\n\n// const ProductDetailsPageVTwo = () => {\n//   const { selectedProduct: product } = useClientProduct();\n\n//   return (\n//     <ScrollView style={styles.container}>\n//       {/* Product Images */}\n//       <ScrollView\n//         horizontal\n//         pagingEnabled\n//         showsHorizontalScrollIndicator={false}\n//         style={styles.imageCarousel}\n//       >\n//         {product?.images.map((image, index) => (\n//           <Image key={index} source={{ uri: image }} style={styles.productImage} />\n//         ))}\n//       </ScrollView>\n\n//       {/* Product Info */}\n//       <View style={styles.productInfo}>\n//         <Text style={styles.productName}>{product?.name}</Text>\n//         <Text style={styles.productDescription}>{product?.description}</Text>\n//         <Text style={styles.productPrice}>{product?.price}</Text>\n\n//         {/* Product Details */}\n//         <View style={styles.productDetails}>\n//           <Text style={styles.productDetailText}><Text style={styles.boldText}>Material: </Text>{product?.description}</Text>\n//         </View>\n\n//         {/* Add to Cart Button */}\n//         <Link href=\"/cart\" asChild>\n//           <TouchableOpacity style={styles.addToCartButton}>\n//             <Text style={styles.addToCartButtonText}>Add to cart</Text>\n//           </TouchableOpacity>\n//         </Link>\n//       </View>\n\n//       {/* Bottom Navigation Bar */}\n//       <View style={styles.bottomNavBar}>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>home</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>search</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>favourites</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>cart</Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity style={styles.navButton}>\n//           <Text style={styles.navButtonText}>account</Text>\n//         </TouchableOpacity>\n//       </View>\n//     </ScrollView>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#FFF',\n//   },\n//   imageCarousel: {\n//     height: width, // Ensure the carousel height matches the width for a square aspect ratio\n//   },\n//   productImage: {\n//     width: width, // Full width of the screen\n//     height: width, // Full width of the screen to maintain aspect ratio\n//     resizeMode: 'cover', // Cover the entire space, cropping if necessary\n//   },\n//   productInfo: {\n//     padding: 16,\n//   },\n//   productName: {\n//     fontSize: 24,\n//     fontWeight: 'bold',\n//     color: '#000',\n//     marginBottom: 8,\n//   },\n//   productDescription: {\n//     fontSize: 16,\n//     color: '#555',\n//     marginBottom: 8,\n//   },\n//   productPrice: {\n//     fontSize: 20,\n//     fontWeight: 'bold',\n//     color: '#000',\n//     marginBottom: 16,\n//   },\n//   productDetails: {\n//     marginBottom: 16,\n//   },\n//   productDetailText: {\n//     fontSize: 14,\n//     color: '#333',\n//     marginBottom: 8,\n//   },\n//   boldText: {\n//     fontWeight: 'bold',\n//   },\n//   addToCartButton: {\n//     backgroundColor: '#000',\n//     paddingVertical: 16,\n//     borderRadius: 8,\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     marginBottom: 16,\n//   },\n//   addToCartButtonText: {\n//     fontSize: 18,\n//     color: '#FFF',\n//     fontWeight: 'bold',\n//   },\n//   bottomNavBar: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//     paddingVertical: 16,\n//     paddingHorizontal: 32,\n//     backgroundColor: '#000',\n//   },\n//   navButton: {\n//     alignItems: 'center',\n//   },\n//   navButtonText: {\n//     fontSize: 14,\n//     color: '#FFF',\n//   },\n// });\n\n// export default ProductDetailsPageVTwo;\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { UserProps } from \"@/models/UserProps\";\nimport { generateUUID } from \"@/hooks/generateUUID\";\nimport { router } from \"expo-router\";\nimport { COLORS } from \"@/utils/theme\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport useFetchObject from \"@/hooks/useFetchObject\";\nimport { StoreModelProps } from \"@/models/StoreModelProps\";\nimport { getStore } from \"@/api/storeApi\";\nimport UserLoginTextFields from \"@/components/views/UserLoginTextFields\";\nimport UserRegisterTextFields from \"@/components/views/UserRegisterTextFields\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst RegisterComponentTwo = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(false);\n  // const { data: store } = useFetchObject<StoreModelProps>(() =>\n  //   getStore(CONSTANTS.store_id)\n  // );\n\n  const { store } = useClientStore()\n\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n        }}\n        style={styles.logo}\n      />\n      <Text style={styles.welcomeText}>\n        Welcome to {store?.store_name ?? \"\"}\n      </Text>\n      <Text style={styles.descriptionText}>\n        Sign up or login below to manage your project, task, and productivity\n      </Text>\n\n      <View style={styles.tabContainer}>\n        <TouchableOpacity\n          style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(true)}\n        >\n          <Text\n            style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n          >\n            Login\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(false)}\n        >\n          <Text\n            style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n          >\n            Sign Up\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {activeTabIsLogin ? (\n       <UserLoginTextFields />\n      ) : (\n       <UserRegisterTextFields />\n      )}\n    </View>\n  );\n};\n\nexport default RegisterComponentTwo;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    backgroundColor: COLORS.white,\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginTop: 50,\n    borderRadius: 13,\n  },\n  appName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: COLORS.primary,\n    marginTop: 10,\n  },\n  welcomeText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: COLORS.darkGray,\n    marginTop: 20,\n  },\n  descriptionText: {\n    fontSize: 14,\n    color: COLORS.darkGray,\n    textAlign: \"center\",\n    marginVertical: 10,\n  },\n  tabContainer: {\n    flexDirection: \"row\",\n    marginVertical: 20,\n  },\n  tab: {\n    flex: 1,\n    paddingBottom: 5,\n    alignItems: \"center\",\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: COLORS.darkGray,\n  },\n  activeTabText: {\n    color: COLORS.primary,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.lightGray,\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 10,\n    width: width - 40,\n  },\n  input: {\n    flex: 1,\n    marginLeft: 10,\n    color: COLORS.darkGray,\n  },\n  forgotPasswordText: {\n    alignSelf: \"flex-end\",\n    color: COLORS.primary,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n  },\n  signupButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: COLORS.white,\n    fontWeight: \"bold\",\n  },\n  termsText: {\n    fontSize: 12,\n    color: COLORS.darkGray,\n    textAlign: \"left\",\n    marginLeft: 10,\n    marginRight: 20,\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 10,\n  },\n  passwordCriteria: {\n    color: COLORS.darkGray,\n    fontSize: 14,\n    marginTop: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';\nimport { Ionicons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { Link, router, Stack } from 'expo-router';\nimport BannerVOne from '@/components/banner/BannerVOne';\nimport { useAuth } from '@/contexts/AuthContext';\nimport CustomButton from '@/components/buttons/WhiteButton';\nimport MyButton from '@/components/buttons/WhiteButton';\n\nconst SettingsPage = () => {\n  const insets = useSafeAreaInsets();\n\n  const { authState , onLogout } = useAuth()\n\n  const handleLogOut = async () => {\n    if (onLogout) {\n      try {\n        await onLogout();\n        router.replace('/welcome'); // Navigate to the welcome screen after logout\n      } catch (error) {\n        console.error('Logout failed:', error);\n      }\n    } else {\n      console.error('Logout function is not defined');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* <Stack.Screen options={{headerShown: false}} /> */}\n     <View  style={styles.upperSection}>\n      {/* <View style={styles.divider}/> */}\n     {/* <View style={{paddingBottom: 20}}/> */}\n     </View>\n     <ScrollView contentContainerStyle={styles.content}>\n     <Text style={styles.title}>Settings</Text>\n\n      <BannerVOne />\n     \n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>General</Text>\n          \n          <Link href={'/profile' as never} asChild>\n            <TouchableOpacity style={styles.option}>\n              <FontAwesome5 name=\"user\" size={20} color=\"black\" />\n              <Text style={styles.optionText}>Profile information</Text>\n              <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n            </TouchableOpacity>\n          </Link>\n\n{/* \n          <Link href={'settings/profile-information' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <MaterialIcons name=\"payment\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Payment methods</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link> */}\n\n          <Link href={'/appearance' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"color-palette-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Appearance</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/favorites' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"color-palette-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Favorites</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n{/* \n          <Link href={'settings/profile-information' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"notifications-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Notifications</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link> */}\n\n        </View>\n\n        {/* <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Support</Text>\n          <Link href={'/report-an-issue' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"alert-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Report an issue</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/faq' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"help-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>term</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n\n          </Link>\n\n        </View> */}\n\n\n\n<View style={styles.section}>\n          <Text style={styles.sectionTitle}>Application</Text>\n          <Link href={'/privacy-policy'} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"alert-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Privacy Policy</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/terms-of-use' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"help-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Terms of use</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          \n          </Link>\n\n        </View>\n        <MyButton\n        title=\"Log out\"\n        onPress={handleLogOut}\n        buttonStyle={styles.logoutButton}\n        textStyle={styles.logoutText}\n      />\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  upperSection: {\n  \n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#EAEAEA',\n    // paddingBottom: 20\n    // marginBottom: 20,\n  },\n\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'left',\n    marginVertical: 20,\n    marginLeft: 16,\n    paddingBottom: 20,\n  },\n  content: {\n    paddingHorizontal: 20,\n    paddingBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 4, // for Android shadow\n    marginTop: 12,\n\n  },\n  section: {\n    marginBottom: 30,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 10,\n  },\n  option: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#EAEAEA',\n  },\n  optionText: {\n    flex: 1,\n    fontSize: 16,\n    color: '#000',\n    marginLeft: 10,\n  },\n  logoutButton: {\n    backgroundColor: '#FFFFFF',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#000',\n    marginTop: 20,\n  },\n  logoutText: {\n    color: '#000',\n    fontSize: 16,\n  },\n});\n\nexport default SettingsPage;\n","import { StyleSheet, Text, View } from 'react-native';\nimport React from 'react';\nimport Head from 'expo-router/head';\n\ntype SEOHeaderProps = {\n  title: string;\n  content: string;\n};\n\n// Apply to every page\nconst SEOHeader: React.FC<SEOHeaderProps> = ({ title, content }) => {\n  return (\n    <Head>\n      <title>{title}</title>\n      <meta name=\"description\" content={content} />\n    </Head>\n  );\n};\n\nexport default SEOHeader;\n\nconst styles = StyleSheet.create({});","import React from 'react';\nimport { Pressable, StyleProp, Text, TextStyle, ViewStyle } from 'react-native';\nimport { Link } from 'expo-router';\n\ntype CustomLinkProps = {\n  url: string;\n  title: string;\n  style?: StyleProp<ViewStyle | TextStyle>; // Style prop for flexibility\n  replace?: boolean;\n  asChild?: boolean;\n};\n\nexport const CustomLink: React.FC<CustomLinkProps> = ({ url, title, style, replace, asChild }) => {\n  if (asChild) {\n    return (\n      <Link href={url as never} replace={replace}>\n        <Text style={style}>{title}</Text>\n      </Link>\n    );\n  }\n\n  return (\n    <Link href={url as never} replace={replace} asChild>\n      <Pressable>\n        <Text style={style}>{title}</Text>\n      </Pressable>\n    </Link>\n  );\n};\n\nexport default CustomLink;","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n// import CustomLink from '../../CustomLink'\nimport Head from 'expo-router/head'\nimport SEOHeader from '@/components/SEOHeader'\nimport CustomLink from '@/components/CustomLink'\n// import SEOHeader from '../../SEOHeader'\n\nconst SettingsPageWeb = () => {\n  return (\n    <>\n    {/* <Head>\n        <title>Settings</title>\n        <meta name='description' content='Change your settings' />\n    </Head> */}\n\n    <SEOHeader title={'Settings'} content={'Change your settings'} />\n      <h2>settings</h2>\n      <CustomLink url={'/'} title={'sign out'} replace />\n    </>\n  )\n}\n\nexport default SettingsPageWeb\n\nconst styles = StyleSheet.create({})","import React from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useClientStore } from '@/contexts/ClientStoreContext';\n\nexport default function WelcomePageOne() {\n\n  const {store} = useClientStore()\n  return (\n    <LinearGradient\n      colors={['#FF6B6B', '#FFD93D']}\n      style={styles.container}\n    >\n      <View style={styles.logoContainer}>\n        <Image\n          source={require('../../../../src/assets/images/logo.png')} // Replace with your logo path\n          style={styles.logo}\n          resizeMode=\"cover\"\n        />\n        <Text style={styles.title}>Welcome to {store?.store_name}</Text>\n      </View>\n      \n      <View style={styles.textContainer}>\n        <Text style={styles.subtitle}>Your gateway to a world of possibilities.</Text>\n        <Text style={styles.description}>Sign in to explore amazing features tailored just for you.</Text>\n      </View>\n\n      <TouchableOpacity style={styles.button} onPress={() => {}}>\n        <Text style={styles.buttonText}>Get Started</Text>\n        <Ionicons name=\"arrow-forward\" size={24} color=\"white\" />\n      </TouchableOpacity>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 50,\n  },\n  logo: {\n    width: 150,\n    height: 150,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginTop: 20,\n  },\n  textContainer: {\n    marginHorizontal: 40,\n    alignItems: 'center',\n  },\n  subtitle: {\n    fontSize: 20,\n    color: '#fff',\n    marginBottom: 10,\n  },\n  description: {\n    fontSize: 16,\n    color: '#fff',\n    textAlign: 'center',\n    lineHeight: 22,\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FF6B6B',\n    paddingVertical: 12,\n    paddingHorizontal: 30,\n    borderRadius: 25,\n    marginTop: 30,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginRight: 10,\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  TouchableOpacity,\n  StatusBar,\n  Modal,\n  Dimensions,\n  ActivityIndicator,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getStore } from \"@/api/storeApi\";\nimport LoginComponentOne from \"../login/LoginComponentOne\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport {\n  ClientStoreProvider,\n  useClientStore,\n} from \"@/contexts/ClientStoreContext\";\nimport { router } from \"expo-router\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\nconst { width, height } = Dimensions.get(\"screen\");\n\nexport default function WelcomePageTwo() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const { store } = useClientStore();\n  const { authState } = useAuth();\n\n  // const welcomeImage = store?.images?.welcome_image ?? \"\";\n\n  return (\n    <View style={styles.container}>\n      <StatusBar\n        barStyle=\"dark-content\"\n        translucent\n        backgroundColor=\"transparent\"\n      />\n\n      <ImageBackground\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/waterfall.jpg\",\n        }}\n        style={styles.backgroundImage}\n        resizeMode=\"cover\"\n      >\n        <View style={styles.overlay}>\n          <View style={styles.header}>\n            <Text style={styles.logoText}>{store?.store_name}</Text>\n            <Text style={styles.tagline}>\n              Nature's Superfood, Your Ultimate Wellness Companion.\n            </Text>\n          </View>\n\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={styles.buttonPrimary}\n              onPress={() => {\n                console.log(authState?.authenticated);\n                router.push(\"/login\");\n              }}\n            >\n              <Ionicons name=\"log-in-outline\" size={20} color=\"black\" />\n              <Text style={styles.buttonPrimaryText}>Proceed to Login</Text>\n              <Ionicons name=\"arrow-forward\" size={20} color=\"black\" />\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={styles.buttonSecondary}\n              onPress={() => router.push(\"/register\")}\n            >\n              <Ionicons name=\"person-add-outline\" size={20} color=\"white\" />\n              <Text style={styles.buttonSecondaryText}>New User? Sign Up</Text>\n              <Ionicons name=\"arrow-forward\" size={20} color=\"white\" />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ImageBackground>\n\n      {/* Modal for Login */}\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <TouchableOpacity\n              style={styles.closeButton}\n              onPress={() => setModalVisible(false)}\n            >\n              <Ionicons name=\"close-outline\" size={24} color=\"black\" />\n            </TouchableOpacity>\n            <LoginComponentOne />\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5F5F5\",\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5F5F5\",\n  },\n  backgroundImage: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  overlay: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.3)\", // Dark overlay for text visibility\n    paddingTop: 60,\n    paddingBottom: 40,\n    width: width,\n  },\n  header: {\n    alignItems: \"center\",\n  },\n  logoText: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  tagline: {\n    fontSize: 16,\n    color: \"white\",\n    textAlign: \"center\",\n    paddingHorizontal: 20,\n    marginTop: 10,\n  },\n  buttonContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  buttonPrimary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 30,\n    width: \"90%\",\n    justifyContent: \"space-between\",\n    marginBottom: 15,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5,\n  },\n  buttonPrimaryText: {\n    color: \"black\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  buttonSecondary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 30,\n    width: \"90%\",\n    justifyContent: \"space-between\",\n  },\n  buttonSecondaryText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  noImageContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  noImageText: {\n    fontSize: 16,\n    color: \"gray\",\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Semi-transparent background\n  },\n  modalContent: {\n    width: \"90%\",\n    padding: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    elevation: 10,\n  },\n  closeButton: {\n    alignSelf: \"flex-end\",\n  },\n});\n\n// import React from 'react';\n// import { View, Text, StyleSheet, ImageBackground, TouchableOpacity, StatusBar, Dimensions } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n\n// const { width, height } = Dimensions.get(\"screen\");\n\n// export default function WelcomePageTwo() {\n\n//   const { store } = useClientStore();\n\n//   const welcomeImage = store?.images?.welcome_image ?? \"\";\n\n//   return (\n//     <View style={styles.container}>\n//       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\n\n//       {welcomeImage ? (\n//         <ImageBackground\n//           source={{ uri: welcomeImage }}\n//           style={styles.backgroundImage}\n//           resizeMode=\"cover\"\n//         >\n//           <View style={styles.overlay}>\n//             <View style={styles.header}>\n//               <Text style={styles.logoText}>{store?.store_name}</Text>\n//               <Text style={styles.tagline}>Nature's Superfood, Your Ultimate Wellness Companion.</Text>\n//             </View>\n\n//             <View style={styles.buttonContainer}>\n//               <TouchableOpacity style={styles.buttonPrimary} onPress={() => {}}>\n//                 <Ionicons name=\"log-in-outline\" size={20} color=\"black\" />\n//                 <Text style={styles.buttonPrimaryText}>Proceed to Login</Text>\n//                 <Ionicons name=\"arrow-forward\" size={20} color=\"black\" />\n//               </TouchableOpacity>\n\n//               <TouchableOpacity style={styles.buttonSecondary} onPress={() => {}}>\n//                 <Ionicons name=\"person-add-outline\" size={20} color=\"white\" />\n//                 <Text style={styles.buttonSecondaryText}>New User? Sign Up</Text>\n//                 <Ionicons name=\"arrow-forward\" size={20} color=\"white\" />\n//               </TouchableOpacity>\n//             </View>\n//           </View>\n//         </ImageBackground>\n//       ) : (\n//         <View style={styles.noImageContainer}>\n//           <Text style={styles.noImageText}>No image available</Text>\n//         </View>\n//       )}\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     backgroundColor: '#F5F5F5',\n//   },\n//   backgroundImage: {\n//     flex: 1,\n//     width: '100%',\n//     height: '100%',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   overlay: {\n//     flex: 1,\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     backgroundColor: 'rgba(0, 0, 0, 0.3)', // Dark overlay for text visibility\n//     paddingTop: 60,\n//     paddingBottom: 40,\n//     width: width\n//   },\n//   header: {\n//     alignItems: 'center',\n//   },\n//   logoText: {\n//     fontSize: 40,\n//     fontWeight: 'bold',\n//     color: 'white',\n//   },\n//   tagline: {\n//     fontSize: 16,\n//     color: 'white',\n//     textAlign: 'center',\n//     paddingHorizontal: 20,\n//     marginTop: 10,\n//   },\n//   buttonContainer: {\n//     width: '100%',\n//     alignItems: 'center',\n//   },\n//   buttonPrimary: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     backgroundColor: 'white',\n//     paddingVertical: 15,\n//     paddingHorizontal: 30,\n//     borderRadius: 30,\n//     width: '90%',\n//     justifyContent: 'space-between',\n//     marginBottom: 15,\n//     shadowColor: '#000',\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.2,\n//     shadowRadius: 5,\n//     elevation: 5,\n//   },\n//   buttonPrimaryText: {\n//     color: 'black',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   buttonSecondary: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     backgroundColor: 'black',\n//     paddingVertical: 15,\n//     paddingHorizontal: 30,\n//     borderRadius: 30,\n//     width: '90%',\n//     justifyContent: 'space-between',\n//   },\n//   buttonSecondaryText: {\n//     color: 'white',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   noImageContainer: {\n//     flex: 1,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   noImageText: {\n//     fontSize: 16,\n//     color: 'gray',\n//   },\n// });\n","import { Link } from 'expo-router';\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { Platform } from 'react-native';\n\nexport function ExternalLink(\n  props: Omit<React.ComponentProps<typeof Link>, 'href'> & { href: string }\n) {\n  return (\n    <Link\n      target=\"_blank\"\n      {...props}\n      href={props.href as never}\n      onPress={(e) => {\n        if (Platform.OS !== 'web') {\n          // Prevent the default behavior of linking to the default browser on native.\n          e.preventDefault();\n          // Open the link in an in-app browser.\n          WebBrowser.openBrowserAsync(props.href as string);\n        }\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { Alert } from 'react-native';\nimport { useRouter } from 'expo-router';\n\ninterface AlertComponentProps {\n  title: string;\n  message: string;\n  cancelText?: string;\n  updateText?: string;\n  onCancelPress?: () => void;\n  onUpdatePress?: () => void;\n  cancelable?: boolean;\n}\n\nexport const MyAlert: React.FC<AlertComponentProps> = ({\n  title,\n  message,\n  cancelText = 'Cancel',\n  updateText = 'Update Store',\n  onCancelPress,\n  onUpdatePress,\n  cancelable = false,\n}) => {\n  const router = useRouter();\n\n  React.useEffect(() => {\n    Alert.alert(\n      title,\n      message,\n      [\n        {\n          text: cancelText,\n          onPress: onCancelPress || (() => console.log('Cancel Pressed')),\n          style: 'cancel',\n        },\n        {\n          text: updateText,\n          onPress: onUpdatePress || (() => router.push('/store')),\n        },\n      ],\n      { cancelable }\n    );\n  }, []);\n\n  return null; // This component doesn't render anything visible.\n};\n\nexport default MyAlert;\n","import React from 'react';\nimport { Pressable, StyleProp, ViewStyle, PressableProps } from 'react-native';\n// import Config from '../Config';\n\ninterface Props extends PressableProps {\n  style?: StyleProp<ViewStyle>;\n  touchOpacity?: number;\n}\n\nconst MyPressable: React.FC<Props> = ({\n  style,\n  android_ripple = { color: 'lightgrey' },\n  touchOpacity = 0.4,\n  children,\n  ...restOfProps\n}) => {\n  return (\n    <Pressable\n      style={({ pressed }) => [\n        style,\n        // { opacity: !Config.isAndroid && pressed ? touchOpacity : 1 },\n      ]}\n      android_ripple={android_ripple}\n      {...restOfProps}\n    >\n      {children}\n    </Pressable>\n  );\n};\n\nexport default MyPressable;","export const formatPhoneNumber = (phoneNumberString: string) => {\n    // Remove all non-digit characters from the phone number string\n    const cleanedPhoneNumber = phoneNumberString.replace(/\\D/g, '');\n    \n    // Check if the phone number has 11 digits (including the country code)\n    const isElevenDigits = cleanedPhoneNumber.length === 11;\n\n    // Format the phone number based on the number of digits\n    let formattedPhoneNumber;\n    if (isElevenDigits) {\n        // For 11-digit phone numbers, include the country code\n        formattedPhoneNumber = cleanedPhoneNumber.replace(/(\\d{1})(\\d{3})(\\d{3})(\\d{4})/, '+$1 ($2) $3-$4');\n    } else {\n        // For other phone numbers, format into groups of 3 digits separated by hyphens\n        formattedPhoneNumber = cleanedPhoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3');\n    }\n    \n    return formattedPhoneNumber;\n};"],"names":["BASE_URL","process","env","VITE_S3_ASSET_BUCKET_NAME","AWS_HOLDER_IMAGE","VITE_API_ID_2","VITE_REGION","VITE_API_ID","CONSTANTS","appName","holderImageWelcome","holderImageProductCard","holderImageCollectionCard","holderImageOrderCard","holderUserImage","holderCarouselImageOne","holderCarouselImageTwo","holderCarouselImageThree","holderImage","mankind_store_id","store_id","merchant_id","publishableKeyLive","publishableKeyTest","TOKEN_KEY","USER_KEY","AUTHENTICATED_KEY","AuthContext","createContext","undefined","useAuth","context","useContext","Error","AuthProvider","children","authState","setAuthState","useState","user","token","authenticated","useEffect","async","SecureStore","getItemAsync","userString","JSON","parse","axios","defaults","headers","common","error","console","loadUserData","updateUserProfile","updatedUser","put","id","Authorization","updatedUserData","setItemAsync","stringify","log","response","data","msg","_jsx","Provider","value","onRegister","userData","uuid","v4","toString","post","onLogin","email","password","result","onLogout","deleteItemAsync","AsyncStorage","removeItem","addToFavorites","itemId","updatedFavorites","favoriteItems","removeFromFavorites","filter","fav","isFavorite","includes","productsApi","create","baseURL","params","tableName","showFilteredItems","ClientProductContext","useClientProduct","ClientProductProvider","products","setProducts","selectedProduct","setSelectedProduct","isLoading","setIsLoading","setError","getClientProducts","updateClientProduct","product","prevProducts","map","o","message","store_owner_id","storeID","get","getProducts","fetchedProducts","addClientProduct","postProduct","router","push","removeClientProduct","productId","delete","deleteProduct","selectProduct","CartContext","carts","addToCart","decreaseFromCart","totalSum","totalTax","totalShipping","grandTotal","deleteItemFromCart","quantity","clearData","CartProvider","setCarts","setTotalSum","setTotalShipping","setQuantity","loadCartItems","storedCarts","getItem","parsedCarts","calculateTotalSum","calculateGrandTotal","total","reduce","sum","item","price","calculateShipping","itemExistIndex","findIndex","cart","updatedCarts","setItem","newCartItem","newCartItems","jsx","ordersApi","OrderContext","useClientOrder","OrderProvider","orders","setOrders","selectedOrder","setSelectedOrder","updateOrder","order","prevOrders","addOrder","postOrder","removeOrder","orderId","deleteOrder","getClientOrders","getOrders","fetchedOrders","selectOrder","mankindProductsApi","MankindProductContext","collectionsApi","CollectionContext","CollectionProvider","collections","setCollections","selectedCollection","setSelectedCollection","updateCollection","collection","prevCollections","addCollection","postCollection","removeCollection","collectionId","deleteCollection","getClientCollections","getCollections","fetchedCollections","selectCollection","storesApi","ClientStoreContext","useClientStore","ClientStoreProvider","store","setStore","selectedStore","setSelectedStore","getClientStore","getStore","addStore","newStore","removeStore","selectStore","authApi","AppUserContext","ThemeContext","CURRENCY_FORMATTER","Intl","NumberFormat","currency","style","convertToCurrency","number","format","generateUUID","idLength","characters","i","charAt","Math","floor","random","stripeConverter","amountInCents","useClientOnlyValue","server","client","ROUTES","onboarding_Page","login","register","height","width","Dimensions","COLORS","light","text","background","tint","tabIconDefault","tabIconSelected","cardBackground","cardText","cardSecondaryText","cardPrice","cardBorder","dark","primary","secondary","tertiary","darkGray","green","forestGreen","lightGray","gray","gray2","gray3","offwhite","white","black","blue","red","orange","lightWhite","backgroundLight","backgroundMedium","backgroundDark","SIZES","xSmall","small","medium","large","xLarge","xxLarge","BannerVOne","View","styles","container","_jsxs","bannerSection","Text","bannerTitle","bannerSubtitle","TouchableOpacity","flexDirection","onPress","editPreferences","Ionicons","name","size","color","arrow","StyleSheet","backgroundColor","borderRadius","padding","marginBottom","fontSize","fontWeight","marginLeft","marginTop","Divider","divider","flex","paddingHorizontal","header","justifyContent","time","statusIcons","alignItems","content","title","subtitleContainer","subtitle","arrowIcon","button","buttonText","image","footer","footerText","footerStats","MyButton","buttonStyle","textStyle","marginEnd","imageContainer","overflow","aspectRatio","resizeMode","details","fontFamily","supplier","addBtn","position","bottom","right","ProductCardView","useNavigation","Link","href","asChild","jsxs","Image","source","uri","images","numberOfLines","color_code","item_type","borderWidth","borderColor","shadowOpacity","shadowColor","TalentCard","talentCard","profileImage","talentInfo","talentName","talentTitle","socialIcons","socialIcon","recommendation","experienceSection","experienceLabel","experienceValue","openToSection","openToLabel","openToValue","skillsSection","skill","chatButton","chatButtonText","scrollViewContent","paddingTop","headerTitle","searchSection","paddingVertical","searchInput","filterIcon","talentCount","marginRight","textAlign","deleteContainer","deleteLabel","deleteDescription","deleteButton","deleteButtonText","SearchBarVOne","TextInput","placeholder","placeholderTextColor","filterSection","paddingLeft","paddingRight","ProductRow","ActivityIndicator","errorContainer","errorText","_Fragment","FlatList","keyExtractor","renderItem","horizontal","contentContainerStyle","columnGap","selectedProductContainer","selectedProductText","TopSectionHeaderV1","line1","store_name","line2","line3","welcomeTxtStyle","marginHorizontal","Carousel","animatedValue","useRef","Animated","Value","current","mankindStore","storeImages","about_object_image","doubleImageHero_left_image","profile_image","topContainer","showsHorizontalScrollIndicator","onScroll","event","nativeEvent","contentOffset","x","useNativeDriver","pagingEnabled","_","index","bottomContainer","inputRange","dotScale","interpolate","outputRange","extrapolate","dotContainer","borderStartColor","PagingDot","scale","pagingDot","transform","SectionHeader","store_type","appBarWrapper","appBar","location","cartCount","zIndex","cartNumber","SearchBarVOneButton","path","useRouter","Feather","searchIcon","TopHomeSeaction","isMenuVisible","setIsMenuVisible","MotiView","from","opacity","translateY","animate","transition","type","duration","delay","headerText","menuIcon","prev","titleContainer","mainTitle","subTitle","productList","productItem","welcome_image","translateX","description","shopNowButton","shopNowButtonText","lineHeight","top","shadowOffset","shadowRadius","elevation","letterSpacing","textTransform","card","marginVertical","healthTip","fontStyle","CoreLayout","Stack","screenOptions","headerShown","Screen","options","presentation","AppProviders","TabBarIcon","props","FontAwesome","upperSection","paddingBottom","section","sectionTitle","option","borderBottomWidth","borderBottomColor","optionText","logoutButton","logoutText","generalStyles","center","CartCard","img","cardContent","rating","SimpleLineIcons","ratingText","circleSizeContainer","circle","sizeCircle","sizeText","paymentApi","stripe_id","PaymentPayScreen","ready","setReady","clientSecret","setClientSecret","isPlatformPaySupported","confirmPlatformPayPayment","usePlatformPay","useFocusEffect","React","useCallback","setup","Alert","alert","Platform","OS","paymentData","amount","shipping_fee","shippingAmount","app_name","paymentJsonProps","createPaymentIntent","StripeProvider","publishableKey","merchantIdentifier","PlatformPayButton","applePay","cartItems","label","String","paymentType","PlatformPay","PaymentType","Immediate","merchantCountryCode","currencyCode","googlePay","testEnv","merchantName","billingAddressConfig","BillingAddressFormat","Full","isPhoneNumberRequired","isRequired","code","disabled","payButton","ButtonType","Buy","headerContainer","priceContainer","priceAndTitle","checkoutContainer","ClientOrderCard","status","setStatus","order_status","body","icon","to_address","date","order_placed_date","statusContainer","getStatusStyle","fulfillOrderStatus","markAsShippedStatus","shippedStatus","defaultStatus","sectionHeader","detailsLink","detailsLinkText","textDecorationLine","searchContainer","alignContent","searchWrapper","searchBtn","list","SAMPLE_ORDER_ITEMS","sku","total_price","length","weight","weight_unit","distance_unit","net_weight","value_amount","value_currency","origin_country","eccn_ear99","FormInput","onChangeText","keyboardType","multiline","input","textArea","formContainer","textAlignVertical","submitButton","submitButtonText","ClientProductCard","active","createdOn","activeStatus","inactiveStatus","collectionsList","cardImage","cardDetails","cardTitle","cardArtist","categories","categoryList","maxHeight","categoryContainer","categoryButton","selectedCategoryButton","categoryText","selectedCategoryText","promoContainer","promoImage","promoTextContainer","left","promoTitle","promoSubtitle","promoDiscount","productListContainer","productContainer","productCard","margin","productImage","productPrice","productName","emptyMessage","LoginComponentOne","setName","setEmail","setPassword","showAlert","loginAction","replace","navError","imgContainer","form","secureTextEntry","Button","store_ids","onboardingQ1","onboardingQ2","onboardingQ3","onboardingQ4","affiliate_link","role","birthday","todo_completed","username","phone_number","gender","address_city","address_state","location_history","current_notification","notifications","payment_due","payment_due_date","payment_due_day","payment_monthly_amount","device_id","device_os_version","device_model","device_ip_address","device_battery_level","device_battery_statue","device_network_connectio_type","loyalty_date","payment_history_total","subscription_id","paid_subscriber","newsletter_subscriber","notification_subscriber","left_review","review_stars","reviews","testimonials","notify_arn","owner_notify_arn","gap","UserLoginTextFields","showPassword","setShowPassword","inputContainer","autoCapitalize","autoComplete","forgotPasswordText","loginButton","loginButtonText","logo","welcomeText","descriptionText","tabContainer","tab","activeTab","tabText","activeTabText","alignSelf","signupButton","termsText","checkboxContainer","passwordCriteria","UserRegisterTextFields","confirmedpassword","setConfirmedPassword","showConfirmPassword","setShowConfirmPassword","prevState","initialSlides","imageFrom","imageTo","imageTransition","textFrom","textTo","textTransition","Slide","resetKey","StatusBar","textContainer","flatListContent","maxWidth","indicatorContainer","indicator","buttonContainer","navigationButtons","skipButton","buttonSpacing","btnSkipAndNext","btn","btnText","skipText","detailsContainer","sectionSpacing","productTitle","productDescription","subscriptionText","previewButton","previewButtonText","variantContainer","variantItem","variantImage","variantDetails","variantTitle","variantColor","variantPrice","variantDescription","sizingContainer","sizingItem","sizingText","inventoryText","sizingPrice","reviewsContainer","reviewItem","reviewUserName","reviewTitle","reviewComment","checkoutButton","checkoutButtonText","GlowButton","isPressed","setIsPressed","glow","buyButton","setTimeout","buyButtonText","flexGrow","textOverlay","productInfo","productSubtitle","overlayTitle","overlaySubtitle","colorOptions","colorCircle","selectedColorCircle","priceSection","priceLabel","priceInfo","flexWrap","imageCarousel","salePrice","originalPrice","featuresContainer","featureItem","benefitsContainer","benefitItem","variantsContainer","reviewsScrollView","addToCartButton","addToCartButtonText","SEOHeader","Head","CustomLink","url","Pressable","logoContainer","loadingContainer","backgroundImage","overlay","logoText","tagline","buttonPrimary","buttonPrimaryText","buttonSecondary","buttonSecondaryText","noImageContainer","noImageText","modalContainer","modalContent","closeButton","triggerValueChange","setTriggerValueChange","showsVerticalScrollIndicator","ListHeaderComponent","delteItemFromCart","ListFooterComponent","Fragment","require","orderDetails","setOrderDetails","setTotal","address","setAddress","addressZip","setAddressZip","addressState","setAddressState","addressCity","setAddressCity","phoneNumber","setPhoneNumber","orderPlacedDate","setOrderPlacedDate","orderCompletedDate","setOrderCompletedDate","streetOne","zip","state","city","phone","order_completed_date","ScrollView","Linking","openURL","order_created_date","order_started_date","cancelable","colorScheme","useColorScheme","headerRight","pressed","productDetails","setProductDetails","useClientCollection","selectedCategory","setSelectedCategory","filteredProducts","toLowerCase","numColumns","ListEmptyComponent","setTitle","note","setNote","to_address_name","setTo_address_name","to_address_streetOne","setTo_address_streetOne","to_address_streetTwo","setTo_address_streetTwo","to_address_city","setTo_address_city","to_address_state","setTo_address_state","to_address_zip","setTo_address_zip","to_address_country","setTo_address_country","to_address_phone","setTo_address_phone","to_address_email","setTo_address_email","test","newOrder","items","userId","order_history","parseFloat","net_total","courier","shipping_label","return_label","from_address","streetTwo","country","is_residential","parcel","mass_unit","metadata","coupon_code","referred_by","statement_descriptor","budget","Date","toISOString","tax","stripe_fee","afm_fee","shipping_cost","discount_amount","setPrice","brand","setBrand","category","setCategory","setSku","newProduct","on_sale","sale_price","slug","parseInt","icon_name","included","materials","tags","views","likes","isLiked","condition","features","variant_type","variant_selected","variants","last_updated","ingredients","inventory","sizes","year_made","target","e","preventDefault","WebBrowser","openBrowserAsync","activeTabIsLogin","setActiveTabIsLogin","getMankindProducts","gmP","addProduct","removeProduct","cancelText","updateText","onCancelPress","onUpdatePress","android_ripple","touchOpacity","restOfProps","currentSlideIndex","setCurrentSlideIndex","setResetKey","ref","slides","setSlides","goToNextSlide","nextSlideIndex","offset","scrollToOffset","prevKey","skip","lastSlideIndex","SafeAreaView","onMomentumScrollEnd","contentOffsetX","currentIndex","round","activeOpacity","useLocalSearchParams","variant","review","userName","comment","slice","GlitterButton","theme","DarkTheme","DefaultTheme","ThemeProvider","iconName","FontAwesome5","useSafeAreaInsets","Tabs","tabBarActiveTintColor","tabBarIcon","LinearGradient","colors","modalVisible","setModalVisible","barStyle","translucent","ImageBackground","Modal","animationType","transparent","visible","onRequestClose","phoneNumberString","cleanedPhoneNumber","formattedPhoneNumber"],"mappings":"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"}